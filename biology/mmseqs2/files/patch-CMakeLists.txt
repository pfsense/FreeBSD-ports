--- CMakeLists.txt.orig	2021-06-24 14:37:49 UTC
+++ CMakeLists.txt
@@ -50,30 +50,19 @@ set(MMSEQS_CXX_FLAGS "-fsigned-char")
 # SIMD instruction sets support
 set(MMSEQS_ARCH "")
 if (HAVE_AVX2)
-    if (CMAKE_COMPILER_IS_CLANG)
-        set(MMSEQS_ARCH "${MMSEQS_ARCH} -mavx2 -mcx16")
-    else ()
-        set(MMSEQS_ARCH "${MMSEQS_ARCH} -mavx2 -mcx16 -Wa,-q")
-    endif ()
     set(X64 1)
 elseif (HAVE_SSE4_1)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -msse4.1 -mcx16")
     set(X64 1)
 elseif (HAVE_SSE2)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -msse2")
     set(DISABLE_IPS4O 1)
     set(X64 1)
 elseif (HAVE_POWER9)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -mcpu=power9 -mvsx")
     set(PPC64 1)
 elseif (HAVE_POWER8)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -mcpu=power8 -mvsx")
     set(PPC64 1)
 elseif (HAVE_ARM8)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -march=armv8-a+simd")
     set(ARM 1)
 elseif (HAVE_S390X)
-    set(MMSEQS_ARCH "${MMSEQS_ARCH} -mzarch -march=z14")
     set(ZARCH 1)
 endif ()
 
@@ -105,19 +94,6 @@ if (NATIVE_ARCH AND (MMSEQS_ARCH STREQUAL ""))
         endif ()
         if (PPC64)
             set(MMSEQS_ARCH "-mcpu=native")
-        else ()
-            # clang has a problem with march=native on travis
-            if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.0.0")
-                set(MMSEQS_ARCH "${SSE_FLAGS}")
-            else()
-                set(MMSEQS_ARCH "-march=native")
-            endif()
-        endif ()
-    else ()
-        if (PPC64)
-            set(MMSEQS_ARCH "-mcpu=native")
-        else ()
-            set(MMSEQS_ARCH "-march=native")
         endif ()
     endif ()
 endif ()
