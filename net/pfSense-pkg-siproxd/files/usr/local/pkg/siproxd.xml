<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE packagegui SYSTEM "../schema/packages.dtd">
<?xml-stylesheet type="text/xsl" href="../xsl/package.xsl"?>
<packagegui>
	<copyright>
	<![CDATA[
/*
 * siproxd.xml
 *
 * part of pfSense (https://www.pfsense.org)
 * Copyright (c) 2006-2020 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
	]]>
	</copyright>
	<name>siproxdsettings</name>
	<title>siproxd: Settings</title>
	<include_file>/usr/local/pkg/siproxd.inc</include_file>
	<aftersaveredirect>/pkg_edit.php?xml=siproxd.xml</aftersaveredirect>
	<menu>
		<name>siproxd</name>
		<section>Services</section>
		<url>/pkg_edit.php?xml=siproxd.xml</url>
	</menu>
	<service>
		<name>siproxd</name>
		<rcfile>siproxd.sh</rcfile>
		<executable>siproxd</executable>
		<description>Proxy/Masquerading Daemon for SIP</description>
	</service>
	<tabs>
		<tab>
			<text>Settings</text>
			<url>/pkg_edit.php?xml=siproxd.xml</url>
			<active/>
		</tab>
		<tab>
			<text>Users</text>
			<url>/pkg.php?xml=siproxdusers.xml</url>
		</tab>
		<tab>
			<text>Registered Phones</text>
			<url>/siproxd_registered_phones.php</url>
		</tab>
	</tabs>
	<fields>
		<field>
			<fielddescr>Enable siproxd</fielddescr>
			<fieldname>sipenable</fieldname>
			<description>Enable or disable siproxd.</description>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Inbound Interface</fielddescr>
			<fieldname>if_inbound</fieldname>
			<description>Select the inbound interface.</description>
			<type>interfaces_selection</type>
			<showvirtualips/>
		</field>
		<field>
			<fielddescr>Outbound Interface</fielddescr>
			<fieldname>if_outbound</fieldname>
			<description>Select the outbound interface.</description>
			<type>interfaces_selection</type>
			<showvirtualips/>
		</field>
		<field>
			<name>SIP Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Listening Port</fielddescr>
			<fieldname>port</fieldname>
			<description>
				<![CDATA[
				Enter the port on which to listen for SIP traffic (default 5060).<br />
				<strong> WARNING: Do not change this unless you know what you're doing.</strong>
				]]>
			</description>
			<type>input</type>
			<default_value>5060</default_value>
		</field>
		<field>
			<fielddescr>Allow Registration from</fielddescr>
			<fieldname>hosts_allow_reg</fieldname>
			<description>
				<![CDATA[
				List of etworks from which we accept registrations. Empty means, allow from everywhere. 
				Note that registrations are <strong>ONLY</strong> allowed from INBOUND! 
				(Default: allow all)
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Allow SIP Traffic from</fielddescr>
			<fieldname>hosts_allow_sip</fieldname>
			<description>
				<![CDATA[
				List of networks from which we accept SIP traffic. Empty means, allow from everywhere. 
				(Default: allow all)
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Deny SIP Traffic from</fielddescr>
			<fieldname>hosts_deny_sip</fieldname>
			<description>
				<![CDATA[
				List of networks from which we deny SIP traffic. Empty means, no blocked networks. 
				Note: The DENY list takes precedence over the ALLOW lists. 
				(Default: no deny list)
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Default Expiration Timeout</fielddescr>
			<fieldname>defaulttimeout</fieldname>
			<description>If a REGISTER request does not contain an Expires header or expires= parameter, this number of seconds will be used and reported back to the UA in the answer.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>User-Agent Masquerading</fielddescr>
			<fieldname>ua_string</fieldname>
			<description>
				<![CDATA[
				Masquerade all User-Agent identifiers from local UAs with the string provided here.<br />
				Empty means no substitution.
				]]>
			</description>
			<sethelp>
				<![CDATA[
				Siproxd can masquerade the User Agent string of your local UAs.
				Useful for Providers that do not work with some specific UAs
				(e.g. sipcall.ch - it does not work if your outgoing SIP
				traffic contains an Asterisk UA string...).
				Default is to do no replacement.
				]]>
			</sethelp>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Use ;rport in via header</fielddescr>
			<fieldname>use_rport</fieldname>
			<description>
				<![CDATA[
				Add a ;rport targ to Via headers.<br />
				May be required in some cases where you have a NAT router that remaps the source port 5060 
				to something different and the registrar sends back the responses to port 5060.
				]]>
			</description>
			<type>select</type>
			<options>
				<option><name>Do not add ;rport to via Header</name><value>0</value></option>
				<option><name>Add ;rport to INCOMING via Header</name><value>1</value></option>
				<option><name>Add ;rport to OUTGOING via Header</name><value>2</value></option>
				<option><name>Add ;rport to OUTGOING and INCOMING via Headers</name><value>3</value></option>
			</options>
			<default_value>0</default_value>
		</field>
		<field>
			<name>SIP over TCP Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>TCP Inactivity Timeout</fielddescr>
			<fieldname>tcp_timeout</fieldname>
			<description>
				<![CDATA[
				Inactivity timeout (seconds). After that an idling TCP connection is disconnected.<br />
				NOTE: Making this too short may cause multiple parallel registrations for the same phone. 
				This timeout must be set larger than the used registration interval.<br />
				Default: 600 sec
				]]>
			</description>
			<type>input</type>
			<default_value>600</default_value>
		</field>
		<field>
			<fielddescr>TCP Connect Timeout</fielddescr>
			<fieldname>tcp_connect_timeout</fieldname>
			<description>
				<![CDATA[
				Defines how many msecs siproxd will wait for a successful connect when establishing 
				an outgoing SIP signalling connection.<br />
				This should be kept as short as possible as waiting for an TCP connection to establish 
				is a BLOCKING operation - no other SIP messages are processed while waiting for a connect 
				to succeed (RTP is not affected).<br />
				Default: 500 msec
				]]>
			</description>
			<type>input</type>
			<default_value>500</default_value>
		</field>
		<field>
			<fielddescr>TCP Keepalive</fielddescr>
			<fieldname>tcp_keepalive</fieldname>
			<description>
				<![CDATA[
				For TCP SIP signalling, if > 0 empty SIP packets will be sent every 'n' seconds to keep 
				the connection alive.<br />
				Default is off.
				]]>
			</description>
			<type>input</type>
			<default_value>0</default_value>
		</field>
		<field>
			<name>RTP Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable RTP Proxy</fielddescr>
			<fieldname>rtpenable</fieldname>
			<description>Enable or disable the RTP proxy. (Default: enabled)</description>
			<type>select</type>
			<options>
				<option><name>Enable</name><value>1</value></option>
				<option><name>Disable</name><value>0</value></option>
			</options>
			<default_value>1</default_value>
		</field>
		<field>
			<fielddescr>RTP Port Range (Lower)</fielddescr>
			<fieldname>rtplower</fieldname>
			<description>Enter the bottom edge of the port range siproxd will allocate for incoming RTP traffic. This range must not be blocked by the firewall. (Default: 7070)</description>
			<type>input</type>
			<default_value>7070</default_value>
		</field>
		<field>
			<fielddescr>RTP Port Range (Upper)</fielddescr>
			<fieldname>rtpupper</fieldname>
			<description>Enter the top edge of the port range siproxd will allocate for incoming RTP traffic. This range must not be blocked by the firewall. (Default: 7079)</description>
			<type>input</type>
			<default_value>7079</default_value>
		</field>
		<field>
			<fielddescr>RTP Stream Timeout</fielddescr>
			<fieldname>rtptimeout</fieldname>
			<description>After this number of seconds, an RTP stream is considered dead and proxying it will be stopped. (Default: 300sec)</description>
			<type>input</type>
			<default_value>300</default_value>
		</field>
		<field>
			<name>Dejittering Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Input Dejitter</fielddescr>
			<fieldname>rtp_input_dejitter</fieldname>
			<description>Artificial delay to be used to de-jitter RTP data streams. This time is in microseconds. 0 - completely disable dejitter (default)</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Output Dejitter</fielddescr>
			<fieldname>rtp_output_dejitter</fieldname>
			<description>Artificial delay to be used to de-jitter RTP data streams. This time is in microseconds. 0 - completely disable dejitter (default)</description>
			<type>input</type>
		</field>
		<field>
			<name>Proxy Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Proxy Authentication</fielddescr>
			<fieldname>authentication</fieldname>
			<description>Enable Proxy Authentication</description>
			<sethelp>If checked, clients will be forced to authenticate themselves at the proxy (for registration only).</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Outbound Proxy Hostname</fielddescr>
			<fieldname>outboundproxyhost</fieldname>
			<description>Enter the hostname of an outbound proxy to send all traffic to. This is only useful if you have multiple masquerading firewalls to cross.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Outbound Proxy Port</fielddescr>
			<fieldname>outboundproxyport</fieldname>
			<description>Enter the port of the outbound proxy to send all traffic to. This is only useful if you have multiple masquerading firewalls to cross.</description>
			<type>input</type>
		</field>
		<field>
			<name>DSCP Settings</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Expedited SIP Forwarding</fielddescr>
			<fieldname>expeditedsipforwarding</fieldname>
			<description>Enable DSCP tagging of SIP traffic</description>
			<sethelp>
				<![CDATA[
				This service is designed to allow ISPs to offer a service with attributes similar to a "leased line".<br />
				This service offers the ULTIMATE IN LOW LOSS, LOW LATENCY AND LOW JITTER by ensuring that there is always sufficient room in output queues for the contracted expedited forwarding traffic.
				]]>
			</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Expedited RTP Forwarding</fielddescr>
			<fieldname>expeditedforwarding</fieldname>
			<description>Enable DSCP tagging of RTP traffic</description>
			<sethelp>
				<![CDATA[
				This service is designed to allow ISPs to offer a service with attributes similar to a "leased line".<br />
				This service offers the ULTIMATE IN LOW LOSS, LOW LATENCY AND LOW JITTER by ensuring that there is always sufficient room in output queues for the contracted expedited forwarding traffic.
				]]>
			</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<name>Plugin Settings - Default Target</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable Default Target Plugin</fielddescr>
			<fieldname>plugin_defaulttarget</fieldname>
			<description>Redirect unknown calls to a specified target.</description>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Default Target</fielddescr>
			<fieldname>plugin_defaulttarget_target</fieldname>
			<description>Target must be a full SIP URI with the syntax sip:user@host[:port]</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Log Redirected Calls</fielddescr>
			<fieldname>plugin_defaulttarget_log</fieldname>
			<description>Log redirected calls.</description>
			<type>checkbox</type>
		</field>
		<field>
			<name>Plugin Settings - Fix bogus VIA Headers</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable Bogus Via Plugin</fielddescr>
			<fieldname>plugin_fix_bogus_via</fieldname>
			<description>Enable the Fix Bogus Via Plugin</description>
			<sethelp>
				<![CDATA[
				If enabled, incoming (from public network) SIP messages are checked for broken SIP Via headers.<br />
				If the IP address in the latest Via Header is part of the list below, it will be replaced by the IP address where the SIP message has been received from.
				]]>
			</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Bogus Via Networks</fielddescr>
			<fieldname>plugin_fix_bogus_via_networks</fieldname>
			<description>
				<![CDATA[
				Comma separated list of networks which should have their via headers rewritten.<br />
				Example: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<name>Plugin Settings - STUN</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>STUN Plugin</fielddescr>
			<fieldname>plugin_stun</fieldname>
			<description>Enable STUN Plugin</description>
			<sethelp>Uses an external STUN server to determine the public IP address of siproxd. Useful for "in-front-of-NAT-router" scenarios.</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>STUN Hostname</fielddescr>
			<fieldname>plugin_stun_server</fieldname>
			<description>External STUN server hostname.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>STUN Port</fielddescr>
			<fieldname>plugin_stun_port</fieldname>
			<description>External STUN server port.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>STUN Period</fielddescr>
			<fieldname>plugin_stun_period</fieldname>
			<description>Period in seconds to request IP info from STUN server.</description>
			<type>input</type>
		</field>
		<field>
			<name>Plugin Settings - Fix DTAG</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable fix_DTAG Plugin</fielddescr>
			<fieldname>plugin_fix_dtag</fieldname>
			<description>Work around some issues with DTAG (Deutsche Telekom AG) as REGISTRAR.</description>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>List of remote Networks to apply DTAG workaround</fielddescr>
			<fieldname>plugin_fix_dtag_networks</fieldname>
			<description>
				<![CDATA[
				Comma separated list of networks where DTAG REGISTRARs are located.<br />
				Example: 217.0.23.100/32
				]]>
			</description>
			<type>input</type>
			<default_value>217.0.23.100/32</default_value>
		</field>
		<field>
			<name>Plugin Settings - Strip Headers</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable Strip Header Plugin</fielddescr>
			<fieldname>plugin_stripheader</fieldname>
			<description>Unconditionally strip the specified SIP header from the packet.</description>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Header to remove (1)</fielddescr>
			<fieldname>plugin_stripheader_remove1</fieldname>
			<description>
				<![CDATA[
				Unconditionally strip the specified SIP header from the packet.
				May be used to workaround IP fragmentation by removing "unimportant"
				SIP headers - this is clearly a ugly hack but sometimes saves one
				from headache.<br />
				Format is &amp;lt;header&amp;gt;[:&amp;lt;value&amp;gt;], the :&amp;lt;value&amp;gt; part is optional - if not 
				present the full header will be removed.
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Header to remove (2)</fielddescr>
			<fieldname>plugin_stripheader_remove2</fieldname>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Header to remove (3)</fielddescr>
			<fieldname>plugin_stripheader_remove3</fieldname>
			<type>input</type>
		</field>
		<field>
			<name>Plugin Settings - Codec Filter</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Enable Codec Filter Plugin</fielddescr>
                        <fieldname>plugin_codecfilter</fieldname>
                        <description> Removes blacklisted codecs from any passing SDP payload in both (incoming and outgoing) directions.</description>
                        <type>checkbox</type>
                </field>
		<field>
			<fielddescr>Codec to remove (1)</fielddescr>
			<fieldname>plugin_codecfilter_blacklist1</fieldname>
			<description>
				<![CDATA[
				Removes blacklisted (plugin_codecfilter_blacklist) codecs 
				from any passing SDP payload in both (incoming and outgoing)
				directions. This allows the proxy to force the exclusion of
				particular codecs in the negotiation between a local UA and a 
				remote side.<br />
				The match is done as case-insensitive substring match. The config 
				string "726" would match the codecs "G726-32/800", "g726", etc.
				]]>
			</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Codec to remove (2)</fielddescr>
			<fieldname>plugin_codecfilter_blacklist2</fieldname>
			<type>input</type>
		</field>
		<field>
			<fielddescr>Codec to remove (3)</fielddescr>
			<fieldname>plugin_codecfilter_blacklist3</fieldname>
			<type>input</type>
		</field>
		<field>
			<name>Plugin Settings - Fix Anonymous Calls on Fritzboxes</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>fix_fbox_anoncall Plugin</fielddescr>
			<fieldname>plugin_fix_fbox_anoncall</fieldname>
			<description>Enable fix_fbox_anoncall Plugin</description>
			<sethelp>Fixes incoming anonymous phone calls with local Fritzbox UAs</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Local Networks to apply workaround</fielddescr>
			<fieldname>plugin_fix_fbox_anoncall_networks</fieldname>
			<description>
				<![CDATA[
				Comma separated list of local networks which contain Fritzbox UAs that need fixing.<br />
				Example: 192.168.0.0/16,10.0.0.0/8,172.16.0.0/20
				]]>
			</description>
			<type>input</type>
			<default_value>192.168.0.0/16,10.0.0.0/8,172.16.0.0/20</default_value>
		</field>
		<field>
			<name>Plugin Settings - SIP Trunk</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>SIP Trunk</fielddescr>
			<fieldname>plugin_siptrunk</fieldname>
			<description>Enable SIP Trunk Plugin</description>
			<sethelp>Plugin to handle SIP Trunks where using *one* single SIP account to which a whole number block is routed. This means an incoming INVITE does carry the target number (in SIP URI or To: header field) but does not really carry any clear indications to which account it belongs to.</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>SIP account</fielddescr>
			<fieldname>plugin_siptrunk_account</fieldname>
			<description>SIP account in the form of 'sip:user@host', identical as used for registration.</description>
			<type>input</type>
		</field>
		<field>
			<fielddescr>REGEX number</fielddescr>
			<fieldname>plugin_siptrunk_numbers_regex</fieldname>
			<description>Regular expression that matches the whole number block associated with this account. Example: ^555123(10[0-9]|11[012])$</description>
			<type>input</type>
		</field>
		<field>
			<name>Debug Options</name>
			<type>listtopic</type>
		</field>
		<field>
			<fielddescr>Debug Level</fielddescr>
			<fieldname>debug_level</fieldname>
			<type>select</type>
			<size>1</size>
			<options>
				<option><value>0x00000000</value><name>No Debug Info</name></option>
				<option><value>0x00000001</value><name>babble (like entering/leaving func)</name></option>
				<option><value>0x00000002</value><name>network</name></option>
				<option><value>0x00000004</value><name>SIP manipulations</name></option>
				<option><value>0x00000008</value><name>Client registration</name></option>
				<option><value>0x00000010</value><name>non specified class</name></option>
				<option><value>0x00000020</value><name>proxy</name></option>
				<option><value>0x00000040</value><name>DNS stuff</name></option>
				<option><value>0x00000080</value><name>network traffic</name></option>
				<option><value>0x00000100</value><name>configuration</name></option>
				<option><value>0x00000200</value><name>RTP proxy</name></option>
				<option><value>0x00000400</value><name>Access list evaluation</name></option>
				<option><value>0x00000800</value><name>Authentication</name></option>
				<option><value>0x00001000</value><name>Plugins</name></option>
				<option><value>0x00002000</value><name>RTP babble</name></option>
				<option><value>-1</value><name>Everything</name></option>
			</options>
		</field>
		<field>
			<fielddescr>TCP Debug Port</fielddescr>
			<fieldname>debug_port</fieldname>
			<description>
				<![CDATA[
				You may connect to this port from a remote machine and receive debug output. This allows better creation of debug output on embedded systems that do not have enough memory for large disk files.<br />
				NOTE: Port number 0 means this feature is disabled.
				]]>
			</description>
			<type>input</type>
		</field>
	</fields>
	<custom_php_install_command>
		install_package_siproxd();
	</custom_php_install_command>
	<custom_php_deinstall_command>
		deinstall_package_siproxd();
	</custom_php_deinstall_command>
	<custom_add_php_command>
		sync_package_siproxd();
	</custom_add_php_command>
	<custom_php_resync_config_command>
		sync_package_siproxd();
	</custom_php_resync_config_command>
	<filter_rules_needed>
		siproxd_generate_rules
	</filter_rules_needed>
	<custom_php_validation_command>
		validate_form_siproxd($_POST, $input_errors);
	</custom_php_validation_command>
</packagegui>
