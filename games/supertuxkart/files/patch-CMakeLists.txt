--- CMakeLists.txt.orig	2020-08-28 08:21:35 UTC
+++ CMakeLists.txt
@@ -174,7 +174,7 @@ endif()
 
 # Build the Bullet physics library
 add_subdirectory("${PROJECT_SOURCE_DIR}/lib/bullet")
-include_directories("${PROJECT_SOURCE_DIR}/lib/bullet/src")
+include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/bullet/src")
 
 if(WIN32 OR CMAKE_SYSTEM_NAME MATCHES "BSD")
     set(LIBRESOLV_LIBRARY)
@@ -198,7 +198,7 @@ if(ENET_FOUND AND NOT USE_IPV6)
 else()
     # Fallback to built-in version
     add_subdirectory("${PROJECT_SOURCE_DIR}/lib/enet")
-    include_directories("${PROJECT_SOURCE_DIR}/lib/enet/include")
+    include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/enet/include")
     set(ENET_LIBRARIES "enet")
 endif()
 
@@ -208,7 +208,7 @@ if (APPLE AND NOT IOS)
     find_path(GLEW_INCLUDEDIR NAMES GL/glew.h glew.h PATHS)
     if (NOT GLEW_LIBRARY OR NOT GLEW_INCLUDEDIR)
         add_subdirectory("${PROJECT_SOURCE_DIR}/lib/glew")
-        include_directories("${PROJECT_SOURCE_DIR}/lib/glew/include")
+	include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/glew/include")
         set(GLEW_LIBRARIES "glew")
     else()
         set(GLEW_LIBRARIES ${GLEW_LIBRARY})
@@ -226,7 +226,7 @@ elseif(NOT USE_GLES2 AND NOT SERVER_ONLY)
     else()
         # Fallback to built-in version silently
         add_subdirectory("${PROJECT_SOURCE_DIR}/lib/glew")
-        include_directories("${PROJECT_SOURCE_DIR}/lib/glew/include")
+	include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/glew/include")
         set(GLEW_LIBRARIES "glew")
     endif()
 endif()
@@ -260,7 +260,7 @@ endif()
 
 if(NOT SERVER_ONLY)
     add_subdirectory("${PROJECT_SOURCE_DIR}/lib/graphics_utils")
-    include_directories("${PROJECT_SOURCE_DIR}/lib/graphics_utils")
+    include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/graphics_utils")
 endif()
 
 # Libmcpp
@@ -268,7 +268,7 @@ find_library(MCPP_LIBRARY NAMES mcpp libmcpp)
 find_path(MCPP_INCLUDEDIR NAMES mcpp_lib.h PATHS)
 if (NOT MCPP_LIBRARY OR NOT MCPP_INCLUDEDIR)
     add_subdirectory("${PROJECT_SOURCE_DIR}/lib/mcpp")
-    include_directories("${PROJECT_SOURCE_DIR}/lib/mcpp")
+    include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/mcpp")
     SET(MCPP_LIBRARY mcpp)
     message(STATUS "System libmcpp not found, use the bundled one.")
 else()
@@ -283,7 +283,7 @@ if(NOT SERVER_ONLY)
     endif()
     if (NOT SQUISH_LIBRARY OR NOT SQUISH_INCLUDEDIR)
         add_subdirectory("${PROJECT_SOURCE_DIR}/lib/libsquish")
-        include_directories("${PROJECT_SOURCE_DIR}/lib/libsquish")
+	include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/libsquish")
         SET(SQUISH_LIBRARY squish)
     else()
         include_directories("${SQUISH_INCLUDEDIR}")
@@ -306,7 +306,7 @@ endif()
 
 # Build the irrlicht library
 add_subdirectory("${PROJECT_SOURCE_DIR}/lib/irrlicht")
-include_directories("${PROJECT_SOURCE_DIR}/lib/irrlicht/include")
+include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/irrlicht/include")
 
 # Build the Wiiuse library
 # Note: wiiuse MUST be declared after irrlicht, since otherwise
@@ -325,7 +325,7 @@ if(USE_WIIUSE)
         if(WIIUSE_BUILD)
             add_subdirectory("${PROJECT_SOURCE_DIR}/lib/wiiuse")
         endif()
-        include_directories("${PROJECT_SOURCE_DIR}/lib/wiiuse/src")
+	include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/wiiuse/src")
         set(WIIUSE_LIBRARIES "wiiuse" "bluetooth")
     endif()
 endif()
@@ -353,7 +353,7 @@ if(USE_SYSTEM_ANGELSCRIPT)
     endif()
 else()
     add_subdirectory("${PROJECT_SOURCE_DIR}/lib/angelscript/projects/cmake")
-    include_directories("${PROJECT_SOURCE_DIR}/lib/angelscript/include")
+    include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/angelscript/include")
     set(Angelscript_LIBRARIES angelscript)
 endif()
 
@@ -373,7 +373,7 @@ endif()
 if (NOT SERVER_ONLY)
     # SheenBidi
     add_subdirectory("${PROJECT_SOURCE_DIR}/lib/sheenbidi")
-    include_directories("${PROJECT_SOURCE_DIR}/lib/sheenbidi/Headers")
+    include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/sheenbidi/Headers")
     SET(SHEENBIDI_LIBRARY sheenbidi)
 
     # Freetype
@@ -420,7 +420,7 @@ if(USE_SQLITE3)
     find_path(SQLITE3_INCLUDEDIR NAMES sqlite3.h PATHS)
     if (NOT SQLITE3_LIBRARY OR NOT SQLITE3_INCLUDEDIR)
 #        add_subdirectory("${PROJECT_SOURCE_DIR}/lib/sqlite3")
-#        include_directories("${PROJECT_SOURCE_DIR}/lib/sqlite3")
+#        include_directories(BEFORE "${PROJECT_SOURCE_DIR}/lib/sqlite3")
 #        SET(SQLITE3_LIBRARY sqlite3)
         set(USE_SQLITE3 OFF CACHE BOOL "Use sqlite to manage server stats and ban list." FORCE)
         message(WARNING "Sqlite3 not found, disable advanced server management.")
