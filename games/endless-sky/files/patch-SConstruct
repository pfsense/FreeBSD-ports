--- SConstruct.orig	2019-09-28 17:59:47 UTC
+++ SConstruct
@@ -2,6 +2,8 @@ import os
 
 # Load environment variables, including some that should be renamed.
 env = Environment(ENV = os.environ)
+if 'CXX' in os.environ:
+	env['CXX'] = os.environ['CXX']
 if 'CXXFLAGS' in os.environ:
 	env.Append(CCFLAGS = os.environ['CXXFLAGS'])
 if 'LDFLAGS' in os.environ:
@@ -22,7 +24,7 @@ Help(opts.GenerateHelpText(env))
 
 flags = ["-std=c++11", "-Wall"]
 if env["mode"] != "debug":
-	flags += ["-O3"]
+	pass
 if env["mode"] == "debug":
 	flags += ["-g"]
 if env["mode"] == "profile":
@@ -57,7 +59,7 @@ sky = env.Program("endless-sky", Glob(buildDirectory +
 
 
 # Install the binary:
-env.Install("$DESTDIR$PREFIX/games", sky)
+env.Install("$DESTDIR$PREFIX/bin", sky)
 
 # Install the desktop file:
 env.Install("$DESTDIR$PREFIX/share/applications", "endless-sky.desktop")
@@ -85,7 +87,7 @@ if env.get("PREFIX").startswith("/usr/"):
 
 # Install the man page.
 env.Command(
-	"$DESTDIR$PREFIX/share/man/man6/endless-sky.6.gz",
+	"$DESTDIR$PREFIX/man/man6/endless-sky.6.gz",
 	"endless-sky.6",
 	"gzip -c $SOURCE > $TARGET")
 
@@ -98,11 +100,11 @@ def RecursiveInstall(env, target, source):
 			RecursiveInstall(env, os.path.join(target, name), node.abspath)
 		else:
 			env.Install(target, node)
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/data", "data")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/images", "images")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/sounds", "sounds")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "credits.txt")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "keys.txt")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/data", "data")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/images", "images")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/sounds", "sounds")
+env.Install("$DESTDIR$PREFIX/share/endless-sky", "credits.txt")
+env.Install("$DESTDIR$PREFIX/share/endless-sky", "keys.txt")
 
 # Make the word "install" in the command line do an installation.
 env.Alias("install", "$DESTDIR$PREFIX")
