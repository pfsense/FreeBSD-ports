--- SConstruct.orig	2021-07-11 20:56:35 UTC
+++ SConstruct
@@ -46,10 +46,9 @@ Help(opts.GenerateHelpText(env))
 #   $ CXXFLAGS=-msse3 scons
 #   $ CXXFLAGS=-march=native scons
 # or modify the `flags` variable:
-flags = ["-std=c++11", "-Wall", "-Werror", "-Wold-style-cast"]
+flags = ["-std=c++11", "-Wall", "-Wold-style-cast"]
 if env["mode"] != "debug":
-	flags += ["-O3", "-flto"]
-	env.Append(LINKFLAGS = ["-O3", "-flto"])
+	pass
 if env["mode"] == "debug":
 	flags += ["-g"]
 elif env["mode"] == "profile":
@@ -157,7 +156,7 @@ env.AlwaysBuild("test")
 
 
 # Install the binary:
-env.Install("$DESTDIR$PREFIX/games", sky)
+env.Install("$DESTDIR$PREFIX/bin", sky)
 
 # Install the desktop file:
 env.Install("$DESTDIR$PREFIX/share/applications", "endless-sky.desktop")
@@ -198,11 +197,11 @@ def RecursiveInstall(env, target, source):
 			RecursiveInstall(env, pathjoin(target, name), node.abspath)
 		else:
 			env.Install(target, node)
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/data", "data")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/images", "images")
-RecursiveInstall(env, "$DESTDIR$PREFIX/share/games/endless-sky/sounds", "sounds")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "credits.txt")
-env.Install("$DESTDIR$PREFIX/share/games/endless-sky", "keys.txt")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/data", "data")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/images", "images")
+RecursiveInstall(env, "$DESTDIR$PREFIX/share/endless-sky/sounds", "sounds")
+env.Install("$DESTDIR$PREFIX/share/endless-sky", "credits.txt")
+env.Install("$DESTDIR$PREFIX/share/endless-sky", "keys.txt")
 
 # Make the word "install" in the command line do an installation.
 env.Alias("install", "$DESTDIR$PREFIX")
