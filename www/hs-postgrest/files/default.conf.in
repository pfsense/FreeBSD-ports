### REQUIRED:
db-uri = "postgres://user:pass@localhost:5432/dbname"
db-schemas = "public"
db-anon-role = "postgres"

### OPTIONAL:
## number of open connections in the pool
db-pool = 10

## Time to live, in seconds, for an idle database pool connection.
db-pool-timeout = 10

## extra schemas to add to the search_path of every request
# db-extra-search-path = "public"

## limit rows in response
# db-max-rows = 1000

## stored proc to exec immediately after auth
# db-pre-request = "stored_proc_name"

## stored proc that overrides the root "/" spec
## it must be inside the db-schema
# db-root-spec = "stored_proc_name"

## Notification channel for reloading the schema cache
db-channel = "pgrst"

## Enable or disable the notification channel
db-channel-enabled = true

## Enable in-database configuration
db-config = true

## how to terminate database transactions
## possible values are:
## commit (default)
##   transaction is always committed, this can not be overriden
## commit-allow-override
##   transaction is committed, but can be overriden with Prefer tx=rollback header
## rollback
##   transaction is always rolled back, this can not be overriden
## rollback-allow-override
##   transaction is rolled back, but can be overriden with Prefer tx=commit header
db-tx-end = "commit"

## enable or disable prepared statements. disabling is only necessary when behind a connection pooler.
## when disabled, statements will be parametrized but won't be prepared.
db-prepared-statements = true

server-host = "127.0.0.1"
server-port = 3000

## unix socket location
## if specified it takes precedence over server-port
# server-unix-socket = "/tmp/pgrst.sock"

## unix socket file mode
## when none is provided, 660 is applied by default
# server-unix-socket-mode = "660"

## determine if the OpenAPI output should follow or ignore role privileges or be disabled entirely
## admitted values: follow-privileges, ignore-privileges, disabled
openapi-mode = "follow-privileges"

## base url for the OpenAPI output
# openapi-server-proxy-uri = ""

## choose a secret, JSON Web Key (or set) to enable JWT auth
## (use "@filename" to load from separate file)
# jwt-secret = "secret_with_at_least_32_characters"
# jwt-aud = "your_audience_claim"
jwt-secret-is-base64 = false

## jspath to the role claim key
# jwt-role-claim-key = ".role"

## content types to produce raw output
# raw-media-types="image/png, image/jpg"

## logging level, the admitted values are: crit, error, warn and info.
log-level = "error"
