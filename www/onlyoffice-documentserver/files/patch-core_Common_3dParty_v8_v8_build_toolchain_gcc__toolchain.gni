--- core/Common/3dParty/v8_89/v8/build/toolchain/gcc_toolchain.gni.orig	2022-04-04 20:12:27 UTC
+++ core/Common/3dParty/v8_89/v8/build/toolchain/gcc_toolchain.gni
@@ -51,6 +51,11 @@ if (enable_resource_allowlist_generation) {
       "enable_resource_allowlist_generation=true does not work for target_os=$target_os")
 }
 
+declare_args() {
+  extra_cxxflags = ""
+  extra_ldflags = ""
+}
+
 # This template defines a toolchain for something that works like gcc
 # (including clang).
 #
@@ -639,13 +644,23 @@ template("clang_toolchain") {
   }
 
   gcc_toolchain(target_name) {
-    prefix = rebase_path("$clang_base_path/bin", root_build_dir)
-    cc = "$prefix/clang"
-    cxx = "$prefix/clang++"
-    ld = cxx
-    readelf = "${toolprefix}readelf"
-    ar = "${prefix}/llvm-ar"
-    nm = "${toolprefix}nm"
+    if (is_bsd) {
+      prefix = "%%LOCALBASE%%/bin"
+      cc = "%%CC%%"
+      cxx = "%%CXX%%"
+      ld = cxx
+      readelf = "${prefix}/readelf"
+      ar = "llvm-ar"
+      nm = "${toolprefix}/nm"
+    } else {
+      prefix = rebase_path("$clang_base_path/bin", root_build_dir)
+      cc = "$prefix/clang"
+      cxx = "$prefix/clang++"
+      ld = cxx
+      readelf = "${prefix}/readelf"
+      ar = "${prefix}/llvm-ar"
+      nm = "${prefix}/llvm-nm"
+    }
 
     forward_variables_from(invoker,
                            [
