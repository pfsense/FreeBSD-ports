Fast HTTP microservice written in Go for high-level image processing backed by
bimg and libvips. imaginary can be used as private or public HTTP service for
massive image processing with first-class support for Docker & Fly.io. It's
almost dependency-free and only uses net/http native package without additional
abstractions for better performance.

Supports multiple image operations exposed as a simple HTTP API, with
additional optional features such as API token authorization, URL signature
protection, HTTP traffic throttle strategy and CORS support for web clients.

imaginary can read images from HTTP POST payloads, server local path or remote
HTTP servers, supporting JPEG, PNG, WEBP, HEIF, and optionally TIFF, PDF, GIF
and SVG formats.

imaginary is able to output images as JPEG, PNG and WEBP formats, including
transparent conversion across them.
