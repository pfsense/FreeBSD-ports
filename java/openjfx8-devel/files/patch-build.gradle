--- build.gradle.orig	2017-07-20 23:39:54 UTC
+++ build.gradle
@@ -344,7 +344,7 @@ ext.SWT_FILE_NAME = IS_MAC ? "org.eclipse.swt.cocoa.ma
     IS_WINDOWS && !IS_64 ? "org.eclipse.swt.win32.win32.x86_3.7.2.v3740f" :
     IS_LINUX && IS_64 ? "org.eclipse.swt.gtk.linux.x86_64_3.7.2.v3740f" :
     IS_LINUX && !IS_64 ? "org.eclipse.swt.gtk.linux.x86_3.7.2.v3740f" :
-    IS_BSD ? "/usr/local/share/java/classes/swt-devel.jar" : ""
+    IS_BSD ? "%%PREFIX%%/share/java/classes/swt-devel.jar" : ""
 
 // Build javadocs only if BUILD_JAVADOC=true
 defineProperty("BUILD_JAVADOC", "false")
@@ -1163,7 +1163,8 @@ allprojects {
     // By default all of our projects require junit for testing so we can just
     // setup this dependency here.
     dependencies {
-        testCompile group: "junit", name: "junit", version: "4.8.2"
+        testCompile files("%%PREFIX%%/share/java/classes/junit4.jar",
+                          "%%PREFIX%%/share/java/classes/hamcrest.jar")
         if (BUILD_CLOSED && DO_JCOV)  {
             testCompile name: "jcov"
         }
@@ -1306,11 +1307,10 @@ project(":graphics") {
 	} else {
              compile name: SWT_FILE_NAME
 	}
-        stubCompile group: "junit", name: "junit", version: "4.8.2",
+        stubCompile files("%%PREFIX%%/share/java/classes/junit4.jar",
+                          "%%PREFIX%%/share/java/classes/hamcrest.jar"),
         project(":base").sourceSets.test.output, sourceSets.main.output
-        antlr3 group: "org.antlr", name: "antlr", version: "3.1.3"
-        antlr3 group: "org.antlr", name: "antlr-runtime",  version: "3.1.3"
-        antlr3 group: "org.antlr", name: "stringtemplate", version: "3.2"
+        antlr3 files("%%PREFIX%%/share/java/classes/antlr-3.5.2-complete.jar")
     }
 
     // Create a single "native" task which will depend on all the individual native tasks for graphics
@@ -1600,9 +1600,7 @@ project(":graphics") {
             copy {
                 into libsDir
                 from f.getParentFile()
-                include "**/antlr-3.1.3.jar"
-                include "**/stringtemplate-3.2.jar"
-                include "**/antlr-runtime-3.1.3.jar"
+                include "**/antlr-3.5.2-complete.jar"
                 includeEmptyDirs = false
             }
             // Have to rename the swt jar because it is some platform specific name but
@@ -1789,7 +1787,7 @@ project(":fxpackager") {
     }
 
     dependencies {
-        compile group: "org.apache.ant", name: "ant", version: "1.8.2"
+        compile files("%%PREFIX%%/share/java/apache-ant/lib/ant.jar")
     }
 
     // When producing the jar, we need to relocate a few class files
@@ -2049,21 +2047,6 @@ project(":fxpackager") {
 
     jar.dependsOn buildJavaPackager
     jar.dependsOn packagerJar
-
-    classes << {
-        // Copy all of the download libraries to libs directory for the sake of the IDEs
-        File libsDir = rootProject.file("build/libs");
-        File antLib = new File(libsDir, "ant-1.8.2.jar")
-        libsDir.mkdirs();
-        for (File f : configurations.compile.files) {
-            copy {
-                into libsDir
-                from f.getParentFile()
-                include "**/ant-1.8.2.jar"
-                includeEmptyDirs = false
-            }
-        }
-    }
 
     task packagerFakeJar(type: Jar) {
         dependsOn compileTestJava
