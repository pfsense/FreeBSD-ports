--- PATCHES.orig	2020-11-08 20:52:48 UTC
+++ PATCHES
@@ -0,0 +1 @@
+patch-1.5.4.cd.ifdef.1
--- init.c.orig	2020-11-03 17:50:37 UTC
+++ init.c
@@ -672,6 +672,52 @@ static mbchar_table *parse_mbchar_table (const char *s
   return t;
 }
 
+static int parse_ifdef (BUFFER *tmp, BUFFER *s, union pointer_long_t data, BUFFER *err)
+{
+  int i, j, res = 0;
+  BUFFER token;
+
+  memset (&token, 0, sizeof (token));
+  mutt_extract_token (tmp, s, 0);
+
+  /* is the item defined as a variable or a function? */
+  if (!(res = (mutt_option_index (tmp->data) != -1)))
+    for (i = 0; !res && i < MENU_MAX; i++)
+    {
+      const struct binding_t *b = km_get_table (Menus[i].value);
+
+      if (!b)
+	continue;
+
+      for (j = 0; b[j].name; j++)
+	if (!ascii_strncasecmp (tmp->data, b[j].name, mutt_strlen (tmp->data))
+	      && (mutt_strlen (b[j].name) == mutt_strlen (tmp->data)))
+	{
+	  res = 1;
+	  break;
+	}
+    }
+
+  if (!MoreArgs (s))
+  {
+    snprintf (err->data, err->dsize, _("ifdef: too few arguments"));
+    return (-1);
+  }
+  mutt_extract_token (tmp, s, MUTT_TOKEN_SPACE);
+
+  if (res)
+  {
+    if (mutt_parse_rc_buffer (tmp, &token, err) == -1)
+    {
+      mutt_error ("Erreur: %s", err->data);
+      FREE (&token.data);
+      return (-1);
+    }
+    FREE (&token.data);
+  }
+  return 0;
+}
+
 static int parse_unignore (BUFFER *buf, BUFFER *s, union pointer_long_t udata, BUFFER *err)
 {
   do
--- init.h.orig	2020-11-08 20:52:48 UTC
+++ init.h
@@ -4705,6 +4705,7 @@ static int parse_lists (BUFFER *, BUFFER *, union poin
 static int parse_unlists (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
 static int parse_alias (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
 static int parse_unalias (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
+static int parse_ifdef (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
 static int parse_echo (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
 static int parse_ignore (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
 static int parse_unignore (BUFFER *, BUFFER *, union pointer_long_t, BUFFER *);
@@ -4772,6 +4773,7 @@ const struct command_t Commands[] = {
   { "hdr_order",	parse_list,		{.p=&HeaderOrderList} },
 #ifdef HAVE_ICONV
   { "iconv-hook",	mutt_parse_hook,	{.l=MUTT_ICONVHOOK} },
+  { "ifdef",		parse_ifdef,		{.l=0} },
 #endif
   { "ignore",		parse_ignore,		{.l=0} },
   { "index-format-hook",mutt_parse_idxfmt_hook, {.l=MUTT_IDXFMTHOOK} },
