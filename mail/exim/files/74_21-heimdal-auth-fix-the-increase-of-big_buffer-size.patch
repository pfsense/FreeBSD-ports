From bbeab68df3b3c2d5507b1fdca07509fdbb3ec5a1 Mon Sep 17 00:00:00 2001
From: Jeremy Harris <jgh146exb@wizmail.org>
Date: Tue, 14 Jan 2020 17:48:57 +0000
Subject: [PATCH 21/21] heimdal auth: fix the increase of big_buffer size.  Bug
 2501

(cherry picked from commit 7a66b3afa11a70021297c176acf56831692be89a)
---
 doc/ChangeLog          |  7 ++++++-
 src/auths/README           |  2 +-
 src/auths/heimdal_gssapi.c | 10 ----------
 src/macros.h               | 13 ++++++++++---
 src/readconf.c             |  1 +
 5 files changed, 18 insertions(+), 15 deletions(-)

diff --git doc/ChangeLog doc/ChangeLog
index 6e26e2f11..f112fc9bf 100644
--- doc/ChangeLog
+++ doc/ChangeLog
@@ -9,7 +9,7 @@ This is not an official release. It is just a branch, collecting
 proposed bugfixes. Depending on your environment the fixes may be
 necessary to build and/or run Exim successfully.
 
-JH/05 Regard command-line receipients as tainted.
+JH/05 Regard command-line recipients as tainted.
 
 JH/07 Bug 2489: Fix crash in the "pam" expansion condition.  It seems that the
       PAM library frees one of the arguments given to it, despite the
@@ -54,6 +54,11 @@ JH/19 Bug 2507: Modules: on handling a dynamic-module (lookups) open failure,
       were used, and the second one (for mainlog/paniclog) retrieved null
       information.
 
+JH/21 Bug 2501: Fix init call in the heimdal authenticator.  Previously it
+      adjusted the size of a major service buffer; this failed because the
+      buffer was in use at the time.  Change to a compile-time increase in the
+      buffer size, when this authenticator is compiled into exim.
+
 
 Exim version 4.93
 -----------------
diff --git src/auths/README src/auths/README
index d4f125c30..66bdcdcf8 100644
--- src/auths/README
+++ src/auths/README
@@ -34,7 +34,7 @@ instance block for this configured mechanism. It must set the flags called
 the server and/or client functions are available for this authenticator.
 Typically this depends on whether server or client configuration options have
 been set, but it is also possible to have an authenticator that has only one of
-the server or client functions.
+the server or client functions.  The function may not touch big_buffer.
 
 SERVER AUTHENTICATION
 
diff --git src/auths/heimdal_gssapi.c src/auths/heimdal_gssapi.c
index 3dfcb8c6a..523f7c69a 100644
--- src/auths/heimdal_gssapi.c
+++ src/auths/heimdal_gssapi.c
@@ -200,16 +200,6 @@ if (krc)
 
 krb5_free_context(context);
 
-/* RFC 4121 section 5.2, SHOULD support 64K input buffers */
-if (big_buffer_size < (64 * 1024))
-  {
-  uschar *newbuf;
-  big_buffer_size = 64 * 1024;
-  newbuf = store_malloc(big_buffer_size);
-  store_free(big_buffer);
-  big_buffer = newbuf;
-  }
-
 ablock->server = TRUE;
 }
 
diff --git src/macros.h src/macros.h
index 76913d64e..4e6b1b8a9 100644
--- src/macros.h
+++ src/macros.h
@@ -152,12 +152,19 @@ enough to hold all the headers from a normal kind of message. */
 into big_buffer_size and in some circumstances increased. It should be at least
 as long as the maximum path length. */
 
-#if defined PATH_MAX && PATH_MAX > 16384
+#ifdef AUTH_HEIMDAL_GSSAPI
+		/* RFC 4121 section 5.2, SHOULD support 64K input buffers */
+# define __BIG_BUFFER_SIZE 65536
+#else
+# define __BIG_BUFFER_SIZE 16384
+#endif
+
+#if defined PATH_MAX && PATH_MAX > __BIG_BUFFER_SIZE
 # define BIG_BUFFER_SIZE PATH_MAX
-#elif defined MAXPATHLEN && MAXPATHLEN > 16384
+#elif defined MAXPATHLEN && MAXPATHLEN > __BIG_BUFFER_SIZE
 # define BIG_BUFFER_SIZE MAXPATHLEN
 #else
-# define BIG_BUFFER_SIZE 16384
+# define BIG_BUFFER_SIZE __BIG_BUFFER_SIZE
 #endif
 
 /* header size of pipe content
diff --git src/readconf.c src/readconf.c
index 0233019cf..62cfcfbf9 100644
--- src/readconf.c
+++ src/readconf.c
@@ -3788,6 +3788,7 @@ while ((buffer = get_config_line()) != NULL)
       if (!d->driver_name)
         log_write(0, LOG_PANIC_DIE|LOG_CONFIG,
           "no driver defined for %s \"%s\"", class, d->name);
+      /* s is using big_buffer, so this call had better not */
       (d->info->init)(d);
       d = NULL;
       }
-- 
2.24.1

