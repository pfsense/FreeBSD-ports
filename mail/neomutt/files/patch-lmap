commit 90871d3963ee739c7d52425c77ea4e619b94732c
Author: Pietro Cerutti (@gahr) <gahr@gahr.ch>
Date:   Tue Apr 11 06:25:27 2023 +0000

    Remove use of lmap in auto.def, provide lkill alternative

diff --git auto.def.orig auto.def
index 00d8839c9..27419a5d8 100644
--- auto.def.orig
+++ auto.def
@@ -288,6 +288,17 @@ if {1} {
       return 0
     }
   }
+
+  # lkill l p is the list of the elements in l that don't match p
+  proc lkill {l p} {
+    set res [list]
+    foreach elem $l {
+      if {![apply $p $elem]} {
+        lappend res $elem
+      }
+    }
+    set res
+  }
 }
 ###############################################################################
 
@@ -1138,9 +1149,7 @@ set conststrings "\
   unsigned char cc_cflags\[\] = {[text2c [expr {
     [get-define want-include-path-in-cflags]
     ? [get-define CFLAGS]
-    : [lmap x [get-define CFLAGS] {
-        expr {[string equal -length 2 $x {-I}] ? [continue] : $x}
-      }]
+    : [lkill [get-define CFLAGS] {{x} {string equal -length 2 $x {-I}}}]
   }]]};\n\
   unsigned char configure_options\[\] = {[text2c $conf_options]};\n"
 if {[catch {set fd [open conststrings.c w]
@@ -1225,16 +1234,8 @@ make-config-header config.h -auto $auto_rep -bare $bare_rep -str $str_rep
 
 ###############################################################################
 # Generate .clang_complete
-proc cflags-for-clang-complete {} {
-  lmap x [get-define CFLAGS] {
-    if {[string match "-MJ*" $x]} {
-      continue
-    } else {
-      set x
-    }
-  }
-}
-define cflags-one-per-line [string map {" " "\n"} [cflags-for-clang-complete]]
+define cflags-one-per-line [string map {" " "\n"} \
+  [lkill [get-define CFLAGS] {{x} {string equal -length 3 $x "-MJ"}}]]
 make-template .clang_complete.in
 
 ###############################################################################
