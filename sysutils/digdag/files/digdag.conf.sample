# In the config file, following parameters are available
# See https://docs.digdag.io/command_reference.html#server-mode-commands
# 
#server.bind (ip address)
#server.port (integer)
#server.admin.bind (ip address)
#server.admin.port (integer)
#server.access-log.path (string. same with –access-log)
#server.access-log.pattern (string, “json”, “combined” or “common”)
#server.http.io-threads (number of HTTP IO threads in integer. default: available CPU cores or 2, whichever is greater)
#server.http.worker-threads (number of HTTP worker threads in integer. default: server.http.io-threads * 8)
#server.http.no-request-timeout (maximum allowed time for clients to keep a connection open without sending requests or receiving responses in seconds. default: 60)
#server.http.request-parse-timeout (maximum allowed time of reading a HTTP request in seconds. this doesn’t affect on reading request body. default: 30)
#server.http.io-idle-timeout (maximum allowed idle time of reading HTTP request and writing HTTP response in seconds. default: 300)
#server.http.enable-http2 (enable HTTP/2. default: false)
#server.http.headers.KEY = VALUE (HTTP header to set on API responses)
#server.jmx.port (port to listen JMX in integer. default: JMX is disabled)
#database.type (enum, “h2” or “postgresql”)
#database.user (string)
#database.password (string)
#database.host (string)
#database.port (integer)
#database.database (string)
#database.loginTimeout (seconds in integer, default: 30)
#database.socketTimeout (seconds in integer, default: 1800)
#database.ssl (boolean, default: false)
#database.connectionTimeout (seconds in integer, default: 30)
#database.idleTimeout (seconds in integer, default: 600)
#database.validationTimeout (seconds in integer, default: 5)
#database.maximumPoolSize (integer, default: available CPU cores * 32)
#archive.type (type of project archiving, “db” or “s3”. default: “db”)
#archive.s3.endpoint (string. default: “s3.amazonaws.com”)
#archive.s3.bucket (string)
#archive.s3.path (string)
#archive.s3.credentials.access-key-id (string. default: instance profile)
#archive.s3.credentials.secret-access-key (string. default: instance profile)
#archive.s3.path-style-access (boolean. default: false)
#log-server.type (type of log storage, “local” , “null”, or “s3”. default: “null”. This parameter will be overwritten with “local” if -O, --task-log DIR is set.)
#log-server.s3.endpoint (string, default: “s3.amazonaws.com”)
#log-server.s3.bucket (string)
#log-server.s3.path (string)
#log-server.s3.direct_download (boolean. default: false)
#log-server.s3.credentials.access-key-id (string. default: instance profile)
#log-server.s3.credentials.secret-access-key (string. default: instance profile)
#log-server.s3.path-style-access (boolean. default: false)
#digdag.secret-encryption-key = (base64 encoded 128-bit AES encryption key)
#executor.task_ttl (string. default: 1d. A task is killed if it is running longer than this period.)
#executor.attempt_ttl (string. default: 7d. An attempt is killed if it is running longer than this period.)
#api.max_attempts_page_size (integer. The max number of rows of attempts in api response)
#api.max_sessions_page_size (integer. The max number of rows of sessions in api response)

server.bind=127.0.0.1
database.type=h2
# generate with:
#  openssl rand -base64 16
#digdag.secret-encryption-key=<base64 key>
