From 17a1f2c1929630e3a79e6b98168d56f96acf2e8b Mon Sep 17 00:00:00 2001
From: Andreas Dilger <adilger@dilger.ca>
Date: Thu, 29 Mar 2018 12:36:54 -0600
Subject: filefrag: avoid temporary buffer overflow

If an unknown flag is present in a FIEMAP extent, it is printed as a
hex value into a temporary buffer before adding it to the flags.  If
that unknown flag is over 0xfff then it will overflow the temporary
buffer.

Reported-by: Sarah Liu <wei3.liu@intel.com>
Intel-bug-id: https://jira.hpdd.intel.com/browse/LU-10335
Signed-off-by: Andreas Dilger <andreas.dilger@intel.com>
Signed-off-by: Theodore Ts'o <tytso@mit.edu>
---
 misc/filefrag.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/misc/filefrag.c b/misc/filefrag.c
index 9c57ab9..dc00393 100644
--- ./misc/filefrag.c
+++ b/misc/filefrag.c
@@ -179,7 +179,7 @@ static void print_extent_info(struct fiemap_extent *fm_extent, int cur_ex,
 	print_flag(&fe_flags, FIEMAP_EXTENT_SHARED, flags, "shared,");
 	/* print any unknown flags as hex values */
 	for (mask = 1; fe_flags != 0 && mask != 0; mask <<= 1) {
-		char hex[6];
+		char hex[sizeof(mask) * 2 + 4]; /* 2 chars/byte + 0x, + NUL */
 
 		if ((fe_flags & mask) == 0)
 			continue;
-- 
cgit v1.1

