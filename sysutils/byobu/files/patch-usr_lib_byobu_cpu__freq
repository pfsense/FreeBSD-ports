--- usr/lib/byobu/cpu_freq.orig	2016-04-07 22:05:52 UTC
+++ usr/lib/byobu/cpu_freq
@@ -25,6 +25,7 @@ __cpu_freq_detail() {
 
 __cpu_freq() {
 	local hz freq count
+
 	if [ -r "/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq" ]; then
 		read hz < /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
 		fpdiv $hz "1000000" 1 # 1Ghz
@@ -33,7 +34,6 @@ __cpu_freq() {
 		if egrep -q -s -i -m 1 "^cpu MHz|^clock" /proc/cpuinfo; then
 			freq=$(egrep -i -m 1 "^cpu MHz|^clock" /proc/cpuinfo | awk -F"[:.]" '{ printf "%01.1f", $2 / 1000 }')
 		else
-			# Must scale frequency by number of processors, if counting bogomips
 			count=$(getconf _NPROCESSORS_ONLN 2>/dev/null || grep -ci "^processor" /proc/cpuinfo)
 			freq=$(egrep -i -m 1 "^bogomips" /proc/cpuinfo | awk -F"[:.]" '{ print $2 }')
 			freq=$(printf "%s %s" "$freq" "$count" | awk '{printf "%01.1f\n", $1/$2/1000}')
@@ -41,7 +41,11 @@ __cpu_freq() {
 	elif hz=$(sysctl -n hw.cpufrequency 2>/dev/null); then
 		fpdiv $hz "1000000000" 1 # 1Ghz
 		freq="$_RET"
+	elif hz=$(sysctl -n machdep.tsc_freq 2>/dev/null); then
+		fpdiv $hz "1000000000" 1
+		freq="$_RET"
 	fi
+
 	[ -n "$freq" ] || return
 	color b c W; printf "%s" "$freq"; color -; color c W; printf "%s" "$ICON_GHz"; color --
 }
