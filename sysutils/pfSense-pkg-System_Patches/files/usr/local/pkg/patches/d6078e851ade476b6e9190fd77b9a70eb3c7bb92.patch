commit d6078e851ade476b6e9190fd77b9a70eb3c7bb92
Author: Christopher <ccope@netgate.com>
Date:   Fri Jun 30 14:33:34 2023 +0000

    Add option to invalidate GUI login on IP address change. Implements #14265

diff --git a/src/etc/inc/auth.inc b/src/etc/inc/auth.inc
index bddb7fa967..5d7e51cfb6 100644
--- a/src/etc/inc/auth.inc
+++ b/src/etc/inc/auth.inc
@@ -2103,6 +2103,12 @@ function session_auth() {
 		return false;
 	}
 
+	// Detect IP change
+	if ((!isset($_POST['login'])) && (config_get_path('system/webgui/roaming') == 'disabled') && (!empty($_SESSION['REMOTE_ADDR']) && $_SESSION['REMOTE_ADDR'] != $_SERVER['REMOTE_ADDR'])) {
+		phpsession_end();
+		return false;
+	}
+
 	/* Validate incoming login request */
 	$attributes = array('nas_identifier' => 'webConfigurator-' . gethostname());
 	if (isset($_POST['login']) && !empty($_POST['usernamefld'])) {
@@ -2126,6 +2132,7 @@ function session_auth() {
 			$_SESSION['user_radius_attributes'] = $attributes;
 			$_SESSION['last_access'] = time();
 			$_SESSION['protocol'] = config_get_path('system/webgui/protocol');
+			$_SESSION['REMOTE_ADDR'] = $_SERVER['REMOTE_ADDR'];
 			phpsession_end(true);
 			log_auth(sprintf(gettext("Successful login for user '%1\$s' from: %2\$s"), $_POST['usernamefld'], get_user_remote_address() . get_user_remote_authsource()));
 			if (isset($_POST['postafterlogin'])) {
diff --git a/src/usr/local/pfSense/include/www/system_advanced_admin.inc b/src/usr/local/pfSense/include/www/system_advanced_admin.inc
index d3c9f67bcb..a5528481d8 100644
--- a/src/usr/local/pfSense/include/www/system_advanced_admin.inc
+++ b/src/usr/local/pfSense/include/www/system_advanced_admin.inc
@@ -55,6 +55,7 @@ function getAdvancedAdminConfig($json = false) {
 	$pconfig['sshdkeyonly'] = config_get_path('system/ssh/sshdkeyonly');
 	$pconfig['sshdagentforwarding'] = config_path_enabled('system/ssh', 'sshdagentforwarding');
 	$pconfig['quietlogin'] = config_path_enabled('system/webgui', 'quietlogin');
+	$pconfig['roaming'] = (config_get_path('system/webgui/roaming', 'enabled') == 'enabled') ? true : false;
 	$pconfig['sshguard_threshold'] = config_get_path('system/sshguard_threshold', '');
 	$pconfig['sshguard_blocktime'] = config_get_path('system/sshguard_blocktime', '');
 	$pconfig['sshguard_detection_time'] = config_get_path('system/sshguard_detection_time', '');
@@ -216,6 +217,12 @@ function doAdvancedAdminPOST($post, $json = false) {
 			config_del_path('system/webgui/quietlogin');
 		}
 
+		if ($post['roaming'] == "yes") {
+			config_set_path('system/webgui/roaming', 'enabled');
+		} else {
+			config_set_path('system/webgui/roaming', 'disabled');
+		}
+
 		if ($post['disableconsolemenu'] == "yes") {
 			config_set_path('system/disableconsolemenu', true);
 		} else {
diff --git a/src/usr/local/www/system_advanced_admin.php b/src/usr/local/www/system_advanced_admin.php
index db46a5ec7d..49d721632f 100644
--- a/src/usr/local/www/system_advanced_admin.php
+++ b/src/usr/local/www/system_advanced_admin.php
@@ -178,6 +178,14 @@ $section->addInput(new Form_Checkbox(
 	'be logged as a lower non-emergency level. Note: The console bell ' .
 	'behavior can be controlled independently on the Notifications tab.');
 
+$section->addInput(new Form_Checkbox(
+	'roaming',
+	'Roaming',
+	'Allow GUI administrator client IP address to change during a login session',
+	$pconfig['roaming']
+))->setHelp('When this is checked, the login session to the webConfigurator remains '.
+	'valid if the client source IP address changes.');
+
 if ($pconfig['interfaces_lan']) {
 	$lockout_interface = "LAN";
 } else {
