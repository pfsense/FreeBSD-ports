[
{ type: install
  message: <<EOD
Please note that NetBox requires a PostgreSQL database server, which uses its
built-in network address datatypes. Thus NetBox won't work with other RDBMS's,
e.g. MySQL, MariaDB, etc.

For installation instructions please refer to the related wiki page:

- https://wiki.freebsd.org/Ports/net-mgmt/netbox
EOD
}
{ type: upgrade
  message: <<EOD
As always it is strongly encouraged to make a backup of the database before the
database migrations will be executed.

The following steps are required to finish the upgrade: 

1. Run database migrations, collect static files, remove stale content files,
   delete any expired user sessions and clear all cached data:

# cd %%DATADIR%%
# python%%PYTHON_VER%% manage.py migrate
# python%%PYTHON_VER%% manage.py collectstatic --no-input
# python%%PYTHON_VER%% manage.py remove_stale_contenttypes --no-input
# python%%PYTHON_VER%% manage.py clearsessions
# python%%PYTHON_VER%% manage.py invalidate all

2. Restart WSGI/httpd environment (supervisord/apache/nginx/etc.)
EOD
}
{ type: upgrade
  maximum_version: "2.6.5"
  message: <<EOD
1. New dependency: Redis

Since the 2.6 release a running Redis server instance is required for caching
objects to run. Also the following settings like below need to be added (or
modified) in the existing configuration.py:

REDIS = {
	'HOST': 'localhost',
	'PORT': 6397,
	'PASSWORD': ''
	'DATABASE': 0,
	'CACHE_DATABASE': 1,
	'DEFAULT_TIMEOUT': 300,
	'SSL': False,
}

Note that if you were using these settings in a prior release with webhooks,
the DATABASE setting remains the same but an additional CACHE_DATABASE settings
has been added with a default value of 1 to support the caching backend.

The DATABASE setting will be renamed in a future release of NetBox to better
relay the meaning of the setting. It is highly recommended to keep the webhook
and cache databases separate. Using the same database number for both may
result in webhook processing data being lost during cache flushing events.


2. View Permissions

NetBox now enforces view-only permissions by default. You can grant view
permission to a user or group by assigning the "can view" permission for the
desired objects.

To exclude _all_ objects, effectively disabling view permissions and restoring
the pre-v2.6 behavior, set:

EXEMPT_VIEW_PERMISSIONS = ['*']


3. CORS_ORIGIN_WHITELIST requires URI Scheme

If you have the CORS_ORIGIN_WHITELIST configuration parameter defined, note
that each origin must now include a URI scheme.
EOD
}
{ type: upgrade
  maximum_version: 2.6.6
  message: <<EOD
The 2.6.6 release includes a migration which automatically updates all existing
cables to enable filtering by site/rack. This migration may take several
minutes to complete on installations with tens of thousands of cables defined.
EOD
}
{ type: upgrade
  maximum_version: 2.7.7
  message: <<EOD
1. Removal of the Topology Maps feature

The deprecated topology maps feature has been removed.  Please replicate any
required data to another source before upgrading NetBox to v2.7.7, as any
existing topology maps will be deleted.


2. Changed REDIS database configuration settings

The REDIS database configuration parameters were splitted up in two discrete
subsections named "webhooks" and "caching".  This requires modification of the
REDIS parameter in configuration.py as follows: 

Old Redis sample configuration:

REDIS = {
    'HOST': 'localhost',
    'PORT': 6379,
    'PASSWORD': '',
    'DATABASE': 0,
    'CACHE_DATABASE': 1,
    'DEFAULT_TIMEOUT': 300,
    'SSL': False,
}

New Redis sample configuration:

REDIS = {
    'webhooks': {
        'HOST': 'redis.example.com',
        'PORT': 1234,
        'PASSWORD': 'foobar',
        'DATABASE': 0,
        'DEFAULT_TIMEOUT': 300,
        'SSL': False,
    },
    'caching': {
        'HOST': 'localhost',
        'PORT': 6379,
        'PASSWORD': '',
        'DATABASE': 1,
        'DEFAULT_TIMEOUT': 300,
        'SSL': False,
    }
}

Note that the CACHE_DATABASE parameter has been removed and the connection
settings have been duplicated for both "webhooks" and "caching".  This allows
one to make use of separate Redis instances if desired.  It is fine to use the
same Redis service for both functions, although the database identifiers should
be different.


3. Removal of the WEBHOOKS_ENABLED configuration parameter

As django-rq is now a required library, NetBox assumes that the RQ worker
process is running and the WEBHOOKS_ENABLED configuration parameter is no
longer used.  Please ensure that both the NetBox WSGI service and the RQ worker
process are running on all production installations.


4. Fixed natural orderding of interfaces

The 2.7.7 release contains a bug fix regarding the natural ordering of
interfaces.  If any interfaces appear unordered, run the following management
command to recalculate their naturalized values after the usual upgrading steps
(database migrations, collect static files, etc.) were issued:

# cd %%DATADIR%%
# python%%PYTHON_VER%% manage.py renaturalize dcim.Interface

EOD
}
{ type: upgrade
  maximum_version: 2.7.9
  message: <<EOD
Please note that two additional steps (remove stale content & clear cached
files) are now required after each update of NetBox.

These were added to the existing update instructions which are displayed with
each update.
EOD
}
{ type: upgrade
  maximum_version: 2.7.10
  message: <<EOD
Please note that another additional step (delete expired user sessions) is now
required after each update of NetBox.

That step was added to the existing update instructions which are displayed
with each update.
EOD
}
{ type: upgrade
  maximum_version: 2.7.11
  message: <<EOD
The "webhooks" REDIS configuration section has been renamed to "tasks".  Please
update your configuration as support for the old name will be removed in a
future release.

Also the sample rc script got some new default values and improvements, e.g.
the possibility to add extra arguments or to use a configuration file instead
of using rc variables.
EOD
}
]
