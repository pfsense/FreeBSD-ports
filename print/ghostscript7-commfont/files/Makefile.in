.MAKE.FreeBSD_UL=yes
PREFIX?=	/usr/local
LOCALBASE?=	/usr/local
CMAPDIR?=	${LOCALBASE}/share/fonts/adobe-cmaps
CIDFONTDIR?=	${LOCALBASE}/share/fonts/CIDFont
GS_FONTDIR?=	${LOCALBASE}/share/ghostscript/fonts
GS_RESFONTDIR?=	${LOCALBASE}/share/ghostscript/Resource/Font
GS_RESCIDFONTDIR?=	${LOCALBASE}/share/ghostscript/Resource/CIDFont
GS_RESCMAPDIR?=	${LOCALBASE}/share/ghostscript/Resource/CMap

INSTALL_DATA?=	install -m 444
MKDIR?=		mkdir -p
LN?=		ln
FIND?=		find
AWK?=		awk
R?=		[1A
PROGRESS?=	BEGIN { mark[0]=\"|\"; mark[1]=\"|\"; mark[2]=\"/\"; mark[3]=\"/\"; mark[4]=\"-\"; mark[5]=\"-\"; mark[6]=\"\\\\\"; mark[7]=\"\\\\\"; line = 0; } { line = (line + 1) % 8; printf(\"Generating virtual fonts...%s${R}\n\", mark[line]); }

TEMPLATES_TTF=	cs.serif cs.sansserif \
		ct.serif cs.sansserif \
		ja.serif ja.sansserif
TEMPLATES_CID=	ko.serif ko.sansserif

CS.CMAPS=	ac15

CS.SERIF.GENERIC=	STSong-Light
CS.SERIF.GENERIC_SUBST=	STSong-Light
CS.SERIF=	STSong-Light

CS.SANSSERIF.GENERIC=	STHeiti-Regular
CS.SANSSERIF.GENERIC_SUBST=	STHeiti-Regular
CS.SANSSERIF=	STHeiti-Regular

CT.CMAPS=	ag15

CT.SERIF.GENERIC=	MSung-Light
CT.SERIF.GENERIC_SUBST=	MSung-Light
CT.SERIF=	MSung-Light

CT.SANSSERIF.GENERIC=	MHei-Medium
CT.SANSSERIF.GENERIC_SUBST=	MHei-Medium
CT.SANSSERIF=	MHei-Medium

JA.CMAPS=	aj16 aj20

JA.SERIF.GENERIC=	Ryumin-Light
JA.SERIF.GENERIC_SUBST=	Ryumin-Light.gs7
JA.SERIF=	Ryumin-Light \
		FutoMinA101-Bold \
		HeiseiMin-W3

JA.SANSSERIF.GENERIC=	GothicBBB-Medium
JA.SANSSERIF.GENERIC_SUBST=	GothicBBB-Medium.gs7
JA.SANSSERIF=	GothicBBB-Medium \
		FutoGoB101-Bold \
		HeiseiKakuGo-W5 \
		HGSSoeiKakugothicUB \
		HGPSoeiKakugothicUB

KO.CMAPS=	ak12

KO.SERIF.GENERIC=	HYSMyeongJo-Medium
KO.SERIF.GENERIC_SUBST=	Munhwa-Regular
KO.SERIF=	HYSMyeongJo-Medium

KO.SANSSERIF.GENERIC=	HYGoThic-Medium
KO.SANSSERIF.GENERIC_SUBST=	MunhwaGothic-Regular
KO.SANSSERIF=	HYGoThic-Medium

all:
	@${MKDIR} CIDFont Font
.for T in ${TEMPLATES_TTF}
	@for F in ${${T:tu}}; do \
		echo "Generating CIDFont/$${F}"; \
		sed -e "s,%%FONTNAME%%,$$F,g" \
		    -e "s,%%GS_FONTDIR%%,${GS_FONTDIR}," \
		    -e "s,%%GENERICFONTNAME%%,${${T:tu}.GENERIC}," \
		    -e "s,%%GENERICFONTNAME_SUBST%%,${${T:tu}.GENERIC_SUBST}," \
		    < template.ttcidfont > CIDFont/$${F}; \
		for D in ${${T:tu:C/\.[^.]*$//}.CMAPS}; do \
			if [ -d ${CMAPDIR}/$${D}/CMap ]; then \
			CMAPS=`cd ${CMAPDIR}/$${D}/CMap; echo *`; \
			elif [ -r ${CMAPDIR}/$${D} ]; then \
			CMAPS=`basename $${D}`; \
			else \
			echo "$${D}: not found"; exit 1; \
			fi; \
			for C in $${CMAPS}; do \
				echo "Generating Font/$${F}-$${C}"; \
				sed -e "s,%%FONTNAME%%,$$F,g" \
				    -e "s,%%GS_FONTDIR%%,${GS_FONTDIR}," \
				    -e "s,%%CMAPNAME%%,$${C}," \
				    -e "s,%%GENERICFONTNAME%%,${${T:tu}.GENERIC}," \
		    		    -e "s,%%GENERICFONTNAME_SUBST%%,${${T:tu}.GENERIC_SUBST}," \
				    < template.font > Font/$${F}-$${C}; \
			done; \
		done; \
	done | awk "${PROGRESS}"
.endfor
.for T in ${TEMPLATES_CID}
	@for F in ${${T:tu}}; do \
		echo "Generating CIDFont/$${F}"; \
		sed -e "s,%%FONTNAME%%,$$F,g" \
		    -e "s,%%GS_FONTDIR%%,${GS_FONTDIR}," \
		    -e "s,%%GENERICFONTNAME%%,${${T:tu}.GENERIC}," \
		    -e "s,%%GENERICFONTNAME_SUBST%%,${${T:tu}.GENERIC_SUBST}," \
		    < template.cidfont > CIDFont/$${F}; \
		for D in ${${T:tu:C/\.[^.]*$//}.CMAPS}; do \
			if [ -d ${CMAPDIR}/$${D}/CMap ]; then \
			CMAPS=`cd ${CMAPDIR}/$${D}/CMap; echo *`; \
			elif [ -r ${CMAPDIR}/$${D} ]; then \
			CMAPS=`basename $${D}`; \
			else \
			echo "$${D}: not found"; exit 1; \
			fi; \
			for C in $${CMAPS}; do \
				echo "Generating Font/$${F}-$${C}"; \
				sed -e "s,%%FONTNAME%%,$$F,g" \
				    -e "s,%%GS_FONTDIR%%,${GS_FONTDIR}," \
				    -e "s,%%CMAPNAME%%,$${C}," \
				    -e "s,%%GENERICFONTNAME%%,${${T:tu}.GENERIC}," \
		    		    -e "s,%%GENERICFONTNAME_SUBST%%,${${T:tu}.GENERIC_SUBST}," \
				    < template.font > Font/$${F}-$${C}; \
			done; \
		done; \
	done | awk "${PROGRESS}"
.endfor
	@echo "Generating virtual fonts...done."

install:
	${MKDIR} ${DESTDIR}${GS_RESCIDFONTDIR}
	${INSTALL_DATA} CIDFont/* ${DESTDIR}${GS_RESCIDFONTDIR}
	${MKDIR} ${DESTDIR}${GS_RESFONTDIR}
	${INSTALL_DATA} Font/* ${DESTDIR}${GS_RESFONTDIR}
	${MKDIR} ${DESTDIR}${GS_RESCMAPDIR}
	cd ${DESTDIR}${GS_RESCMAPDIR} && ${LN} -s -f `${FIND} ${CMAPDIR} -type f` .
.for T in ${TEMPLATES_CID}
	cd ${DESTDIR}${GS_RESCIDFONTDIR} && ${LN} -s -f ${CIDFONTDIR}/${${T:tu}.GENERIC_SUBST} ${${T:tu}.GENERIC_SUBST}
.endfor
