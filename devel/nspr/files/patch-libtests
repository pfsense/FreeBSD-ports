--- lib/tests/arena.c.orig	2019-10-15 14:21:38 UTC
+++ lib/tests/arena.c
@@ -36,6 +36,7 @@ void DumpAll( void )
     return;
 }
 
+#if 0
 /*
 ** Test Arena allocation.
 */
@@ -96,6 +97,7 @@ static void ArenaGrow( void )
 
     return;
 } /* end ArenaGrow() */
+#endif
 
 
 /*
--- lib/tests/base64t.c.orig	2019-10-15 14:21:38 UTC
+++ lib/tests/base64t.c
@@ -2362,7 +2362,6 @@ PRBool test_008(void)
     for( i = 0; i < sizeof(array)/sizeof(array[0]); i++ )
     {
         PRUint32 plen = PL_strlen(array[i].plaintext);
-        PRUint32 clen = ((plen + 2)/3)*4;
 
         char *rv = PL_Base64Encode(array[i].plaintext, plen, (char *)0);
 
@@ -3122,9 +3121,6 @@ PRBool test_024(void)
 
     for( i = 0; i < sizeof(array)/sizeof(array[0]); i++ )
     {
-        PRUint32 plen = PL_strlen(array[i].plaintext);
-        PRUint32 clen = ((plen + 2)/3)*4;
-
         char *rv = PL_Base64Encode(array[i].plaintext, 0, (char *)0);
 
         if( (char *)0 == rv )
@@ -3258,8 +3254,6 @@ PRBool test_027(void)
 
     for( i = 0; i < sizeof(array)/sizeof(array[0]); i++ )
     {
-        PRUint32 clen = PL_strlen(array[i].cyphertext);
-
         char *rv = PL_Base64Decode(array[i].cyphertext, 0, (char *)0);
 
         if( (char *)0 == rv )
--- lib/tests/string.c.orig	2019-10-15 14:21:38 UTC
+++ lib/tests/string.c
@@ -127,7 +127,7 @@ PRBool test_003(void)
         rv = PL_strcpy(array[i].dest, array[i].str);
         if( array[i].rv != rv )
         {
-            printf("FAIL %d: (0x%x, %s)->0x%x\n", i, array[i].dest,
+            printf("FAIL %d: (%p, %s)->%p\n", i, array[i].dest,
                    array[i].str ? array[i].str : "(null)", rv);
             return PR_FALSE;
         }
@@ -240,8 +240,8 @@ PRBool test_004(void)
         rv = PL_strncpy(array[i].dest, array[i].str, array[i].len);
         if( array[i].rv != rv )
         {
-            printf("FAIL %d: (0x%x, %s, %lu)->0x%x\n", i, array[i].dest,
-                   array[i].str ? array[i].str : "(null)", array[i].len, rv);
+            printf("FAIL %d: (%p, %s, %u)->%p\n", i, array[i].dest,
+                   array[i].str ? array[i].str : "(null)", (unsigned)array[i].len, rv);
             return PR_FALSE;
         }
 
@@ -367,8 +367,8 @@ PRBool test_005(void)
         rv = PL_strncpyz(array[i].dest, array[i].str, array[i].len);
         if( array[i].rv != rv )
         {
-            printf("FAIL %d: (0x%x, %s, %lu)->0x%x\n", i, array[i].dest,
-                   array[i].str ? array[i].str : "(null)", array[i].len, rv);
+            printf("FAIL %d: (%p, %s, %u)->%p\n", i, array[i].dest,
+                   array[i].str ? array[i].str : "(null)", (unsigned)array[i].len, rv);
             return PR_FALSE;
         }
 
@@ -421,7 +421,7 @@ PRBool test_006(void)
 
         if( (char *)0 == rv )
         {
-            printf("FAIL %d: 0x%x -> 0\n", i, array[i]);
+            printf("FAIL %d: %p -> 0\n", i, array[i]);
             return PR_FALSE;
         }
 
@@ -507,8 +507,8 @@ PRBool test_007(void)
 
         if( (char *)0 == rv )
         {
-            printf("FAIL %d: %s,%lu -> 0\n", i,
-                   array[i].str ? array[i].str : "(null)", array[i].len);
+            printf("FAIL %d: %s,%u -> 0\n", i,
+                   array[i].str ? array[i].str : "(null)", (unsigned)array[i].len);
             return PR_FALSE;
         }
 
@@ -700,10 +700,10 @@ PRBool test_009(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s+%s/%lu -> %.32s, not zero\n", i,
+                printf("FAIL %d: %s+%s/%u -> %.32s, not zero\n", i,
                        array[i].first ? array[i].first : "(null)",
                        array[i].second ? array[i].second : "(null)",
-                       array[i].length, rv);
+                       (unsigned)array[i].length, rv);
                 return PR_FALSE;
             }
         }
@@ -711,10 +711,10 @@ PRBool test_009(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s+%s/%lu -> null, not %s\n", i,
+                printf("FAIL %d: %s+%s/%u -> null, not %s\n", i,
                        array[i].first ? array[i].first : "(null)",
                        array[i].second ? array[i].second : "(null)",
-                       array[i].length, array[i].result);
+                       (unsigned)array[i].length, array[i].result);
                 return PR_FALSE;
             }
             else
@@ -726,10 +726,10 @@ PRBool test_009(void)
                 {
                     if( *a != *b )
                     {
-                        printf("FAIL %d: %s+%s/%lu -> %.32s, not %s\n", i,
+                        printf("FAIL %d: %s+%s/%u -> %.32s, not %s\n", i,
                                array[i].first ? array[i].first : "(null)",
                                array[i].second ? array[i].second : "(null)",
-                               array[i].length, rv, array[i].result);
+                               (unsigned)array[i].length, rv, array[i].result);
                         return PR_FALSE;
                     }
 
@@ -741,10 +741,10 @@ PRBool test_009(void)
                 {
                     if( (char)0 != *b )
                     {
-                        printf("FAIL %d: %s+%s/%lu -> not nulled\n", i,
+                        printf("FAIL %d: %s+%s/%u -> not nulled\n", i,
                                array[i].first ? array[i].first : "(null)",
                                array[i].second ? array[i].second : "(null)",
-                               array[i].length);
+                               (unsigned)array[i].length);
                         return PR_FALSE;
                     }
                 }
@@ -752,10 +752,10 @@ PRBool test_009(void)
                 {
                     if( (char)0 == *b )
                     {
-                        printf("FAIL %d: %s+%s/%lu -> overrun\n", i,
+                        printf("FAIL %d: %s+%s/%u -> overrun\n", i,
                                array[i].first ? array[i].first : "(null)",
                                array[i].second ? array[i].second : "(null)",
-                               array[i].length);
+                               (unsigned)array[i].length);
                         return PR_FALSE;
                     }
                 }
@@ -832,10 +832,10 @@ PRBool test_010(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s+%s/%lu -> %.32s, not zero\n", i,
+                printf("FAIL %d: %s+%s/%u -> %.32s, not zero\n", i,
                        array[i].first ? array[i].first : "(null)",
                        array[i].second ? array[i].second : "(null)",
-                       array[i].length, rv);
+                       (unsigned)array[i].length, rv);
                 return PR_FALSE;
             }
         }
@@ -843,10 +843,10 @@ PRBool test_010(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s+%s/%lu -> null, not %s\n", i,
+                printf("FAIL %d: %s+%s/%u -> null, not %s\n", i,
                        array[i].first ? array[i].first : "(null)",
                        array[i].second ? array[i].second : "(null)",
-                       array[i].length, array[i].result);
+                       (unsigned)array[i].length, array[i].result);
                 return PR_FALSE;
             }
             else
@@ -858,10 +858,10 @@ PRBool test_010(void)
                 {
                     if( *a != *b )
                     {
-                        printf("FAIL %d: %s+%s/%lu -> %.32s, not %s\n", i,
+                        printf("FAIL %d: %s+%s/%u -> %.32s, not %s\n", i,
                                array[i].first ? array[i].first : "(null)",
                                array[i].second ? array[i].second : "(null)",
-                               array[i].length, rv, array[i].result);
+                               (unsigned)array[i].length, rv, array[i].result);
                         return PR_FALSE;
                     }
 
@@ -1104,10 +1104,10 @@ PRBool test_012(void)
                 break;
         }
 
-        printf("FAIL %d: %s-%s/%ld -> %d, not %d\n", i,
+        printf("FAIL %d: %s-%s/%d -> %d, not %d\n", i,
                array[i].one ? array[i].one : "(null)",
                array[i].two ? array[i].two : "(null)",
-               array[i].max, rv, array[i].sign);
+               (int)array[i].max, rv, array[i].sign);
         return PR_FALSE;
     }
 
@@ -1338,10 +1338,10 @@ PRBool test_014(void)
                 break;
         }
 
-        printf("FAIL %d: %s-%s/%ld -> %d, not %d\n", i,
+        printf("FAIL %d: %s-%s/%d -> %d, not %d\n", i,
                array[i].one ? array[i].one : "(null)",
                array[i].two ? array[i].two : "(null)",
-               array[i].max, rv, array[i].sign);
+               (int)array[i].max, rv, array[i].sign);
         return PR_FALSE;
     }
 
@@ -1411,15 +1411,15 @@ PRBool test_015(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%c -> null, not +%lu\n", i, array[i].str,
-                       array[i].chr, array[i].off);
+                printf("FAIL %d: %s,%c -> null, not +%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%c -> 0x%x, not 0x%x+%lu\n", i, array[i].str,
-                       array[i].chr, rv, array[i].str, array[i].off);
+                printf("FAIL %d: %s,%c -> %p, not %p+%u\n", i, array[i].str,
+                       array[i].chr, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1491,15 +1491,15 @@ PRBool test_016(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%c -> null, not +%lu\n", i, array[i].str,
-                       array[i].chr, array[i].off);
+                printf("FAIL %d: %s,%c -> null, not +%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%c -> 0x%x, not 0x%x+%lu\n", i, array[i].str,
-                       array[i].chr, rv, array[i].str, array[i].off);
+                printf("FAIL %d: %s,%c -> %p, not %p+%u\n", i, array[i].str,
+                       array[i].chr, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1566,8 +1566,8 @@ PRBool test_017(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%c/%lu -> %.32s, not zero\n", i, array[i].str,
-                       array[i].chr, array[i].max, rv);
+                printf("FAIL %d: %s,%c/%u -> %.32s, not zero\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -1575,15 +1575,15 @@ PRBool test_017(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%c/%lu -> null, not +%lu\n", i, array[i].str,
-                       array[i].chr, array[i].max, array[i].off);
+                printf("FAIL %d: %s,%c/%u -> null, not +%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%c/%lu -> 0x%x, not 0x%x+%lu\n", i, array[i].str,
-                       array[i].chr, array[i].max, rv, array[i].str, array[i].off);
+                printf("FAIL %d: %s,%c/%u -> %p, not %p+%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1650,8 +1650,8 @@ PRBool test_018(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%c/%lu -> %.32s, not zero\n", i, array[i].str,
-                       array[i].chr, array[i].max, rv);
+                printf("FAIL %d: %s,%c/%u -> %.32s, not zero\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -1659,15 +1659,15 @@ PRBool test_018(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%c/%lu -> null, not +%lu\n", i, array[i].str,
-                       array[i].chr, array[i].max, array[i].off);
+                printf("FAIL %d: %s,%c/%u -> null, not +%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
-            if( &array[i].str[ array[i].off ] != rv )
+            if( &array[i].str[ array[i].off ] != rv)
             {
-                printf("FAIL %d: %s,%c/%lu -> 0x%x, not 0x%x+%lu\n", i, array[i].str,
-                       array[i].chr, array[i].max, rv, array[i].str, array[i].off);
+                printf("FAIL %d: %s,%c/%u -> %p, not %p+%u\n", i, array[i].str,
+                       array[i].chr, (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1746,19 +1746,19 @@ PRBool test_019(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not +%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not +%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].off);
+                       (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1837,19 +1837,19 @@ PRBool test_020(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not +%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not +%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].off);
+                       (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -1923,10 +1923,10 @@ PRBool test_021(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -1934,19 +1934,19 @@ PRBool test_021(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not +%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not +%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, array[i].off);
+                       (unsigned)array[i].max, array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2029,10 +2029,10 @@ PRBool test_022(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -2040,19 +2040,19 @@ PRBool test_022(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not +%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not +%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, array[i].off);
+                       (unsigned)array[i].max, array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].chrs ? array[i].chrs : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2148,19 +2148,19 @@ PRBool test_023(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].str, array[i].off);
+                       array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2256,19 +2256,19 @@ PRBool test_024(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].str, array[i].off);
+                       array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2375,10 +2375,10 @@ PRBool test_025(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -2386,19 +2386,19 @@ PRBool test_025(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, array[i].str, array[i].off);
+                       (unsigned)array[i].max, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2507,10 +2507,10 @@ PRBool test_026(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -2518,19 +2518,19 @@ PRBool test_026(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, array[i].str, array[i].off);
+                       (unsigned)array[i].max, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2626,19 +2626,19 @@ PRBool test_027(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].str, array[i].off);
+                       array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2734,19 +2734,19 @@ PRBool test_028(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].str, array[i].off);
+                       array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       rv, array[i].str, array[i].off);
+                       rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2853,10 +2853,10 @@ PRBool test_029(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -2864,19 +2864,19 @@ PRBool test_029(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, array[i].str, array[i].off);
+                       (unsigned)array[i].max, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
@@ -2985,10 +2985,10 @@ PRBool test_030(void)
         {
             if( (char *)0 != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> %.32s, not null\n", i,
+                printf("FAIL %d: %s,%s/%u -> %.32s, not null\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv);
+                       (unsigned)array[i].max, rv);
                 return PR_FALSE;
             }
         }
@@ -2996,19 +2996,19 @@ PRBool test_030(void)
         {
             if( (char *)0 == rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> null, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> null, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, array[i].str, array[i].off);
+                       (unsigned)array[i].max, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
 
             if( &array[i].str[ array[i].off ] != rv )
             {
-                printf("FAIL %d: %s,%s/%lu -> 0x%x, not 0x%x+%lu\n", i,
+                printf("FAIL %d: %s,%s/%u -> %p, not %p+%u\n", i,
                        array[i].str ? array[i].str : "(null)",
                        array[i].sub ? array[i].sub : "(null)",
-                       array[i].max, rv, array[i].str, array[i].off);
+                       (unsigned)array[i].max, rv, array[i].str, (unsigned)array[i].off);
                 return PR_FALSE;
             }
         }
