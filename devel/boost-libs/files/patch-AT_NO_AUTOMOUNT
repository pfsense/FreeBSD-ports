The AT_NO_AUTOMOUNT seems to be a Linux-only thing...

	-mi

--- libs/filesystem/config/has_posix_at_apis.cpp	2025-05-29 12:45:36.456840000 -0400
+++ libs/filesystem/config/has_posix_at_apis.cpp	2025-05-29 18:17:30.866425000 -0400
@@ -23,5 +23,5 @@
 
     struct stat st;
-    res |= fstatat(fd1, "y", &st, AT_NO_AUTOMOUNT | AT_SYMLINK_NOFOLLOW);
+    res |= fstatat(fd1, "y", &st, AT_SYMLINK_NOFOLLOW);
 
     res |= linkat(fd1, "y", fd1, "z", 0);
--- libs/filesystem/src/operations.cpp	2025-05-29 18:20:19.260975000 -0400
+++ libs/filesystem/src/operations.cpp	2025-05-29 20:12:31.002264000 -0400
@@ -355,5 +355,5 @@
 {
     struct ::stat st;
-    flags &= AT_EMPTY_PATH | AT_NO_AUTOMOUNT | AT_SYMLINK_NOFOLLOW;
+    flags &= AT_EMPTY_PATH | AT_SYMLINK_NOFOLLOW;
     int res = ::fstatat(dirfd, path, &st, flags);
     if (BOOST_LIKELY(res == 0))
@@ -508,5 +508,5 @@
 #elif defined(BOOST_FILESYSTEM_HAS_POSIX_AT_APIS)
     struct ::stat path_stat;
-    int err = ::fstatat(basedir_fd, p.c_str(), &path_stat, AT_NO_AUTOMOUNT);
+    int err = ::fstatat(basedir_fd, p.c_str(), &path_stat, 0);
 #else
     struct ::stat path_stat;
@@ -569,5 +569,5 @@
 #elif defined(BOOST_FILESYSTEM_HAS_POSIX_AT_APIS)
     struct ::stat path_stat;
-    int err = ::fstatat(basedir_fd, p.c_str(), &path_stat, AT_SYMLINK_NOFOLLOW | AT_NO_AUTOMOUNT);
+    int err = ::fstatat(basedir_fd, p.c_str(), &path_stat, AT_SYMLINK_NOFOLLOW);
 #else
     struct ::stat path_stat;
