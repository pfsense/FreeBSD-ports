Advanced Enumerations (compatible with Python's stdlib Enum), NamedTuples, and
NamedConstants

aenum includes a Python stdlib Enum-compatible data type, as well as a
metaclass-based NamedTuple implementation and a NamedConstant class.

An Enum is a set of symbolic names (members) bound to unique, constant values.
Within an enumeration, the members can be compared by identity, and the
enumeration itself can be iterated over. If using Python 3 there is built-in
support for unique values, multiple values, auto-numbering, and suspension of
aliasing (members with the same value are not identical), plus the ability to
have values automatically bound to attributes.

A NamedTuple is a class-based, fixed-length tuple with a name for each possible
position accessible using attribute-access notation as well as the standard
index notation.

A NamedConstant is a class whose members cannot be rebound; it lacks all other
Enum capabilities, however; consequently, it can have duplicate values.
