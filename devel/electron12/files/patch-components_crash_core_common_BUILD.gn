--- components/crash/core/common/BUILD.gn.orig	2021-04-14 01:08:45 UTC
+++ components/crash/core/common/BUILD.gn
@@ -7,7 +7,7 @@ import("//components/gwp_asan/buildflags/buildflags.gn
 
 declare_args() {
   # If set to true, this will stub out and disable the entire crash key system.
-  use_crash_key_stubs = is_fuchsia
+  use_crash_key_stubs = is_fuchsia || is_bsd
 }
 
 group("common") {
@@ -32,7 +32,7 @@ use_crashpad_annotation =
 # implementations will be instantiated and set, doubling the storage
 # used for keys. This is intended to be used temporarily to test Crashpad
 # integrations without disabling Breakpad.
-use_combined_annotations = is_linux || is_chromeos
+use_combined_annotations = (is_linux || is_chromeos) && !is_bsd
 
 buildflag_header("crash_buildflags") {
   header = "crash_buildflags.h"
@@ -93,7 +93,9 @@ target(crash_key_target_type, "crash_key_lib") {
     sources += [ "crash_key_stubs.cc" ]
   } else if (use_crashpad_annotation) {
     sources += [ "crash_key_crashpad.cc" ]
-    deps += [ "//third_party/crashpad/crashpad/client" ]
+    if (!is_bsd) {
+      deps += [ "//third_party/crashpad/crashpad/client" ]
+    }
   } else {
     include_dirs = [ "//third_party/breakpad/breakpad/src" ]
 
@@ -185,7 +187,7 @@ source_set("unit_tests") {
     sources += [ "crash_key_breakpad_ios_unittest.cc" ]
     deps += [ "//third_party/breakpad:client" ]
     include_dirs = [ "//third_party/breakpad/breakpad/src/" ]
-  } else if (!is_mac && !is_win && !is_fuchsia && !is_android) {
+  } else if (!is_mac && !is_win && !is_fuchsia && !is_android && !is_bsd) {
     include_dirs = [ "//third_party/breakpad/breakpad/src/" ]
     sources += [ "crash_key_breakpad_unittest.cc" ]
   }
