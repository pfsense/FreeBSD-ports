https://github.com/glandium/git-cinnabar/commit/16d11703acfe

--- helper/GIT-VERSION.mk.orig	2021-11-19 21:23:13 UTC
+++ helper/GIT-VERSION.mk
@@ -1,2 +1,2 @@
-GIT_VERSION ?= v2.35.1
+GIT_VERSION ?= v2.36.0
 WINDOWS_GIT_VERSION ?= $(GIT_VERSION).windows.1
--- helper/cinnabar-fast-import.c.orig	2021-11-19 21:23:13 UTC
+++ helper/cinnabar-fast-import.c
@@ -523,30 +523,18 @@ static void do_set(struct string_list *args)
 }
 
 #ifdef _WIN32
-int write_object_file_flags(const void *buf, size_t len, const char *type,
+int write_object_file_flags(const void *buf, size_t len, enum object_type type,
                             struct object_id *oid, unsigned flags)
 #else
-int write_object_file_flags(const void *buf, unsigned long len, const char *type,
+int write_object_file_flags(const void *buf, unsigned long len, enum object_type type,
                             struct object_id *oid, unsigned flags)
 #endif
 {
 	struct strbuf data;
-	enum object_type t;
-	if (type == tree_type) {
-		t = OBJ_TREE;
-	} else if (type == blob_type) {
-		t = OBJ_BLOB;
-	} else if (type == commit_type) {
-		t = OBJ_COMMIT;
-	} else if (type == tag_type) {
-		t = OBJ_TAG;
-	} else {
-		die("Unknown type");
-	}
 	data.buf = (void *)buf;
 	data.len = len;
 	data.alloc = len;
-	store_object(t, &data, NULL, oid, 0);
+	store_object(type, &data, NULL, oid, 0);
 	return 0;
 }
 
--- helper/fast-import.c.patch.orig	2021-11-19 21:23:13 UTC
+++ helper/fast-import.c.patch
@@ -1,16 +1,25 @@ diff --git a/builtin/fast-import.c b/builtin/fast-impo
 diff --git a/builtin/fast-import.c b/builtin/fast-import.c
-index 20406f6775..7ff0911c2c 100644
+index 28d3193c38..2b3aeaa4d5 100644
 --- a/builtin/fast-import.c
 +++ b/builtin/fast-import.c
-@@ -19,6 +19,7 @@
- #include "mem-pool.h"
+@@ -20,6 +20,7 @@
  #include "commit-reach.h"
  #include "khash.h"
+ #include "date.h"
 +#include "shallow.h"
  
  #define PACK_ID_BITS 16
  #define MAX_PACK_ID ((1<<PACK_ID_BITS)-1)
-@@ -737,7 +738,7 @@ static struct tree_content *dup_tree_content(struct tree_content *s)
+@@ -257,7 +258,7 @@ static struct string_list sub_marks_to = STRING_LIST_INIT_DUP;
+ static kh_oid_map_t *sub_oid_map;
+ 
+ /* Where to write output of cat-blob commands */
+-static int cat_blob_fd = STDOUT_FILENO;
++int cat_blob_fd = STDOUT_FILENO;
+ 
+ static void parse_argv(void);
+ static void parse_get_mark(const char *p);
+@@ -746,7 +747,7 @@ static struct tree_content *dup_tree_content(struct tree_content *s)
  	return d;
  }
  
@@ -19,7 +28,7 @@ +static void real_start_packfile(void)
  {
  	struct strbuf tmp_file = STRBUF_INIT;
  	struct packed_git *p;
-@@ -838,7 +839,7 @@ static int loosen_small_pack(const struct packed_git *p)
+@@ -847,7 +848,7 @@ static int loosen_small_pack(const struct packed_git *p)
  	return run_command(&unpack);
  }
  
@@ -28,15 +37,15 @@ +static void real_end_packfile(void)
  {
  	static int running;
  
-@@ -857,6 +858,7 @@ static void end_packfile(void)
+@@ -866,6 +867,7 @@ static void end_packfile(void)
  
  		close_pack_windows(pack_data);
- 		finalize_hashfile(pack_file, cur_pack_oid.hash, 0);
+ 		finalize_hashfile(pack_file, cur_pack_oid.hash, FSYNC_COMPONENT_PACK, 0);
 +		pack_file = NULL;
  		fixup_pack_header_footer(pack_data->pack_fd, pack_data->hash,
  					 pack_data->pack_name, object_count,
  					 cur_pack_oid.hash, pack_size);
-@@ -956,6 +958,9 @@ static int store_object(
+@@ -965,6 +967,9 @@ static int store_object(
  		e->pack_id = MAX_PACK_ID;
  		e->idx.offset = 1; /* just not zero! */
  		duplicate_count_by_type[type]++;
@@ -46,7 +55,7 @@ +		}
  		return 1;
  	}
  
-@@ -1639,7 +1644,7 @@ static int update_branch(struct branch *b)
+@@ -1648,7 +1653,7 @@ static int update_branch(struct branch *b)
  	return 0;
  }
  
@@ -55,7 +64,7 @@ +void dump_branches(void)
  {
  	unsigned int i;
  	struct branch *b;
-@@ -2208,7 +2213,9 @@ static int parse_mapped_oid_hex(const char *hex, struct object_id *oid, const ch
+@@ -2217,7 +2222,9 @@ static int parse_mapped_oid_hex(const char *hex, struct object_id *oid, const ch
   * Complain if the following character is not what is expected,
   * either a space or end of the string.
   */
@@ -66,7 +75,7 @@ +static uintmax_t real_parse_mark_ref(const char *p, c
  {
  	uintmax_t mark;
  
-@@ -2272,9 +2279,8 @@ static void file_change_m(const char *p, struct branch *b)
+@@ -2281,9 +2288,8 @@ static void file_change_m(const char *p, struct branch *b)
  	case S_IFDIR:
  	case S_IFGITLINK:
  		/* ok */
