--- electron/BUILD.gn.orig	2025-09-02 20:56:04 UTC
+++ electron/BUILD.gn
@@ -548,7 +548,7 @@ source_set("electron_lib") {
     defines += [ "GDK_DISABLE_DEPRECATION_WARNINGS" ]
   }
 
-  if (!is_mas_build) {
+  if (!is_mas_build && !is_bsd) {
     deps += [
       "//components/crash/core/app",
       "//components/crash/core/browser",
@@ -641,6 +641,12 @@ source_set("electron_lib") {
       cflags_objcc = [ "-fobjc-weak" ]
     }
   }
+  if (is_bsd) {
+    sources -= [
+      "shell/common/crash_keys.cc",
+      "shell/common/crash_keys.h",
+    ]
+  }
   if (is_linux) {
     libs = [ "xshmfence" ]
     deps += [
@@ -1220,7 +1226,7 @@ if (is_mac) {
       ":electron_lib",
       ":electron_win32_resources",
       ":packed_resources",
-      "//components/crash/core/app",
+      # "//components/crash/core/app",
       "//content:sandbox_helper_win",
       "//electron/buildflags",
       "//third_party/electron_node:libnode",
@@ -1247,7 +1253,7 @@ if (is_mac) {
       public_deps = [ "//tools/v8_context_snapshot" ]
     }
 
-    if (is_linux) {
+    if (is_linux && !is_bsd) {
       data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
     }
 
@@ -1314,7 +1320,7 @@ if (is_mac) {
         configs += [ "//build/config/gcc:rpath_for_built_shared_libraries" ]
       }
 
-      if (is_linux) {
+      if (is_linux && !is_bsd) {
         deps += [ "//sandbox/linux:chrome_sandbox" ]
       }
     }
@@ -1435,7 +1441,9 @@ dist_zip("electron_dist_zip") {
       ]
     }
 
-    data_deps += [ "//sandbox/linux:chrome_sandbox" ]
+    if (!is_bsd) {
+      data_deps += [ "//sandbox/linux:chrome_sandbox" ]
+    }
   }
   deps = data_deps
   outputs = [ "$root_build_dir/dist.zip" ]
