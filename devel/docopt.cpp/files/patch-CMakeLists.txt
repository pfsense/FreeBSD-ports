--- CMakeLists.txt.orig	2020-05-11 17:23:10 UTC
+++ CMakeLists.txt
@@ -42,7 +42,7 @@ if(MSVC OR XCODE)
     # Xcode does not support libraries with only object files as sources.
     # See https://cmake.org/cmake/help/v3.0/command/add_library.html?highlight=add_library
     add_library(docopt SHARED ${docopt_SOURCES} ${docopt_HEADERS})
-    add_library(docopt_s STATIC ${docopt_SOURCES} ${docopt_HEADERS})
+    #add_library(docopt_s STATIC ${docopt_SOURCES} ${docopt_HEADERS})
 else()
     # If not using MSVC or Xcode, we will create an intermediate object target
     # to avoid compiling the source code twice.
@@ -71,7 +71,7 @@ endif()
 
 if(NOT MSVC)
 	set_target_properties(docopt PROPERTIES OUTPUT_NAME docopt)
-	set_target_properties(docopt_s PROPERTIES OUTPUT_NAME docopt)
+	#set_target_properties(docopt_s PROPERTIES OUTPUT_NAME docopt)
 endif()
 
 if(USE_BOOST_REGEX)
@@ -83,7 +83,7 @@ if(USE_BOOST_REGEX)
     include_directories(${Boost_INCLUDE_DIRS})
     target_link_libraries(docopt ${Boost_LIBRARIES})
 	if(WITH_STATIC)
-		target_link_libraries(docopt_s ${Boost_LIBRARIES})
+		#target_link_libraries(docopt_s ${Boost_LIBRARIES})
 	endif()
 endif()
 
@@ -120,7 +120,7 @@ set(export_name "docopt-targets")
 install(TARGETS docopt EXPORT ${export_name} DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 # Development package
-install(TARGETS docopt_s EXPORT ${export_name} DESTINATION ${CMAKE_INSTALL_LIBDIR})
+#install(TARGETS docopt_s EXPORT ${export_name} DESTINATION ${CMAKE_INSTALL_LIBDIR})
 install(FILES ${docopt_HEADERS} DESTINATION include/docopt)
 
 # CMake Package
