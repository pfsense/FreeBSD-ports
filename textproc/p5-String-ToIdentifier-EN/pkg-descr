String::ToIdentifier::EN provides a utility method, "to_identifier" for
converting an arbitrary string into a readable representation using the ASCII
subset of \w for use as an identifier in a computer program. The intent is to
make unique identifier names from which the content of the original string can
be easily inferred by a human just by reading the identifier.

If you need the full set of \w including Unicode, see the subclass
String::ToIdentifier::EN::Unicode.

Currently, this process is one way only, and will likely remain this way.

The default is to create camelCase identifiers, or you may pass in a separator
char of your choice such as _.

Binary char groups will be separated by _ even in camelCase identifiers to make
them easier to read, e.g.: foo_2_0xFF_Bar.
