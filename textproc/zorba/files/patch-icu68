Regressed by https://github.com/unicode-org/icu/commit/c3fe7e09d844

src/util/regex.cpp:454:33: error: use of undeclared identifier 'TRUE'
  return U_SUCCESS( status ) == TRUE;
                                ^
src/util/unicode_util.cpp:2229:33: error: use of undeclared identifier 'TRUE'
  return U_SUCCESS( status ) == TRUE;
                                ^
src/util/unicode_util.cpp:2250:33: error: use of undeclared identifier 'TRUE'
  return U_SUCCESS( status ) == TRUE;
                                ^
src/util/unicode_util.cpp:2292:33: error: use of undeclared identifier 'TRUE'
  return U_SUCCESS( status ) == TRUE;
                                ^
src/util/unicode_util.cpp:2301:33: error: use of undeclared identifier 'TRUE'
  return U_SUCCESS( status ) == TRUE;
                                ^

--- src/util/regex.cpp.orig	2012-10-03 22:35:16 UTC
+++ src/util/regex.cpp
@@ -451,7 +451,7 @@ bool regex::replace_all( string const &in, string cons
   matcher_->reset( in );
   UErrorCode status = U_ZERO_ERROR;
   *out = matcher_->replaceAll( replacement, status );
-  return U_SUCCESS( status ) == TRUE;
+  return U_SUCCESS( status ) == true;
 }
 
 bool regex::replace_all( char const *in, char const *replacement,
--- src/util/unicode_util.cpp.orig	2012-10-03 22:35:16 UTC
+++ src/util/unicode_util.cpp
@@ -2226,7 +2226,7 @@ bool normalize( string const &in, normalization::type 
     default                 : icu_mode = UNORM_NONE; break;
   }
   Normalizer::normalize( in, icu_mode, 0, *out, status );
-  return U_SUCCESS( status ) == TRUE;
+  return U_SUCCESS( status ) == true;
 }
 
 bool strip_diacritics( string const &in, string *out ) {
@@ -2247,7 +2247,7 @@ bool to_char( char const *in, char_type *out ) {
   u_strFromUTF8WithSub(
     out, 1, nullptr, in, utf8::char_length( *in ), SubChar, nullptr, &status
   );
-  return U_SUCCESS( status ) == TRUE;
+  return U_SUCCESS( status ) == true;
 }
 
 #endif /* ZORBA_NO_ICU */
@@ -2289,7 +2289,7 @@ bool to_string( char const *in, size_type in_len, stri
   UErrorCode status = U_ZERO_ERROR;
   u_strFromUTF8( buf, in_len + 1, &buf_len, in, in_len, &status );
   out->releaseBuffer( buf_len );
-  return U_SUCCESS( status ) == TRUE;
+  return U_SUCCESS( status ) == true;
 }
 
 bool to_string( wchar_t const *in, size_type in_len, string *out ) {
@@ -2298,7 +2298,7 @@ bool to_string( wchar_t const *in, size_type in_len, s
   size_type buf_len;
   u_strFromWCS( buf, in_len + 1, &buf_len, in, in_len, &status );
   out->releaseBuffer( buf_len );
-  return U_SUCCESS( status ) == TRUE;
+  return U_SUCCESS( status ) == true;
 }
 
 #endif /* ZORBA_NO_ICU */
