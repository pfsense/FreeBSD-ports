  <vuln vid="66e4dc99-28b3-11ea-8dde-08002728f74c">
    <topic>rack -- information leak / session hijack vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-rack</name>
	<range><ge>2.0.0</ge><lt>2.0.8,3</lt></range>
      </package>
      <package>
	<name>rubygem-rack16</name>
	<range><ge>1.6.0</ge><lt>1.6.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>National Vulnerability Database:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-16782">
	  <p>There's a possible information leak / session hijack vulnerability in
	    Rack (RubyGem rack). This vulnerability is patched in versions 1.6.12
	    and 2.0.8. Attackers may be able to find and hijack sessions by using
	    timing attacks targeting the session id. Session ids are usually stored
	    and indexed in a database that uses some kind of scheme for speeding up
	    lookups of that session id. By carefully measuring the amount of time
	    it takes to look up a session, an attacker may be able to find a valid
	    session id and hijack the session. The session id itself may be
	    generated randomly, but the way the session is indexed by the backing
	    store does not use a secure comparison.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-16782</url>
      <url>https://github.com/rack/rack/blob/master/CHANGELOG.md</url>
      <cvename>CVE-2019-16782</cvename>
    </references>
    <dates>
      <discovery>2019-12-08</discovery>
      <entry>2019-12-29</entry>
    </dates>
  </vuln>

  <vuln vid="e4d9dffb-2a32-11ea-9693-e1b3f6feec79">
    <topic>OpenEXR -- heap buffer overflow, and out-of-memory bugs</topic>
    <affects>
      <package>
	<name>ilmbase</name>
	<range><lt>2.3.0_4</lt></range>
      </package>
      <package>
	<name>openexr</name>
	<range><lt>2.3.0_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cary Phillips reports:</p>
	<blockquote cite="https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.4.0">
	  <p>OpenEXR (IlmBase) v2.4.0 fixes the following security vulnerabilities:</p>
	  <ul>
	    <li>CVE-2018-18444 Issue #351 Out of Memory</li>
	    <li>CVE-2018-18443 Issue #350 heap-buffer-overflow</li>
	  </ul>
	  <p>The relevant patches have been backported to the FreeBSD ports.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/AcademySoftwareFoundation/openexr/releases/tag/v2.4.0</url>
      <url>https://github.com/AcademySoftwareFoundation/openexr/issues/350</url>
      <url>https://github.com/AcademySoftwareFoundation/openexr/issues/351</url>
      <cvename>CVE-2018-18443</cvename>
      <cvename>CVE-2018-18444</cvename>
    </references>
    <dates>
      <discovery>2018-10-17</discovery>
      <entry>2019-12-29</entry>
    </dates>
  </vuln>

  <vuln vid="7b97b32e-27c4-11ea-9673-4c72b94353b5">
    <topic>wordpress -- multiple issues</topic>
    <affects>
      <package>
	<name>wordpress</name>
	<name>fr-wordpress</name>
	<range><lt>5.3.1,1</lt></range>
      </package>
      <package>
	<name>de-wordpress</name>
	<name>zh_CN-wordpress</name>
	<name>zh_TW-wordpress</name>
	<name>ja-wordpress</name>
	<name>ru-wordpress</name>
	<range><lt>5.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>wordpress developers reports:</p>
	<blockquote cite="https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/">
	  <p>Four security issues affect WordPress versions 5.3 and earlier; version 5.3.1 fixes them, so youll want to upgrade.
	    If you havent yet updated to 5.3, there are also updated versions of 5.2 and earlier that fix the security issues.
	    -Props to Daniel Bachhuber for finding an issue where an unprivileged user could make a post sticky via the REST API.
	    -Props to Simon Scannell of RIPS Technologies for finding and disclosing an issue where cross-site scripting (XSS)
	     could be stored in well-crafted links.
	    -Props to the WordPress.org Security Team for hardening wp_kses_bad_protocol() to ensure that it is aware of the named
	     colon attribute.
	    -Props to Nguyen The Duc for discovering a stored XSS vulnerability using block editor content.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://wordpress.org/news/2019/12/wordpress-5-3-1-security-and-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-12-13</discovery>
      <entry>2019-12-26</entry>
    </dates>
  </vuln>

  <vuln vid="1c9178aa-2709-11ea-9673-4c72b94353b5">
    <topic>typo3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>typo3-8</name>
	<range><lt>8.7.30</lt></range>
      </package>
      <package>
	<name>typo3-9</name>
	<range><lt>9.5.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Typo3 core team reports:</p>
	<blockquote cite="https://typo3.org/article/typo3-10-2-1-9-5-12-and-8-7-30-security-releases-published">
	  <p>It has been discovered that the output of field validation errors in the Form Framework is vulnerable
	    to cross-site scripting.</p>
	  <p>It has been discovered that t3:// URL handling and typolink functionality are vulnerable to cross-site
	    scripting. Not only regular backend forms are affected but also frontend extensions which use the rendering
	    with typolink.</p>
	  <p>It has been discovered that the output table listing in the Files backend module is vulnerable to cross-site
	    scripting when a file extension contains malicious sequences. Access to the file system of the server - either
	    directly or through synchronization - is required to exploit the vulnerability.</p>
	  <p>It has been discovered that the extraction of manually uploaded ZIP archives in Extension Manager is vulnerable
	    to directory traversal. Admin privileges are required in order to exploit this vulnerability. Since TYPO3 v9 LTS,
	    System Maintainer privileges are required as well.</p>
	  <p>Failing to properly escape user submitted content, class QueryGenerator is vulnerable to SQL injection.
	    Having system extension ext:lowlevel installed and a valid backend user having administrator privileges are
	    required to exploit this vulnerability.</p>
	  <p>It has been discovered that classes QueryGenerator and QueryView are vulnerable to insecure deserialization.
	    Requirements for successfully exploiting this vulnerability (one of the following):
	    - having system extension ext:lowlevel (Backend Module: DB Check) installed and valid backend user having
	    administrator privileges
	    - having system extension ext:sys_action installed and valid backend user having limited privileges</p>
	  <p>TYPO3 allows to upload files either in the backend user interface as well as in custom developed extensions.
	    To reduce the possibility to upload potential malicious code TYPO3 uses the fileDenyPattern to deny e.g. user
	    submitted PHP scripts from being persisted. Besides that it is possible for any editor to upload file assets
	    using the file module (fileadmin) or changing their avatar image shown in the TYPO3 backend.

	    Per default TYPO3 allows to upload and store HTML and SVG files as well using the mentioned functionalities.
	    Custom extension implementations probably would also accept those files when only the fileDenyPattern is evaluated.

	    Since HTML and SVG files - which might contain executable JavaScript code per W3C standard - could be directly
	    displayed in web clients, the whole web application is exposed to be vulnerable concerning Cross-Site Scripting.
	    Currently the following scenarios are known - given an authenticated regular editor is able to upload files using
	    the TYPO3 backend:
	    - directly target a potential victim to a known public resource in a URL, e.g. /fileadmin/malicious.svg or
	    /fileadmin/malicious.html
	    - using the TypoScript content object “SVG” (implemented in class ScalableVectorGraphicsContentObject)
	    having renderMode set to inline for SVG files (available since TYPO3 v9.0)
	    - custom implementations that directly output and render markup of HTML and SVG files

	    SVG files that are embedded using an img src=”malicious.svg” tag are not vulnerable since potential
	    scripts are not executed in these scenarios (see https://www.w3.org/wiki/SVG_Security). The icon API of TYPO3
	    is not scope of this announcement since SVG icons need to be registered using an individual implementation,
	      which is not considered as user submitted content.</p>
	    <p>It has been discovered that request handling in Extbase can be vulnerable to insecure deserialization.
	      User submitted payload has to be signed with a corresponding HMAC-SHA1 using the sensitive TYPO3 encryptionKey
	      as secret - invalid or unsigned payload is not deserialized.

	      However, since sensitive information could have been leaked by accident (e.g. in repositories or in commonly
	      known and unprotected backup files), there is the possibility that attackers know the private encryptionKey
	      and are able to calculate the required HMAC-SHA1 to allow a malicious payload to be deserialized.

	      Requirements for successfully exploiting this vulnerability (all of the following):
	      - rendering at least one Extbase plugin in the frontend
	      - encryptionKey has been leaked (from LocalConfiguration.php or corresponding .env file). </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-021/</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-022/</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-023/</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-024/</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-025/</url>
      <url>https://typo3.org/security/advisory/typo3-core-sa-2019-026/</url>
      <url>https://typo3.org/security/advisory/typo3-psa-2019-010/</url>
      <url>https://typo3.org/security/advisory/typo3-psa-2019-011/</url>
    </references>
    <dates>
      <discovery>2019-12-17</discovery>
      <entry>2019-12-25</entry>
    </dates>
  </vuln>

  <vuln vid="ad3451b9-23e0-11ea-8b36-f1925a339a82">
    <topic>e2fsprogs -- maliciously corrupted file systems can trigger buffer overruns in the quota code used by e2fsck</topic>
    <affects>
      <package>
	<name>e2fsprogs</name>
	<range><lt>1.45.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ted Y. Ts'o reports:</p>
	<blockquote cite="http://e2fsprogs.sourceforge.net/e2fsprogs-release.html#1.45.4">
	  <p>A maliciously corrupted file systems can trigger buffer overruns in the quota code used by e2fsck.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://e2fsprogs.sourceforge.net/e2fsprogs-release.html#1.45.4</url>
      <cvename>CVE-2019-5094</cvename>
    </references>
    <dates>
      <discovery>2019-09-23</discovery>
      <entry>2019-12-21</entry>
    </dates>
  </vuln>

  <vuln vid="3da0352f-2397-11ea-966e-000ffec0b3e1">
    <topic>drupal -- Drupal Core - Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.69</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.8.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/sa-core-2019-009">
	  <p>A visit to install.php can cause cached data to become corrupted.
	    This could cause a site to be impaired until caches are rebuilt.</p>
	</blockquote>
	<blockquote cite="https://www.drupal.org/sa-core-2019-010">
	  <p>Drupal 8 core's file_save_upload() function does not strip the
	    leading and trailing dot ('.') from filenames, like Drupal 7 did.
	    Users with the ability to upload files with any extension in
	    conjunction with contributed modules may be able to use this to
	    upload system files such as .htaccess in order to bypass protections
	    afforded by Drupal's default .htaccess file. After this fix,
	    file_save_upload() now trims leading and trailing dots from filenames.
	  </p>
	</blockquote>
	<blockquote cite="https://www.drupal.org/sa-core-2019-011">
	  <p>The Media Library module has a security vulnerability whereby it
	    doesn't sufficiently restrict access to media items in certain
	    configurations.
	  </p>
	</blockquote>
	<blockquote cite="https://www.drupal.org/sa-core-2019-012">
	  <p>The Drupal project uses the third-party library Archive_Tar, which
	    has released a security-related feature that impacts some Drupal
	    configurations. Multiple vulnerabilities are possible if Drupal is
	    configured to allow .tar, .tar.gz, .bz2 or .tlz file uploads and
	    processes them. The latest versions of Drupal update Archive_Tar to
	    1.4.9 to mitigate the file processing vulnerabilities.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2019-009</url>
      <url>https://www.drupal.org/sa-core-2019-010</url>
      <url>https://www.drupal.org/sa-core-2019-011</url>
      <url>https://www.drupal.org/sa-core-2019-012</url>
    </references>
    <dates>
      <discovery>2019-12-18</discovery>
      <entry>2019-12-21</entry>
    </dates>
  </vuln>

  <vuln vid="ed8cbad5-21a8-11ea-9b6d-901b0e934d69">
    <topic>py-matrix-synapse -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>1.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/releases/tag/v1.7.1">
	  <p>The [synapse 1.7.1] release includes several security fixes as well
	    as a fix to a bug exposed by the security fixes. All previous releases
	    of Synapse are affected. Administrators are encouraged to upgrade as
	    soon as possible.</p>
	  <ul>
	    <li>Fix a bug which could cause room events to be incorrectly authorized
	      using events from a different room.</li>
	    <li>Fix a bug causing responses to the /context client endpoint to not
	      use the pruned version of the event.</li>
	    <li>Fix a cause of state resets in room versions 2 onwards.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.7.1</url>
    </references>
    <dates>
      <discovery>2019-12-18</discovery>
      <entry>2019-12-18</entry>
    </dates>
  </vuln>

  <vuln vid="d778ddb0-2338-11ea-a1c7-b499baebfeaf">
    <topic>OpenSSL -- Overflow vulnerability</topic>
    <affects>
      <package>
	<name>openssl</name>
	<range><lt>1.0.2u,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The OpenSSL project reports:</p>
	<blockquote cite="https://www.openssl.org/news/secadv/20191206.txt">
	  <p>rsaz_512_sqr overflow bug on x86_64 (CVE-2019-1551) (Low)<br/>
	    There is an overflow bug in the x64_64 Montgomery squaring procedure
	    used in exponentiation with 512-bit moduli. No EC algorithms are
	    affected. Analysis suggests that attacks against 2-prime RSA1024,
	    3-prime RSA1536, and DSA1024 as a result of this defect would be very
	    difficult to perform and are not believed likely. Attacks against
	    DH512 are considered just feasible. However, for an attack the target
	    would have to re-use the DH512 private key, which is not recommended
	    anyway. Also applications directly using the low level API BN_mod_exp
	    may be affected if they use BN_FLG_CONSTTIME.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openssl.org/news/secadv/20191206.txt</url>
      <cvename>CVE-2019-1551</cvename>
    </references>
    <dates>
      <discovery>2019-12-06</discovery>
      <entry>2019-12-20</entry>
    </dates>
  </vuln>

  <vuln vid="70111759-1dae-11ea-966a-206a8a720317">
    <topic>spamassassin -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>spamassassin</name>
	<range><lt>3.4.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>the Apache Spamassassin project reports:</p>
	<blockquote cite="https://www.cybersecurity-help.cz/vdb/SB2019121311">
	  <p>An input validation error of user-supplied input parsing
	    multipart emails. Specially crafted emails can consume all
	    resources on the system.</p>
	  <p>A local user is able to execute arbitrary shell commands
	     through specially crafted nefarious CF files.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.cybersecurity-help.cz/vdb/SB2019121311</url>
	<cvename>CVE-2019-12420</cvename>
	<cvename>CVE-2018-11805</cvename>
    </references>
    <dates>
      <discovery>2019-12-11</discovery>
      <entry>2019-12-13</entry>
    </dates>
  </vuln>

  <vuln vid="1edae47e-1cdd-11ea-8c2a-08002743b791">
    <topic>samba -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>samba48</name>
	<range><ge>4.8.0</ge></range>
      </package>
      <package>
	<name>samba410</name>
	<range><lt>4.10.11</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Samba Team reports:</p>
	<blockquote cite="https://www.samba.org/samba/history/samba-4.10.11.html">
	  <p>CVE-2019-14861:</p>
	  <p>An authenticated user can crash the DCE/RPC DNS management server by creating records with matching the zone name.</p>
	  <p>CVE-2019-14870:</p>
	  <p>The DelegationNotAllowed Kerberos feature restriction was not being applied when processing protocol transition requests (S4U2Self), in the AD DC KDC.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/history/samba-4.10.11.html</url>
      <cvename>CVE-2019-14861</cvename>
      <cvename>CVE-2019-14870</cvename>
    </references>
    <dates>
      <discovery>2019-12-10</discovery>
      <entry>2019-12-12</entry>
    </dates>
  </vuln>

  <vuln vid="b7dc4dde-2e48-43f9-967a-c68461537cf2">
    <topic>dovecot -- null pointer deref in notify with empty headers</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><ge>2.3.9</ge><lt>2.3.9.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot/2019-December/117894.html">
	  <p>Mail with group address as sender will cause a signal 11 crash in push
 notification drivers. Group address as recipient can cause crash in some
 drivers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot/2019-December/117894.html</url>
      <cvename>CVE-2019-19722</cvename>
    </references>
    <dates>
      <discovery>2019-12-10</discovery>
      <entry>2019-12-13</entry>
    </dates>
  </vuln>

  <vuln vid="21944144-1b90-11ea-a2d4-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.5.0</ge><lt>12.5.4</lt></range>
	<range><ge>12.4.0</ge><lt>12.4.6</lt></range>
	<range><ge>10.5.0</ge><lt>12.3.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/blog/2019/12/10/critical-security-release-gitlab-12-5-4-released/">
	  <p>Path traversal with potential remote code execution</p>
	  <p>Disclosure of private code via Elasticsearch integration</p>
	  <p>Update Git dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/blog/2019/12/10/critical-security-release-gitlab-12-5-4-released/</url>
      <cvename>CVE-2019-19628</cvename>
      <cvename>CVE-2019-19629</cvename>
      <cvename>CVE-2019-19604</cvename>
    </references>
    <dates>
      <discovery>2019-12-10</discovery>
      <entry>2019-12-10</entry>
    </dates>
  </vuln>

  <vuln vid="22ae307a-1ac4-11ea-b267-001cc0382b2f">
    <topic>Ghostscript -- Security bypass vulnerabilities</topic>
    <affects>
      <package>
	<name>ghostscript9-agpl-base</name>
	<name>ghostscript9-agpl-x11</name>
	<range><lt>9.50</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cedric Buissart (Red Hat) reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14811">
	  <p>A flaw was found in, ghostscript versions prior to 9.50, in the
	    .pdf_hook_DSC_Creator procedure where it did not properly secure
	    its privileged calls, enabling scripts to bypass `-dSAFER`
	    restrictions. A specially crafted PostScript file could disable
	    security protection and then have access to the file system, or
	    execute arbitrary commands.</p>
	</blockquote>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14812">
	  <p>A flaw was found in all ghostscript versions 9.x before 9.50, in
	    the .setuserparams2 procedure where it did not properly secure its
	    privileged calls, enabling scripts to bypass `-dSAFER`
	    restrictions. A specially crafted PostScript file could disable
	    security protection and then have access to the file system, or
	    execute arbitrary commands.</p>
	</blockquote>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14813">
	  <p>A flaw was found in ghostscript, versions 9.x before 9.50, in the
	    setsystemparams procedure where it did not properly secure its
	    privileged calls, enabling scripts to bypass `-dSAFER`
	    restrictions. A specially crafted PostScript file could disable
	    security protection and then have access to the file system, or
	    execute arbitrary commands.</p>
	</blockquote>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14817">
	  <p>A flaw was found in, ghostscript versions prior to 9.50, in the
	    .pdfexectoken and other procedures where it did not properly secure
	    its privileged calls, enabling scripts to bypass `-dSAFER`
	    restrictions. A specially crafted PostScript file could disable
	    security protection and then have access to the file system, or
	    execute arbitrary commands.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-14811</cvename>
      <cvename>CVE-2019-14812</cvename>
      <cvename>CVE-2019-14813</cvename>
      <cvename>CVE-2019-14817</cvename>
    </references>
    <dates>
      <discovery>2019-08-20</discovery>
      <entry>2019-12-09</entry>
    </dates>
  </vuln>

  <vuln vid="ca3fe5b3-185e-11ea-9673-4c72b94353b5">
    <topic>phpmyadmin -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>phpmyadmin</name>
	<range><lt>4.9.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>the phpmyadmin team reports:</p>
	<blockquote cite="https://www.phpmyadmin.net/news/2019/11/22/phpmyadmin-492-released/">
	  <p>This security fix is part of an ongoing effort to improve the security of the Designer feature
	    and is designated PMASA-2019-5. There is also an improvement for how we sanitize git version
	    information shown on the home page.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.phpmyadmin.net/news/2019/11/22/phpmyadmin-492-released/</url>
    </references>
    <dates>
      <discovery>2019-11-22</discovery>
      <entry>2019-12-06</entry>
    </dates>
  </vuln>

  <vuln vid="4e3fa78b-1577-11ea-b66e-080027bdabe8">
    <topic>Django -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py35-django21</name>
	<name>py36-django21</name>
	<name>py37-django21</name>
	<name>py38-django21</name>
	<range><lt>2.1.15</lt></range>
      </package>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<name>py38-django22</name>
	<range><lt>2.2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django release reports:</p>
	<blockquote cite="https://www.djangoproject.com/weblog/2019/dec/02/security-releases/">
	  <p>CVE-2019-19118: Privilege escalation in the Django admin.</p>
	  <p>Since Django 2.1, a Django model admin displaying a parent model with related
	    model inlines, where the user has view-only permissions to a parent model but
	    edit permissions to the inline model, would display a read-only view of the parent
	    model but editable forms for the inline.</p>
	  <p>Submitting these forms would not allow direct edits to the parent model, but would
	    trigger the parent model's save() method, and cause pre and post-save signal handlers
	    to be invoked. This is a privilege escalation as a user who lacks permission to edit
	    a model should not be able to trigger its save-related signals.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.djangoproject.com/weblog/2019/dec/02/security-releases/</url>
      <cvename>CVE-2019-19118</cvename>
    </references>
    <dates>
      <discovery>2019-11-25</discovery>
      <entry>2019-12-03</entry>
    </dates>
  </vuln>

  <vuln vid="9c36d41c-11df-11ea-9b6d-901b0e934d69">
    <topic>py-matrix-synapse -- incomplete cleanup of 3rd-party-IDs on user deactivation</topic>
    <affects>
      <package>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>1.6.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/releases/tag/v1.6.1">
	  <p>Clean up local threepids from user on account deactivation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.6.1</url>
      <url>https://github.com/matrix-org/synapse/pull/6426</url>
    </references>
    <dates>
      <discovery>2019-11-28</discovery>
      <entry>2019-11-28</entry>
    </dates>
  </vuln>

  <vuln vid="42675046-fa70-11e9-ba4e-901b0e934d69">
    <topic>py-matrix-synapse -- missing signature checks on some federation APIs</topic>
    <affects>
      <package>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>1.5.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://github.com/matrix-org/synapse/pull/6262">
	  <p>Make sure that [...] events sent over /send_join, /send_leave, and
	  /invite, are correctly signed and come from the expected servers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/matrix-org/synapse/pull/6262</url>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.5.0</url>
    </references>
    <dates>
      <discovery>2019-10-29</discovery>
      <entry>2019-10-29</entry>
    </dates>
  </vuln>

  <vuln vid="4ce7c28a-11ac-11ea-b537-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.5.0</ge><lt>12.5.2</lt></range>
	<range><ge>12.4.0</ge><lt>12.4.5</lt></range>
	<range><ge>11.9.0</ge><lt>12.3.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/blog/2019/11/27/security-release-gitlab-12-5-2-released/">
	  <p>Unauthorized access to grafana metrics</p>
	  <p>Update Mattermost dependency</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/blog/2019/11/27/security-release-gitlab-12-5-2-released/</url>
      <cvename>CVE-2019-19262</cvename>
    </references>
    <dates>
      <discovery>2019-11-27</discovery>
      <entry>2019-11-28</entry>
    </dates>
  </vuln>

  <vuln vid="1aa7a094-1147-11ea-b537-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.5.0</ge><lt>12.5.1</lt></range>
	<range><ge>12.4.0</ge><lt>12.4.4</lt></range>
	<range><lt>12.3.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/blog/2019/11/27/security-release-gitlab-12-5-1-released/">
	  <p>Path traversal with potential remote code execution</p>
	  <p>Private objects exposed through project import</p>
	  <p>Disclosure of notes via Elasticsearch integration</p>
	  <p>Disclosure of comments via Elasticsearch integration</p>
	  <p>DNS Rebind SSRF in various chat notifications</p>
	  <p>Disclosure of vulnerability status in dependency list</p>
	  <p>Disclosure of commit count in Cycle Analytics</p>
	  <p>Exposure of related branch names</p>
	  <p>Tags pushes from blocked users</p>
	  <p>Branches and Commits exposed to Guest members via integration</p>
	  <p>IDOR when adding users to protected environments</p>
	  <p>Former project members able to access repository information</p>
	  <p>Unauthorized access to grafana metrics</p>
	  <p>Todos created for former project members</p>
	  <p>Update Mattermost dependency</p>
	  <p>Disclosure of AWS secret keys on certain Admin pages</p>
	  <p>Stored XSS in Group and User profile fields</p>
	  <p>Forked project information disclosed via Project API</p>
	  <p>Denial of Service in the issue and commit comment pages</p>
	  <p>Tokens stored in plaintext</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/blog/2019/11/27/security-release-gitlab-12-5-1-released/</url>
      <cvename>CVE-2019-19088</cvename>
      <cvename>CVE-2019-19309</cvename>
      <cvename>CVE-2019-19086</cvename>
      <cvename>CVE-2019-19087</cvename>
      <cvename>CVE-2019-19261</cvename>
      <cvename>CVE-2019-19256</cvename>
      <cvename>CVE-2019-19254</cvename>
      <cvename>CVE-2019-19257</cvename>
      <cvename>CVE-2019-19263</cvename>
      <cvename>CVE-2019-19258</cvename>
      <cvename>CVE-2019-19259</cvename>
      <cvename>CVE-2019-19260</cvename>
      <cvename>CVE-2019-19262</cvename>
      <cvename>CVE-2019-19255</cvename>
      <cvename>CVE-2019-19310</cvename>
      <cvename>CVE-2019-19311</cvename>
      <cvename>CVE-2019-19312</cvename>
      <cvename>CVE-2019-19313</cvename>
      <cvename>CVE-2019-19314</cvename>
    </references>
    <dates>
      <discovery>2019-11-27</discovery>
      <entry>2019-11-27</entry>
    </dates>
  </vuln>

  <vuln vid="3e748551-c732-45f6-bd88-928da16f23a8">
    <topic>webkit2-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.26.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports multiple vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2019-0006.html</url>
      <cvename>CVE-2019-8710</cvename>
      <cvename>CVE-2019-8743</cvename>
      <cvename>CVE-2019-8764</cvename>
      <cvename>CVE-2019-8765</cvename>
      <cvename>CVE-2019-8766</cvename>
      <cvename>CVE-2019-8782</cvename>
      <cvename>CVE-2019-8783</cvename>
      <cvename>CVE-2019-8808</cvename>
      <cvename>CVE-2019-8811</cvename>
      <cvename>CVE-2019-8812</cvename>
      <cvename>CVE-2019-8813</cvename>
      <cvename>CVE-2019-8814</cvename>
      <cvename>CVE-2019-8815</cvename>
      <cvename>CVE-2019-8816</cvename>
      <cvename>CVE-2019-8819</cvename>
      <cvename>CVE-2019-8820</cvename>
      <cvename>CVE-2019-8821</cvename>
      <cvename>CVE-2019-8822</cvename>
      <cvename>CVE-2019-8823</cvename>
    </references>
    <dates>
      <discovery>2019-11-08</discovery>
      <entry>2019-11-27</entry>
    </dates>
  </vuln>

  <vuln vid="87270ba5-03d3-11ea-b81f-3085a9a95629">
    <topic>urllib3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-urllib3</name>
	<name>py35-urllib3</name>
	<name>py36-urllib3</name>
	<name>py37-urllib3</name>
	<name>py38-urllib3</name>
	<range><lt>1.24.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NIST reports: (by search in the range 2018/01/01 - 2019/11/10):</p>
	<blockquote cite="https://nvd.nist.gov/vuln/search/results?form_type=Advanced&amp;results_type=overview&amp;query=urllib3&amp;search_type=all&amp;pub_start_date=01%2F01%2F2018&amp;pub_end_date=11%2F10%2F2019">
	  <p>urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.</p>
	  <p>In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.</p>
	  <p>The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/search/results?form_type=Advanced&amp;results_type=overview&amp;query=urllib3&amp;search_type=all&amp;pub_start_date=01%2F01%2F2018&amp;pub_end_date=11%2F10%2F2019</url>
      <cvename>CVE-2018-20060</cvename>
      <cvename>CVE-2019-11236</cvename>
      <cvename>CVE-2019-11324</cvename>
      <freebsdpr>ports/229322</freebsdpr>
    </references>
    <dates>
      <discovery>2018-12-11</discovery>
      <entry>2019-11-26</entry>
    </dates>
  </vuln>

  <vuln vid="fbe10a8a-05a1-11ea-9dfa-f8b156ac3ff9">
    <topic>FreeBSD -- Intel CPU Microcode Update</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_1</lt></range>
	<range><ge>12.0</ge><lt>12.0_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Starting with version 1.26, the devcpu-data port/package includes
	updates and mitigations for the following technical and security
	advisories (depending on CPU model).</p>
	<p>Intel TSX Updates (TAA) CVE-2019-11135 Voltage Modulation
	Vulnerability CVE-2019-11139 MD_CLEAR Operations
	CVE-2018-12126 CVE-2018-12127 CVE-2018-12130 CVE-2018-11091
	TA Indirect Sharing CVE-2017-5715 EGETKEY CVE-2018-12126
	CVE-2018-12127 CVE-2018-12130 CVE-2018-11091 JCC SKX102
	  Erratum </p>
	<p>Updated microcode includes mitigations for
	CPU issues, but may also cause a performance regression due
	to the JCC erratum mitigation.  Please visit
	http://www.intel.com/benchmarks for further information.
	</p>
	<p>Please visit http://www.intel.com/security for
	detailed information on these advisories as well as a list of
	CPUs that are affected.</p>
	<p>Operating a CPU without the latest microcode may result in erratic or
	unpredictable behavior, including system crashes and lock ups.
	Certain issues listed in this advisory may result in the leakage of
	privileged system information to unprivileged users.  Please refer to
	the security advisories listed above for detailed information.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11135</cvename>
      <cvename>CVE-2019-11139</cvename>
      <cvename>CVE-2018-12126</cvename>
      <cvename>CVE-2018-12127</cvename>
      <cvename>CVE-2018-12130</cvename>
      <cvename>CVE-2018-11091</cvename>
      <cvename>CVE-2017-5715</cvename>
      <freebsdsa>SA-19:26.mcu</freebsdsa>
    </references>
    <dates>
      <discovery>2019-11-14</discovery>
      <entry>2019-11-25</entry>
    </dates>
  </vuln>

  <vuln vid="edc0bf7e-05a1-11ea-9dfa-f8b156ac3ff9">
    <topic>FreeBSD -- Machine Check Exception on Page Size Change</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.1</ge><lt>12.1_1</lt></range>
	<range><ge>12.0</ge><lt>12.0_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Intel discovered a previously published erratum on some Intel
	platforms can be exploited by malicious software to potentially cause
	a denial of service by triggering a machine check that will crash or
	hang the system.</p>
	<p>Malicious guest operating systems may be able to crash the host.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-12207</cvename>
      <freebsdsa>SA-19:25.mcepsc</freebsdsa>
    </references>
    <dates>
      <discovery>2019-11-14</discovery>
      <entry>2019-11-25</entry>
    </dates>
  </vuln>

  <vuln vid="6ade62d9-0f62-11ea-9673-4c72b94353b5">
    <topic>clamav -- Denial-of-Service (DoS) vulnerability</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.102.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Micah Snyder reports:</p>
	<blockquote cite="https://blog.clamav.net/2019/11/clamav-01021-and-01015-patches-have.html">
	  <p>A Denial-of-Service (DoS) vulnerability may occur when scanning a specially crafted email
	    file as a result of excessively long scan times. The issue is resolved by implementing
	    several maximums in parsing MIME messages and by optimizing use of memory allocation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2019/11/clamav-01021-and-01015-patches-have.html</url>
      <cvename>CVE-2019-15961</cvename>
    </references>
    <dates>
      <discovery>2019-09-06</discovery>
      <entry>2019-11-25</entry>
    </dates>
  </vuln>

  <vuln vid="ffc80e58-0dcb-11ea-9673-4c72b94353b5">
    <topic>unbound -- parsing vulnerability</topic>
    <affects>
      <package>
	<name>unbound</name>
	<range><lt>1.9.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Unbound Security Advisories:</p>
	<blockquote cite="https://nlnetlabs.nl/projects/unbound/security-advisories/#vulnerability-in-ipsec-module">
	  <p>Recent versions of Unbound contain a vulnerability that can cause shell
	    code execution after receiving a specially crafted answer. This issue
	    can only be triggered if unbound was compiled with --enable-ipsecmod
	    support, and ipsecmod is enabled and used in the configuration.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nlnetlabs.nl/projects/unbound/security-advisories/#vulnerability-in-ipsec-module</url>
      <cvename>CVE-2019-18934</cvename>
    </references>
    <dates>
      <discovery>2019-11-19</discovery>
      <entry>2019-11-23</entry>
    </dates>
  </vuln>

  <vuln vid="b12a341a-0932-11ea-bf09-080027e0baa0">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.9.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/11/gitea-1.10.0-is-released/">
	  <p>This release contains five security fixes, so we recommend updating:</p>
	  <ul>
	    <li>Fix issue with user.fullname</li>
	    <li>Ignore mentions for users with no access</li>
	    <li>Be more strict with git arguments</li>
	    <li>Extract the username and password from the mirror url</li>
	    <li>Reserve .well-known username</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/11/gitea-1.10.0-is-released/</url>
      <freebsdpr>ports/241981</freebsdpr>
    </references>
    <dates>
      <discovery>2019-11-17</discovery>
      <entry>2019-11-22</entry>
    </dates>
  </vuln>

  <vuln vid="94c6951a-0d04-11ea-87ca-001999f8d30b">
    <topic>asterisk -- Re-invite with T.38 and malformed SDP causes crash</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.29.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>If Asterisk receives a re-invite initiating T.38 faxing
	  and has a port of 0 and no c line in the SDP, a crash
	  will occur.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-008.html</url>
      <cvename>CVE-2019-18976</cvename>
    </references>
    <dates>
      <discovery>2019-11-07</discovery>
      <entry>2019-11-22</entry>
    </dates>
  </vuln>

  <vuln vid="49b61ab6-0d04-11ea-87ca-001999f8d30b">
    <topic>asterisk -- AMI user could execute system commands</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.29.2</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.6.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>A remote authenticated Asterisk Manager Interface (AMI)
	  user without system authorization could use a specially
	  crafted Originate AMI request to execute arbitrary system
	  commands.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-007.html</url>
      <cvename>CVE-2019-18610</cvename>
    </references>
    <dates>
      <discovery>2019-10-10</discovery>
      <entry>2019-11-22</entry>
    </dates>
  </vuln>

  <vuln vid="a8d94711-0d03-11ea-87ca-001999f8d30b">
    <topic>asterisk -- SIP request can change address of a SIP peer</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.29.2</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.6.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>A SIP request can be sent to Asterisk that can change
	  a SIP peers IP address. A REGISTER does not need to occur,
	  and calls can be hijacked as a result. The only thing
	  that needs to be known is the peers name; authentication
	  details such as passwords do not need to be known. This
	  vulnerability is only exploitable when the nat option is
	  set to the default, or auto_force_rport.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-006.html</url>
      <cvename>CVE-2019-18790</cvename>
    </references>
    <dates>
      <discovery>2019-10-17</discovery>
      <entry>2019-11-22</entry>
    </dates>
  </vuln>

  <vuln vid="ecb7fdec-0b82-11ea-874d-0c9d925bbbc0">
    <topic>drm graphics drivers -- Local privilege escalation and denial of service</topic>
    <affects>
      <package>
	<name>drm-current-kmod</name>
	<range><lt>4.16.g20191120</lt></range>
      </package>
      <package>
	<name>drm-devel-kmod</name>
	<range><lt>5.0.g20191120</lt></range>
      </package>
      <package>
	<name>drm-fbsd12.0-kmod</name>
	<range><lt>4.16.g20191120</lt></range>
      </package>
      <package>
	<name>drm-fbsd11.2-kmod</name>
	<range><lt>4.11.g20191204</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Intel reports:</p>
	<blockquote cite="https://blogs.intel.com/technology/2019/11/ipas-november-2019-intel-platform-update-ipu">
	  <p>As part of IPU 2019.2, INTEL-SA-00242 advises that insufficient
	    access control may allow an authenticated user to potentially
	    enable escalation of privilege via local access.</p>
	  <p>INTEL-SA-00260 advises that insufficient access control may
	    allow an authenticated user to potentially enable denial of
	    service via local access.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blogs.intel.com/technology/2019/11/ipas-november-2019-intel-platform-update-ipu</url>
      <url>https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00242.html</url>
      <url>https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00260.html</url>
      <cvename>CVE-2019-0154</cvename>
      <cvename>CVE-2019-11112</cvename>
    </references>
    <dates>
      <discovery>2019-11-12</discovery>
      <entry>2019-11-20</entry>
      <modified>2019-12-04</modified>
    </dates>
  </vuln>

  <vuln vid="620685d6-0aa3-11ea-9673-4c72b94353b5">
    <topic>squid -- Vulnerable to HTTP Digest Authentication</topic>
    <affects>
      <package>
	<name>squid</name>
	<range><lt>4.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Squid Team reports:</p>
	<blockquote cite="http://www.squid-cache.org/Advisories/SQUID-2019_11.txt">
	  <p>Problem Description: Due to incorrect data management Squid is
	    vulnerable to a information disclosure when processing HTTP Digest
	    Authentication.</p>
	  <p>Severity: Nonce tokens contain the raw byte value of a pointer which sits
	    within heap memory allocation. This information reduces ASLR protections
	    and may aid attackers isolating memory areas to target for remote code
	    execution attacks.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://www.squid-cache.org/Advisories/SQUID-2019_11.txt</url>
      <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18679</url>
      <cvename>CVE-2019-18679</cvename>
    </references>
    <dates>
      <discovery>2019-11-05</discovery>
      <entry>2019-11-19</entry>
    </dates>
  </vuln>

  <vuln vid="f04f840d-0840-11ea-8d66-75d3253ef913">
    <topic>libidn2 -- roundtrip check vulnerability</topic>
    <affects>
      <package>
	<name>libidn2</name>
	<range><lt>2.2.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>CVE list:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12290">
	  <p>GNU libidn2 before 2.2.0 fails to perform the roundtrip checks
	    specified in RFC3490 Section 4.2 when converting A-labels to U-labels.
	    This makes it possible in some circumstances for one domain to
	    impersonate another. By creating a malicious domain that matches a
	    target domain except for the inclusion of certain punycoded Unicode
	    characters (that would be discarded when converted first to a Unicode
	    label and then back to an ASCII label), arbitrary domains can be
	    impersonated.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gitlab.com/libidn/libidn2/blob/master/NEWS</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12290</url>
      <cvename>CVE-2019-12290</cvename>
    </references>
    <dates>
      <discovery>2019-11-14</discovery>
      <entry>2019-11-18</entry>
      <modified>2020-06-24</modified>
    </dates>
  </vuln>

  <vuln vid="f59af308-07f3-11ea-8c56-f8b156b6dcc8">
    <topic>GNU cpio -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gcpio</name>
	<range><lt>2.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Sergey Poznyakoff reports:</p>
	<blockquote cite="https://lists.gnu.org/archive/html/bug-cpio/2019-11/msg00000.html">
	  <p>This stable release fixes several potential vulnerabilities</p>
	  <p>CVE-2015-1197: cpio, when using the --no-absolute-filenames
	    option, allows local users to write to arbitrary files
	    via a symlink attack on a file in an archive.</p>
	  <p>CVE-2016-2037: The cpio_safer_name_suffix function in
	    util.c allows remote attackers to cause a denial of service
	    (out-of-bounds write) via a crafted cpio file.</p>
	  <p>CVE-2019-14866: Improper input validation when writing
	    tar header fields leads to unexpected tar generation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.gnu.org/archive/html/bug-cpio/2019-11/msg00000.html</url>
      <cvename>CVE-2015-1197</cvename>
      <cvename>CVE-2016-2037</cvename>
      <cvename>CVE-2019-14866</cvename>
    </references>
    <dates>
      <discovery>2019-11-06</discovery>
      <entry>2019-11-15</entry>
    </dates>
  </vuln>

  <vuln vid="b48e7b14-052a-11ea-a1de-53b029d2b061">
    <topic>libmad -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>libmad</name>
	<range><lt>0.15.1b_7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>National Vulnerability Database:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2017-8372">
	  <p>CVE-2017-8372: The mad_layer_III function in layer3.c in Underbit MAD
	    libmad 0.15.1b, if NDEBUG is omitted, allows remote attackers to cause a
	    denial of service (assertion failure and application exit) via a crafted
	    audio file.</p>
	</blockquote>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2017-8373">
	  <p>CVE-2017-8373: The mad_layer_III function in layer3.c in Underbit MAD
	    libmad 0.15.1b allows remote attackers to cause a denial of service
	    (heap-based buffer overflow and application crash) or possibly have
	    unspecified other impact via a crafted audio file.</p>
	</blockquote>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2017-8374">
	  <p>CVE-2017-8374: The mad_bit_skip function in bit.c in Underbit MAD
	    libmad 0.15.1b allows remote attackers to cause a denial of service
	    (heap-based buffer over-read and application crash) via a crafted audio
	    file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=508133#15</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2017-8372</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2017-8373</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2017-8374</url>
      <url>https://blogs.gentoo.org/ago/2017/04/30/libmad-assertion-failure-in-layer3-c/</url>
      <url>https://blogs.gentoo.org/ago/2017/04/30/libmad-heap-based-buffer-overflow-in-mad_layer_iii-layer3-c/</url>
      <url>https://blogs.gentoo.org/ago/2017/04/30/libmad-heap-based-buffer-overflow-in-mad_bit_skip-bit-c/</url>
      <cvename>CVE-2017-8372</cvename>
      <cvename>CVE-2017-8373</cvename>
      <cvename>CVE-2017-8374</cvename>
    </references>
    <dates>
      <discovery>2017-04-30</discovery>
      <entry>2019-11-13</entry>
    </dates>
  </vuln>

  <vuln vid="88d00176-058e-11ea-bd1c-3065ec8fd3ec">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>78.0.3904.97</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2019/11/stable-channel-update-for-desktop.html">
	  <p>Four security issues were fixed, including:</p>
	  <ul>
	    <li>[1021723] Various fixes from internal audits, fuzzing and other
	    initiatives</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://chromereleases.googleblog.com/2019/11/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2019-11-06</discovery>
      <entry>2019-11-12</entry>
    </dates>
  </vuln>

  <vuln vid="459df1ba-051c-11ea-9673-4c72b94353b5">
    <topic>wordpress -- multiple issues</topic>
    <affects>
      <package>
	<name>wordpress</name>
	<name>fr-wordpress</name>
	<range><lt>5.2.4,1</lt></range>
      </package>
      <package>
	<name>de-wordpress</name>
	<name>zh_CN-wordpress</name>
	<name>zh_TW-wordpress</name>
	<name>ja-wordpress</name>
	<name>ru-wordpress</name>
	<range><lt>5.2.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>wordpress developers reports:</p>
	<blockquote cite="https://wordpress.org/news/2019/10/wordpress-5-2-4-security-release/">
	  <p>Props to Evan Ricafort for finding an issue where stored XSS (cross-site scripting)
	    could be added via the Customizer.</p>
	  <p>rops to J.D. Grimes who found and disclosed a method of viewing unauthenticated posts.</p>
	  <p>Props to Weston Ruter for finding a way to create a stored XSS to inject Javascript
	    into style tags.</p>
	  <p>rops to David Newman for highlighting a method to poison the cache of JSON GET requests
	    via the Vary: Origin header.</p>
	  <p>Props to Eugene Kolodenker who found a server-side request forgery in the way that URLs
	    are validated.</p>
	  <p>Props to Ben Bidner of the WordPress Security Team who discovered issues related to
	    referrer validation in the admin.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://wordpress.org/news/2019/10/wordpress-5-2-4-security-release/</url>
    </references>
    <dates>
      <discovery>2019-10-14</discovery>
      <entry>2019-11-12</entry>
    </dates>
  </vuln>

  <vuln vid="b2f9573a-008c-11ea-9801-10c37b4ac2ea">
    <topic>nexus2-oss -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>nexus2-oss</name>
	<range><lt>2.14.15</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Sonatype reports:</p>
	<blockquote cite="https://help.sonatype.com/repomanager2/release-notes/2019-release-notes#id-2019ReleaseNotes-RepositoryManager2.14.15">
	  <p>Several RCE vulnerabilities have been found and corrected in 2.14.15:</p>
	  <p>CVE-2019-16530: An attacker with elevated privileges can upload a
	    specially crafted file. That file can contain commands that will
	    be executed on the system, with the same privileges as the user
	    running the server.</p>
	  <p>CVE-2019-15893: A Remote Code Execution vulnerability has been
	    discovered in Nexus Repository Manager requiring immediate
	    action. The vulnerability allows for an attacker with
	    administrative access to NXRM to create repostories that can
	    grant access to read/execute system data outside the scope of
	    NXRM.</p>
	  <p>CVE-2019-5475: A vulnerability has been found that can allow
	    user's with administrative privileges to run processes on the
	    target server, that the nxrm os user has access to.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-16530</cvename>
      <cvename>CVE-2019-15893</cvename>
      <cvename>CVE-2019-5475</cvename>
    </references>
    <dates>
      <discovery>2019-09-19</discovery>
      <entry>2019-11-07</entry>
    </dates>
  </vuln>

  <vuln vid="6a7c2ab0-00dd-11ea-83ce-705a0f828759">
    <topic>php -- env_path_info underflow in fpm_main.c can lead to RCE</topic>
    <affects>
      <package>
	<name>php71</name>
	<range><lt>7.1.33</lt></range>
      </package>
      <package>
	<name>php72</name>
	<range><lt>7.2.24</lt></range>
      </package>
      <package>
	<name>php73</name>
	<range><lt>7.3.11</lt></range>
      </package>
      <package>
	<name>php74</name>
	<range><lt>7.4.0.rc5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PHP project reports:</p>
	<blockquote cite="https://www.php.net/archive/2019.php#2019-10-24-2">
	  <p>The PHP development team announces the immediate availability of PHP 7.3.11. This is a security release which also contains several bug fixes.</p>
	</blockquote>
  <blockquote cite="https://www.php.net/archive/2019.php#2019-10-24-1">
	  <p>The PHP development team announces the immediate availability of PHP 7.2.24. This is a security release which also contains several bug fixes.</p>
	</blockquote>
  <blockquote cite="https://www.php.net/archive/2019.php#2019-10-24-3">
	  <p>The PHP development team announces the immediate availability of PHP 7.1.33. This is a security release which also contains several bug fixes.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11043</cvename>
      <url>https://www.php.net/archive/2019.php#2019-10-24-1</url>
      <url>https://www.php.net/archive/2019.php#2019-10-24-2</url>
      <url>https://www.php.net/archive/2019.php#2019-10-24-3</url>
    </references>
    <dates>
      <discovery>2019-10-24</discovery>
      <entry>2019-11-06</entry>
    </dates>
  </vuln>

  <vuln vid="c32285fe-fde4-11e9-9525-000c29c4dc65">
    <topic>mediawiki -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mediawiki131</name>
	<range><lt>1.31.5</lt></range>
      </package>
      <package>
	<name>mediawiki132</name>
	<range><lt>1.32.5</lt></range>
      </package>
      <package>
	<name>mediawiki133</name>
	<range><lt>1.33.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mediawiki reports:</p>
	<blockquote cite="https://lists.wikimedia.org/pipermail/mediawiki-announce/2019-October/000236.html">
	  <p>Security fixes:
	    T230402, CVE-2019-16738 SECURITY: Add permission check for suppressed account
	    to Special:Redirect.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-16738</cvename>
      <url>https://lists.wikimedia.org/pipermail/mediawiki-announce/2019-October/000236.html</url>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-11-03</entry>
    </dates>
  </vuln>

  <vuln vid="fc91f2ef-fd7b-11e9-a1c7-b499baebfeaf">
    <topic>MySQL -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>mariadb55-server</name>
	<range><lt>5.5.66</lt></range>
      </package>
      <package>
	<name>mariadb101-server</name>
	<range><lt>10.1.42</lt></range>
      </package>
      <package>
	<name>mariadb102-server</name>
	<range><lt>10.2.28</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.19</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.9</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.46</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.28</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.18</lt></range>
      </package>
      <package>
	<name>percona55-server</name>
	<range><lt>5.5.66</lt></range>
      </package>
      <package>
	<name>percona56-server</name>
	<range><lt>5.6.46</lt></range>
      </package>
      <package>
	<name>percona57-server</name>
	<range><lt>5.7.28</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/security-alerts/cpuoct2019.html">
	  <p>This Critical Patch Update contains 31 new security fixes for
	    Oracle MySQL. 6 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/security-alerts/cpuoct2019.html</url>
      <cvename>CVE-2019-5443</cvename>
      <cvename>CVE-2019-1543</cvename>
      <cvename>CVE-2019-3011</cvename>
      <cvename>CVE-2019-2966</cvename>
      <cvename>CVE-2019-2967</cvename>
      <cvename>CVE-2019-2974</cvename>
      <cvename>CVE-2019-2946</cvename>
      <cvename>CVE-2019-3004</cvename>
      <cvename>CVE-2019-2914</cvename>
      <cvename>CVE-2019-2969</cvename>
      <cvename>CVE-2019-2991</cvename>
      <cvename>CVE-2019-2920</cvename>
      <cvename>CVE-2019-2993</cvename>
      <cvename>CVE-2019-2922</cvename>
      <cvename>CVE-2019-2923</cvename>
      <cvename>CVE-2019-2924</cvename>
      <cvename>CVE-2019-2963</cvename>
      <cvename>CVE-2019-2968</cvename>
      <cvename>CVE-2019-3003</cvename>
      <cvename>CVE-2019-2997</cvename>
      <cvename>CVE-2019-2948</cvename>
      <cvename>CVE-2019-2950</cvename>
      <cvename>CVE-2019-2982</cvename>
      <cvename>CVE-2019-2998</cvename>
      <cvename>CVE-2019-2960</cvename>
      <cvename>CVE-2019-2957</cvename>
      <cvename>CVE-2019-2938</cvename>
      <cvename>CVE-2019-3018</cvename>
      <cvename>CVE-2019-3009</cvename>
      <cvename>CVE-2019-2910</cvename>
      <cvename>CVE-2019-2911</cvename>
    </references>
    <dates>
      <discovery>2019-10-15</discovery>
      <entry>2019-11-02</entry>
    </dates>
  </vuln>

  <vuln vid="381deebb-f5c9-11e9-9c4f-74d435e60b7c">
    <topic>file -- Heap buffer overflow possible</topic>
    <affects>
      <package>
	<name>file</name>
	<range><lt>5.37</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mitre reports</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18218">
	  <p>cdf_read_property_info in cdf.c in file through 5.37 does not
	  restrict the number of CDF_VECTOR elements, which allows a heap-based
	  buffer overflow (4-byte out-of-bounds write).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=16780</url>
      <url>https://github.com/file/file/commit/46a8443f76cec4b41ec736eca396984c74664f84</url>
    </references>
    <dates>
      <discovery>2019-08-26</discovery>
      <entry>2019-11-02</entry>
    </dates>
  </vuln>

  <vuln vid="92243b6a-5775-4aea-8727-a938058df5ba">
    <topic>webkit2-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.26.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports multiple vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2019-0005.html</url>
      <cvename>CVE-2019-8625</cvename>
      <cvename>CVE-2019-8674</cvename>
      <cvename>CVE-2019-8707</cvename>
      <cvename>CVE-2019-8719</cvename>
      <cvename>CVE-2019-8720</cvename>
      <cvename>CVE-2019-8726</cvename>
      <cvename>CVE-2019-8733</cvename>
      <cvename>CVE-2019-8735</cvename>
      <cvename>CVE-2019-8763</cvename>
      <cvename>CVE-2019-8768</cvename>
      <cvename>CVE-2019-8769</cvename>
      <cvename>CVE-2019-8771</cvename>
    </references>
    <dates>
      <discovery>2019-10-29</discovery>
      <entry>2019-10-31</entry>
    </dates>
  </vuln>

  <vuln vid="fd10aa77-fb5e-11e9-af7b-0800274e5f20">
    <topic>gitea -- information disclosure</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.9.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/issues/8303">
	  <p>When a comment in an issue or PR mentions a user using
	  @username, the mentioned user receives a mail notification even if
	  they don't have permission to see the originating repository.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.9.5</url>
      <url>https://blog.gitea.io/2019/10/gitea-1.9.5-is-released/</url>
    </references>
    <dates>
      <discovery>2019-09-27</discovery>
      <entry>2019-10-30</entry>
    </dates>
  </vuln>

  <vuln vid="50a1bbc9-fb80-11e9-9e70-005056a311d1">
    <topic>samba -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>samba48</name>
	<range><le>4.8.12</le></range>
      </package>
      <package>
	<name>samba410</name>
	<range><lt>4.10.10</lt></range>
      </package>
      <package>
	<name>samba411</name>
	<range><lt>4.11.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The samba project reports:</p>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2019-10218.html">
	  <p>Malicious servers can cause Samba client code to return filenames containing
	  path separators to calling code.</p>
	</blockquote>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2019-14833.html">
	  <p>When the password contains multi-byte (non-ASCII) characters, the check
	  password script does not receive the full password string.</p>
	</blockquote>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2019-14847.html">
	  <p>Users with the "get changes" extended access right can crash the AD DC LDAP
	  server by requesting an attribute using the range= syntax.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/security/CVE-2019-10218.html</url>
      <cvename>CVE-2019-10218</cvename>
      <url>https://www.samba.org/samba/security/CVE-2019-14833.html</url>
      <cvename>CVE-2019-14833</cvename>
      <url>https://www.samba.org/samba/security/CVE-2019-14847.html</url>
      <cvename>CVE-2019-14847</cvename>
    </references>
    <dates>
      <discovery>2019-09-29</discovery>
      <entry>2019-10-29</entry>
    </dates>
  </vuln>

  <vuln vid="6eddfa51-fb44-11e9-86e9-001b217b3468">
    <topic>Gitlab -- Disclosure Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.4.0</ge><lt>12.4.1</lt></range>
	<range><ge>12.3.0</ge><lt>12.3.6</lt></range>
	<range><ge>0</ge><lt>12.2.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/blog/2019/10/30/security-release-gitlab-12-dot-4-dot-1-released/">
	  <p>Source branch of a MR could be removed by an unauthorised user</p>
	  <p>Private group members could be listed</p>
	  <p>Disclosure of System Notes via Elasticsearch integration</p>
	  <p>Disclosure of Private Comments via Elasticsearch integration</p>
	  <p>Confirm existence of private repositories</p>
	  <p>Private group membership could be disclosed</p>
	  <p>Disclosure of Project Labels</p>
	  <p>Disclosure of Private Project Path and Labels</p>
	  <p>Uncontrolled Resource Consumption due to Nested GraphQL Queries</p>
	  <p>Improper access control on comments</p>
	  <p>Sentry Token Access Control</p>
	  <p>Authorisation check for Project Transfer option</p>
	  <p>XSS in Wiki Pages Using RDoc</p>
	  <p>Untrusted Input could be used for Internal Redirect</p>
	  <p>Access control for protected environments</p>
	  <p>Private Sub Group path Disclosure</p>
	  <p>Disclosure of Group Packages List</p>
	  <p>Private Repository Name Disclosure</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/blog/2019/10/30/security-release-gitlab-12-dot-4-dot-1-released/</url>
      <cvename>CVE-2019-18446</cvename>
      <cvename>CVE-2019-18447</cvename>
      <cvename>CVE-2019-18460</cvename>
      <cvename>CVE-2019-18456</cvename>
      <cvename>CVE-2019-18448</cvename>
      <cvename>CVE-2019-18449</cvename>
      <cvename>CVE-2019-18450</cvename>
      <cvename>CVE-2019-18452</cvename>
      <cvename>CVE-2019-18455</cvename>
      <cvename>CVE-2019-18453</cvename>
      <cvename>CVE-2019-18457</cvename>
      <cvename>CVE-2019-18458</cvename>
      <cvename>CVE-2019-18454</cvename>
      <cvename>CVE-2019-18451</cvename>
      <cvename>CVE-2019-18459</cvename>
      <cvename>CVE-2019-18461</cvename>
      <cvename>CVE-2019-18463</cvename>
      <cvename>CVE-2019-18462</cvename>
    </references>
    <dates>
      <discovery>2019-10-30</discovery>
      <entry>2019-10-30</entry>
    </dates>
  </vuln>

  <vuln vid="53b3474c-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Reference count overflow in mqueue filesystem 32-bit compat</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_10</lt></range>
	<range><ge>11.3</ge><lt>11.3_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>System calls operating on file descriptors obtain a
	reference to relevant struct file which due to a programming
	error was not always put back, which in turn could be used
	to overflow the counter of affected struct file.</p>
	<h1>Impact:</h1>
	<p>A local user can use this flaw to obtain access to files,
	directories, sockets, etc., opened by processes owned by
	other users. If obtained struct file represents a directory
	from outside of user's jail, it can be used to access files
	outside of the jail. If the user in question is a jailed
	root they can obtain root privileges on the host system.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5603</cvename>
      <freebsdsa>SA-19:24.mqueuefs</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-20</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="5027b62e-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- kernel memory disclosure from /dev/midistat</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_10</lt></range>
	<range><ge>11.3</ge><lt>11.3_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The kernel driver for /dev/midistat implements a handler
	for read(2). This handler is not thread-safe, and a
	multi-threaded program can exploit races in the handler to
	cause it to copy out kernel memory outside the boundaries
	of midistat's data buffer.</p>
	<h1>Impact:</h1>
	<p>The races allow a program to read kernel memory within
	a 4GB window centered at midistat's data buffer. The buffer
	is allocated each time the device is opened, so an attacker
	is not limited to a static 4GB region of memory.</p>
	<p>On 32-bit platforms, an attempt to trigger the race may
	cause a page fault in kernel mode, leading to a panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5612</cvename>
      <freebsdsa>SA-19:23.midi</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-20</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="4d3d4f64-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- IPv6 remote Denial-of-Service</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_10</lt></range>
	<range><ge>11.3</ge><lt>11.3_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Due do a missing check in the code of m_pulldown(9) data
	returned may not be contiguous as requested by the caller.</p>
	<h1>Impact:</h1>
	<p>Extra checks in the IPv6 code catch the error condition
	and trigger a kernel panic leading to a remote DoS
	(denial-of-service) attack with certain Ethernet interfaces.
	At this point it is unknown if any other than the IPv6 code
	paths can trigger a similar condition.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5611</cvename>
      <freebsdsa>SA-19:22.mbuf</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-20</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="499b22a3-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Insufficient validation of guest-supplied data (e1000 device)</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_9</lt></range>
	<range><ge>11.3</ge><lt>11.3_2</lt></range>
	<range><ge>11.2</ge><lt>11.2_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The e1000 network adapters permit a variety of modifications
	to an Ethernet packet when it is being transmitted. These
	include the insertion of IP and TCP checksums, insertion
	of an Ethernet VLAN header, and TCP segmentation offload
	("TSO"). The e1000 device model uses an on-stack buffer to
	generate the modified packet header when simulating these
	modifications on transmitted packets.</p>
	<p>When TCP segmentation offload is requested for a transmitted
	packet, the e1000 device model used a guest-provided value
	to determine the size of the on-stack buffer without
	validation. The subsequent header generation could overflow
	an incorrectly sized buffer or indirect a pointer composed
	of stack garbage.</p>
	<h1>Impact:</h1>
	<p>A misbehaving bhyve guest could overwrite memory in the
	bhyve process on the host.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5609</cvename>
      <freebsdsa>SA-19:21.bhyve</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="45a95fdd-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Insufficient message length validation in bsnmp library</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_9</lt></range>
	<range><ge>11.3</ge><lt>11.3_2</lt></range>
	<range><ge>11.2</ge><lt>11.2_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A function extracting the length from type-length-value
	encoding is not properly validating the submitted length.</p>
	<h1>Impact:</h1>
	<p>A remote user could cause, for example, an out-of-bounds
	read, decoding of unrelated data, or trigger a crash of the
	software such as bsnmpd resulting in a denial of service.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5610</cvename>
      <freebsdsa>SA-19:20.bsnmp</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="41d2f3e6-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- ICMPv6 / MLDv2 out-of-bounds memory access</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_9</lt></range>
	<range><ge>11.3</ge><lt>11.3_2</lt></range>
	<range><ge>11.2</ge><lt>11.2_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The ICMPv6 input path incorrectly handles cases where
	an MLDv2 listener query packet is internally fragmented
	across multiple mbufs.</p>
	<h1>Impact:</h1>
	<p>A remote attacker may be able to cause an out-of-bounds
	read or write that may cause the kernel to attempt to access
	an unmapped page and subsequently panic.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5608</cvename>
      <freebsdsa>SA-19:19.mldv2</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="3c7edc7a-f680-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Multiple vulnerabilities in bzip2</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_9</lt></range>
	<range><ge>11.3</ge><lt>11.3_2</lt></range>
	<range><ge>11.2</ge><lt>11.2_13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The decompressor used in bzip2 contains a bug which can
	lead to an out-of-bounds write when processing a specially
	crafted bzip2(1) file.</p>
	<p>bzip2recover contains a heap use-after-free bug which
	can be triggered when processing a specially crafted bzip2(1)
	file.</p>
	<h1>Impact:</h1>
	<p>An attacker who can cause maliciously crafted input to
	be processed may trigger either of these bugs. The bzip2recover
	bug may cause a crash, permitting a denial-of-service. The
	bzip2 decompressor bug could potentially be exploited to
	execute arbitrary code.</p>
	<p>Note that some utilities, including the tar(1) archiver
	and the bspatch(1) binary patching utility (used in portsnap(8)
	and freebsd-update(8)) decompress bzip2(1)-compressed data
	internally; system administrators should assume that their
	systems will at some point decompress bzip2(1)-compressed
	data even if they never explicitly invoke the bunzip2(1)
	utility.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2016-3189</cvename>
      <cvename>CVE-2019-1290</cvename>
      <freebsdsa>SA-19:18.bzip2</freebsdsa>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="2d4076eb-f679-11e9-a87f-a4badb2f4699">
    <topic>varnish -- Information Disclosure Vulnerability</topic>
    <affects>
      <package>
	<name>varnish6</name>
	<range><lt>6.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Varnish Software reports:</p>
	<blockquote cite="https://varnish-cache.org/security/VSV00004.html#vsv00004">
	  <p>A bug has been discovered in Varnish Cache where we fail to
	    clear a pointer between the handling of one client requests and the next
	    on the same connection. This can under specific circumstances lead to
	    information being leaked from the connection workspace.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://varnish-cache.org/security/VSV00004.html#vsv00004</url>
    </references>
    <dates>
      <discovery>2019-10-21</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="3a1474ba-f646-11e9-b0af-b888e347c638">
    <topic>sudo -- Potential bypass of Runas user restrictions</topic>
    <affects>
      <package>
       <name>sudo</name>
       <range><lt>1.8.28</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>Todd C. Miller reports:</p>
       <blockquote cite="https://www.sudo.ws/alerts/minus_1_uid.html">
	 <p>When sudo is configured to allow a user to run commands as an
	  arbitrary user via the ALL keyword in a Runas specification, it
	  is possible to run commands as root by specifying the user ID -1
	  or 4294967295.</p>
	 <p>This can be used by a user with sufficient sudo privileges to
	  run commands as root even if the Runas specification explicitly
	  disallows root access as long as the ALL keyword is listed first
	  in the Runas specification.</p>
	 <p>Log entries for commands run this way will list the target user
	  as 4294967295 instead of root. In addition, PAM session modules
	  will not be run for the command.</p>
       </blockquote>
      </body>
    </description>
    <references>
      <url>https://www.sudo.ws/alerts/minus_1_uid.html</url>
      <cvename>CVE-2019-14287</cvename>
    </references>
    <dates>
      <discovery>2019-10-15</discovery>
      <entry>2019-10-24</entry>
    </dates>
  </vuln>

  <vuln vid="a90d040e-f5b0-11e9-acc4-4576b265fda6">
    <topic>Loofah -- XSS vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-loofah</name>
	<range><lt>2.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>GitHub issue:</p>
	<blockquote cite="https://github.com/flavorjones/loofah/issues/171">
	  <p>This issue has been created for public disclosure of an XSS
	    vulnerability that was responsibly reported by
	    https://hackerone.com/vxhex</p>
	  <p>In the Loofah gem, through v2.3.0, unsanitized JavaScript may occur in
	    sanitized output when a crafted SVG element is republished.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/flavorjones/loofah/releases</url>
      <url>https://github.com/flavorjones/loofah/issues/171</url>
      <cvename>CVE-2019-15587</cvename>
    </references>
    <dates>
      <discovery>2019-10-22</discovery>
      <entry>2019-10-23</entry>
    </dates>
  </vuln>

  <vuln vid="9b7491fb-f253-11e9-a50c-000c29c4dc65">
    <topic>python 3.7 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python37</name>
	<range><lt>3.7.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python changelog:</p>
	<blockquote cite="https://docs.python.org/3.7/whatsnew/changelog.html#python-3-7-5-final">
	  <p>bpo-38243: Escape the server title of xmlrpc.server.DocXMLRPCServer when rendering
	   the document page as HTML.</p>
	  <p>bpo-38174: Update vendorized expat library version to 2.2.8, which resolves
	   CVE-2019-15903.</p>
	  <p>bpo-37764: Fixes email._header_value_parser.get_unstructured going into an infinite
	   loop for a specific case in which the email header does not have trailing whitespace,
	   and the case in which it contains an invalid encoded word.</p>
	  <p>bpo-37461: Fix an infinite loop when parsing specially crafted email headers.</p>
	  <p>bpo-34155: Fix parsing of invalid email addresses with more than one @
	   (e.g. a@b@c.com.) to not return the part before 2nd @ as valid email address.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3.7/whatsnew/changelog.html#python-3-7-5-final</url>
      <cvename>CVE-2019-15903</cvename>
    </references>
    <dates>
      <discovery>2019-09-14</discovery>
      <entry>2019-10-19</entry>
    </dates>
  </vuln>

  <vuln vid="998ca824-ef55-11e9-b81f-3085a9a95629">
    <topic>Pillow -- Allocation of resources without limits or throttling</topic>
    <affects>
      <package>
	<name>py27-pillow</name>
	<name>py35-pillow</name>
	<name>py36-pillow</name>
	<name>py37-pillow</name>
	<range><lt>6.2.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16865">
	  <p>An issue was discovered in Pillow before 6.2.0. When reading specially
	    crafted invalid image files, the library can either allocate very large
	    amounts of memory or take an extremely long period of time to process
	    the image.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/python-pillow/Pillow/issues/4123</url>
      <cvename>CVE-2019-16865</cvename>
      <freebsdpr>ports/241268</freebsdpr>
    </references>
    <dates>
      <discovery>2019-09-24</discovery>
      <entry>2019-10-15</entry>
    </dates>
  </vuln>

  <vuln vid="fd2e0ca8-e3ae-11e9-8af7-08002720423d">
    <topic>mongodb -- Bump Windows package dependencies</topic>
    <affects>
      <package>
	<name>mongodb34</name>
	<range><lt>3.4.22</lt></range>
      </package>
      <package>
	<name>mongodb36</name>
	<range><lt>3.6.14</lt></range>
      </package>
      <package>
	<name>mongodb40</name>
	<range><lt>4.0.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Rich Mirch reports:</p>
	<blockquote cite="https://jira.mongodb.org/browse/SERVER-42233">
	  <p>An unprivileged user or program on Microsoft Windows which can create OpenSSL configuration files in a fixed location may cause utility programs shipped with MongoDB server versions less than 4.0.11, 3.6.14, and 3.4.22 to run attacker defined code as the user running the utility.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-2390</cvename>
      <url>https://jira.mongodb.org/browse/SERVER-42233</url>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-09-30</entry>
    </dates>
  </vuln>

  <vuln vid="273c6c43-e3ad-11e9-8af7-08002720423d">
    <topic>mongodb -- Our init scripts check /proc/[pid]/stat should validate that `(${procname})` is the process' command name.</topic>
    <affects>
      <package>
	<name>mongodb34</name>
	<range><lt>3.4.22</lt></range>
      </package>
      <package>
	<name>mongodb36</name>
	<range><lt>3.6.14</lt></range>
      </package>
      <package>
	<name>mongodb40</name>
	<range><lt>4.0.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Sicheng Liu of Beijing DBSEC Technology Co., Ltd reports:</p>
	<blockquote cite="https://jira.mongodb.org/browse/SERVER-40563">
	  <p>Incorrect scoping of kill operations in MongoDB Server's packaged SysV init scripts allow users with write access to the PID file to insert arbitrary PIDs to be killed when the root user stops the MongoDB process via SysV init.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-2389</cvename>
      <url>https://jira.mongodb.org/browse/SERVER-40563</url>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-09-30</entry>
    </dates>
  </vuln>

  <vuln vid="880bca8f-e201-11e9-8af7-08002720423d">
    <topic>mongodb -- Attach IDs to users</topic>
    <affects>
      <package>
	<name>mongodb34</name>
	<range><lt>3.4.22</lt></range>
      </package>
      <package>
	<name>mongodb36</name>
	<range><lt>3.6.13</lt></range>
      </package>
      <package>
	<name>mongodb40</name>
	<range><lt>4.0.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitch Wasson of Cisco's Advanced Malware Protection Group reports:</p>
	<blockquote cite="https://jira.mongodb.org/browse/SERVER-38984">
	  <p>After user deletion in MongoDB Server the improper invalidation of authorization sessions allows an authenticated user's session to persist and become conflated with new accounts, if those accounts reuse the names of deleted ones.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-2386</cvename>
      <url>https://jira.mongodb.org/browse/SERVER-38984</url>
    </references>
    <dates>
      <discovery>2019-08-06</discovery>
      <entry>2019-09-28</entry>
    </dates>
  </vuln>

  <vuln vid="c360d057-ea8b-11e9-859b-b885849ded8e">
    <topic>mod_perl2 -- execute arbitrary Perl code</topic>
    <affects>
      <package>
	<name>ap24-mod_perl2</name>
	<range><lt>2.0.11,3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mod_perl2 2.0.11 fixes Arbitrary Perl code execution in the context
	of the user account via a user-owned .htaccess.</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2011-2767">
	<p>mod_perl 2.0 through 2.0.10 allows attackers to execute arbitrary
	  Perl code by placing it in a user-owned .htaccess file, because
	  (contrary to the documentation) there is no configuration option
	  that permits Perl code for the administrator's control of HTTP
	  request processing without also permitting unprivileged users
	  to run Perl code in the context of the user account that runs
	  Apache HTTP Server processes.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-2767</url>
      <url>https://www.securityfocus.com/bid/105195</url>
      <url>https://access.redhat.com/errata/RHSA-2018:2826</url>
      <url>https://bugs.debian.org/644169</url>
      <url>https://usn.ubuntu.com/3825-2/</url>
    </references>
    <dates>
      <discovery>2011-07-19</discovery>
      <entry>2019-10-09</entry>
    </dates>
  </vuln>

  <vuln vid="791e8f79-e7d1-11e9-8b31-206a8a720317">
    <topic>Xpdf -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>xpdf</name>
	<range><lt>4.02,1</lt></range>
      </package>
      <package>
	<name>xpdf4</name>
	<range><lt>4.02,1</lt></range>
      </package>
      <package>
	<name>xpdf3</name>
	<range><lt>3.04_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Xpdf 4.02 fixes two vulnerabilities. Both fixes have been
	   backported to 3.04.</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-9877">
	  <p>An invalid memory access vulnerability in TextPage::findGaps()
	     in Xpdf 4.01 through a crafted PDF document can cause a
	     segfault.</p>
	</blockquote>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-16927">
	  <p>An out of bounds write exists in TextPage::findGaps() of
	     Xpdf 4.01.01 </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-9877</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-16927</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9877</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1692</url>
    </references>
    <dates>
      <discovery>2019-10-01</discovery>
      <entry>2019-10-06</entry>
    </dates>
  </vuln>

  <vuln vid="108a4be3-e612-11e9-9963-5f1753e0aca0">
    <topic>unbound -- parsing vulnerability</topic>
    <affects>
      <package>
	<name>unbound</name>
	<range><ge>1.7.1</ge><lt>1.9.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Unbound Security Advisories:</p>
	<blockquote cite="https://www.nlnetlabs.nl/projects/unbound/security-advisories/#vulnerability-in-parsing-notify-queries">
	  <p>Due to an error in parsing NOTIFY queries, it is possible for Unbound
	    to continue processing malformed queries and may ultimately result in a
	    pointer dereference in uninitialized memory. This results in a crash of
	    the Unbound daemon.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.nlnetlabs.nl/projects/unbound/security-advisories/#vulnerability-in-parsing-notify-queries</url>
      <cvename>CVE-2019-16866</cvename>
    </references>
    <dates>
      <discovery>2019-10-03</discovery>
      <entry>2019-10-03</entry>
    </dates>
  </vuln>

  <vuln vid="f7fcb75c-e537-11e9-863e-b9b7af01ba9e">
    <topic>ruby -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>ruby</name>
	<range><ge>2.4.0,1</ge><lt>2.4.9,1</lt></range>
	<range><ge>2.5.0,1</ge><lt>2.5.7,1</lt></range>
	<range><ge>2.6.0,1</ge><lt>2.6.5,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby news:</p>
	<blockquote cite="https://www.ruby-lang.org/en/news/2019/10/01/ruby-2-6-5-released/">
	  <p>This release includes security fixes. Please check the topics below for
	    details.</p>
	  <p>CVE-2019-15845: A NUL injection vulnerability of File.fnmatch and
	    File.fnmatch?</p>
	  <p>A NUL injection vulnerability of Ruby built-in methods (File.fnmatch
	    and File.fnmatch?) was found. An attacker who has the control of the
	    path pattern parameter could exploit this vulnerability to make path
	    matching pass despite the intention of the program author.</p>
	  <p>CVE-2019-16201: Regular Expression Denial of Service vulnerability of
	    WEBrick's Digest access authentication</p>
	  <p>Regular expression denial of service vulnerability of WEBrick's Digest
	    authentication module was found. An attacker can exploit this
	    vulnerability to cause an effective denial of service against a WEBrick
	    service.</p>
	  <p>CVE-2019-16254: HTTP response splitting in WEBrick (Additional fix)</p>
	  <p>There is an HTTP response splitting vulnerability in WEBrick bundled
	    with Ruby.</p>
	  <p>CVE-2019-16255: A code injection vulnerability of Shell#[] and
	    Shell#test</p>
	  <p>A code injection vulnerability of Shell#[] and Shell#test in a standard
	    library (lib/shell.rb) was found.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/ruby-2-6-5-released/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/ruby-2-5-7-released/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/ruby-2-4-8-released/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/02/ruby-2-4-9-released/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/nul-injection-file-fnmatch-cve-2019-15845/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/webrick-regexp-digestauth-dos-cve-2019-16201/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/http-response-splitting-in-webrick-cve-2019-16254/</url>
      <url>https://www.ruby-lang.org/en/news/2019/10/01/code-injection-shell-test-cve-2019-16255/</url>
      <cvename>CVE-2019-15845</cvename>
      <cvename>CVE-2019-16201</cvename>
      <cvename>CVE-2019-16254</cvename>
      <cvename>CVE-2019-16255</cvename>
    </references>
    <dates>
      <discovery>2019-10-01</discovery>
      <entry>2019-10-02</entry>
    </dates>
  </vuln>

  <vuln vid="0762fa72-e530-11e9-86e9-001b217b3468">
    <topic>Gitlab -- Disclosure Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.3.0</ge><lt>12.3.3</lt></range>
	<range><ge>12.2.0</ge><lt>12.2.7</lt></range>
	<range><ge>8.17.0</ge><lt>12.1.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/10/02/security-release-gitlab-12-dot-3-dot-3-released/">
	  <p>Disclosure of Private Code, Merge Requests and Commits via Elasticsearch integration</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/10/02/security-release-gitlab-12-dot-3-dot-3-released/</url>
    </references>
    <dates>
      <discovery>2019-10-02</discovery>
      <entry>2019-10-02</entry>
    </dates>
  </vuln>

  <vuln vid="b17c86b9-e52e-11e9-86e9-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.3.0</ge><lt>12.3.2</lt></range>
	<range><ge>12.2.0</ge><lt>12.2.6</lt></range>
	<range><ge>7.12.0</ge><lt>12.1.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SO-AND-SO reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/09/30/security-release-gitlab-12-dot-3-dot-2-released/">
	  <p>XSS in Markdown Preview Using Mermaid</p>
	  <p>Bypass Email Verification using Salesforce Authentication</p>
	  <p>Account Takeover using SAML</p>
	  <p>Uncontrolled Resource Consumption in Markdown using Mermaid</p>
	  <p>Disclosure of Private Project Path and Labels</p>
	  <p>Disclosure of Assignees via Milestones</p>
	  <p>Disclosure of Project Path via Unsubscribe Link</p>
	  <p>Disclosure of Project Milestones via Groups</p>
	  <p>Disclosure of Private System Notes via GraphQL</p>
	  <p>GIT Command Injection via API</p>
	  <p>Bypass User Blocking via CI/CD token</p>
	  <p>IDOR Adding Groups to Protected Environments</p>
	  <p>Disclosure of Group Membership via Merge Request Approval Rules</p>
	  <p>Disclosure of Head Pipeline via Blocking Merge Request Feature</p>
	  <p>Grafana update</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/09/30/security-release-gitlab-12-dot-3-dot-2-released/</url>
      <cvename>CVE-2019-19039</cvename>
    </references>
    <dates>
      <discovery>2019-09-30</discovery>
      <entry>2019-10-02</entry>
    </dates>
  </vuln>

  <vuln vid="ed18aa92-e4f4-11e9-b6fa-3085a9a95629">
    <topic>cacti -- Authenticated users may bypass authorization checks</topic>
    <affects>
      <package>
	<name>cacti</name>
	<range><lt>1.2.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The cacti developers reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16723">
	  <p>In Cacti through 1.2.6, authenticated users may bypass authorization checks
	    (for viewing a graph) via a direct graph_json.php request with a modified
	    local_graph_id parameter.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-16723</cvename>
      <url>https://github.com/Cacti/cacti/releases/tag/release%2F1.2.7</url>
    </references>
    <dates>
      <discovery>2019-09-23</discovery>
      <entry>2019-10-02</entry>
    </dates>
  </vuln>

  <vuln vid="e917caba-e291-11e9-89f1-152fed202bb7">
    <topic>Exim -- heap-based buffer overflow in string_vformat leading to RCE</topic>
    <affects>
      <package>
	<name>exim</name>
	<range><ge>4.92</ge><lt>4.92.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Exim developers team report:</p>
	<blockquote cite="https://lists.exim.org/lurker/message/20190927.032457.c1044d4c.en.html">
	  <p>There is a heap overflow in string_vformat().Using a EHLO message, remote code
execution seems to be possible.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openwall.com/lists/oss-security/2019/09/28/1</url>
    </references>
    <dates>
      <discovery>2019-09-28</discovery>
      <entry>2019-09-29</entry>
    </dates>
  </vuln>

  <vuln vid="a92dcc5c-e05c-11e9-b589-10c37b4ac2ea">
    <topic>go -- invalid headers are normalized, allowing request smuggling</topic>
    <affects>
      <package>
	<name>go</name>
	<range><lt>1.13.1,1</lt></range>
      </package>
      <package>
	<name>go-devel</name>
	<range><lt>g20190925</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Go project reports:</p>
	<blockquote cite="https://github.com/golang/go/issues/34540">
	  <p>net/http (through net/textproto) used to accept and normalize invalid
	    HTTP/1.1 headers with a space before the colon, in violation of RFC 7230.
	    If a Go server is used behind a reverse proxy that accepts and forwards
	    but doesn't normalize such invalid headers, the reverse proxy and the
	    server can interpret the headers differently. This can lead to filter
	    bypasses or request smuggling, the latter if requests from separate clients
	    are multiplexed onto the same connection by the proxy. Such invalid headers
	    are now rejected by Go servers, and passed without normalization to Go
	    client applications.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-16276</cvename>
      <url>https://github.com/golang/go/issues/34540</url>
    </references>
    <dates>
      <discovery>2019-09-25</discovery>
      <entry>2019-09-26</entry>
    </dates>
  </vuln>

  <vuln vid="81fcc2f9-e15a-11e9-abbf-800dd28b22bd">
    <topic>mantis -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mantis-php71</name>
	<name>mantis-php72</name>
	<name>mantis-php73</name>
	<name>mantis-php74</name>
	<range><lt>2.22.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Mantis developers report:</p>
	<blockquote cite="https://mantisbt.org/bugs/changelog_page.php?project=mantisbt&amp;version=2.22.1">
	  <p>CVE-2019-15715: [Admin Required - Post Authentication] Command Execution / Injection Vulnerability</p>
	  <p>CVE-2019-8331: In Bootstrap before 3.4.1, XSS is possible in the tooltip or popover data-template attribute</p>
	  <p>Missing integrity hashes for CSS resources from CDNs</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://mantisbt.org/bugs/changelog_page.php?project=mantisbt&amp;version=2.22.1</url>
      <cvename>CVE-2019-15715</cvename>
      <cvename>CVE-2019-8331</cvename>
    </references>
    <dates>
      <discovery>2019-08-28</discovery>
      <entry>2019-09-27</entry>
    </dates>
  </vuln>

  <vuln vid="9720bb39-f82a-402f-9fe4-e2c875bdda83">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><le>2.196</le></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><le>2.176.3</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2019-09-25/">
	  <h1>Description</h1>
	  <h5>(Medium) SECURITY-1498 / CVE-2019-10401</h5>
	  <p>Stored XSS vulnerability in expandable textbox form control</p>
	  <h5>(Medium) SECURITY-1525 / CVE-2019-10402</h5>
	  <p>XSS vulnerability in combobox form control</p>
	  <h5>(Medium) SECURITY-1537 (1) / CVE-2019-10403</h5>
	  <p>Stored XSS vulnerability in SCM tag action tooltip</p>
	  <h5>(Medium) SECURITY-1537 (2) / CVE-2019-10404</h5>
	  <p>Stored XSS vulnerability in queue item tooltip</p>
	  <h5>(Medium) SECURITY-1505 / CVE-2019-10405</h5>
	  <p>Diagnostic web page exposed Cookie HTTP header</p>
	  <h5>(Medium) SECURITY-1471 / CVE-2019-10406</h5>
	  <p>XSS vulnerability in Jenkins URL setting</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-10401</cvename>
      <cvename>CVE-2019-10402</cvename>
      <cvename>CVE-2019-10403</cvename>
      <cvename>CVE-2019-10404</cvename>
      <cvename>CVE-2019-10405</cvename>
      <cvename>CVE-2019-10406</cvename>
      <url>https://jenkins.io/security/advisory/2019-09-25/</url>
    </references>
    <dates>
      <discovery>2019-09-25</discovery>
      <entry>2019-09-25</entry>
    </dates>
  </vuln>

  <vuln vid="20b92374-d62a-11e9-af73-001b217e4ee5">
    <topic>ISC KEA -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>kea</name>
	<range><lt>1.6.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Internet Systems Consortium, Inc. reports:</p>
	<blockquote cite="https://gitlab.isc.org/isc-projects/kea/issues">
	  <p>A packet containing a malformed DUID can cause the kea-dhcp6 server to terminate (CVE-2019-6472) [Medium]</p>
	  <p>An invalid hostname option can cause the kea-dhcp4 server to terminate (CVE-2019-6473) [Medium]</p>
	  <p>An oversight when validating incoming client requests can lead to a situation where the Kea server<br/>
	    will exit when trying to restart (CVE-2019-6474) [Medium]</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gitlab.isc.org/isc-projects/kea/issues</url>
      <cvename>CVE-2019-6472</cvename>
      <cvename>CVE-2019-6473</cvename>
      <cvename>CVE-2019-6474</cvename>
    </references>
    <dates>
      <discovery>2019-08-28</discovery>
      <entry>2019-09-20</entry>
    </dates>
  </vuln>

  <vuln vid="6856d798-d950-11e9-aae4-f079596b62f9">
    <topic>expat2 -- Fix extraction of namespace prefixes from XML names</topic>
    <affects>
      <package>
	<name>expat</name>
	<range><lt>2.2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>expat project reports:</p>
	<blockquote cite="https://github.com/libexpat/libexpat/blob/R_2_2_8/expat/Changes">
	 <p>
	  Fix heap overflow triggered by
	  XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber),
	  and deny internal entities closing the doctype
	 </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/libexpat/libexpat/blob/R_2_2_8/expat/Changes</url>
    </references>
    <dates>
      <discovery>2019-09-13</discovery>
      <entry>2019-09-17</entry>
    </dates>
  </vuln>

  <vuln vid="b2789b2d-d521-11e9-86e9-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.2.0</ge><lt>12.2.5</lt></range>
	<range><ge>12.1.0</ge><lt>12.1.9</lt></range>
	<range><ge>11.6.0</ge><lt>12.0.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/09/10/critical-security-release-gitlab-12-dot-2-dot-5-released/">
	<p>Project Template Functionality Could Be Used to Access Restricted Project Data</p>
	<p>Security Enhancements in GitLab Pages</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/09/10/critical-security-release-gitlab-12-dot-2-dot-5-released/</url>
      <cvename>CVE-2019-16170</cvename>
    </references>
    <dates>
      <discovery>2019-09-10</discovery>
      <entry>2019-09-12</entry>
    </dates>
  </vuln>

  <vuln vid="1c948fd3-dac0-11e9-81b2-0011d823eebd">
    <topic>Mbed TLS -- Side channel attack on deterministic ECDSA</topic>
    <affects>
      <package>
	<name>mbedtls</name>
	<range><lt>2.16.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Janos Follath reports:</p>
	<blockquote cite="https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2019-10">
	  <p>Mbed TLS does not have a constant-time/constant-trace arithmetic
	    library and uses blinding to protect against side channel
	    attacks.</p>
	  <p>In the ECDSA signature routine previous Mbed TLS versions used the
	    same RNG object for generating the ephemeral key pair and for
	    generating the blinding values. The deterministic ECDSA function
	    reused this by passing the RNG object created from the private key
	    and the message to be signed as prescribed by RFC 6979. This meant
	    that the same RNG object was used whenever the same message was
	    signed, rendering the blinding ineffective.</p>
	  <p>If the victim can be tricked to sign the same message repeatedly,
	    the private key may be recoverable through side channels.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2019-10</url>
    </references>
    <dates>
      <discovery>2019-09-06</discovery>
      <entry>2019-09-19</entry>
    </dates>
  </vuln>

  <vuln vid="55571619-454e-4769-b1e5-28354659e152">
    <topic>bro -- invalid memory access or heap buffer over-read</topic>
    <affects>
      <package>
	<name>bro</name>
	<range><lt>2.6.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/3b5a9f88ece1d274edee897837e280ef751bde94/NEWS">
	  <p>This is a security patch release to address a potential
	  Denial of Service vulnerability:</p>
	  <ul>
	  <li>
	  The NTLM analyzer did not properly handle AV Pair sequences
	  that were either empty or unterminated, resulting in
	  invalid memory access or heap buffer over-read.  The NTLM
	  analyzer is enabled by default and used in the analysis
	  of SMB, DCE/RPC, and GSSAPI protocols.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://raw.githubusercontent.com/zeek/zeek/3b5a9f88ece1d274edee897837e280ef751bde94/NEWS</url>
    </references>
    <dates>
      <discovery>2019-08-28</discovery>
      <entry>2019-09-17</entry>
    </dates>
  </vuln>

  <vuln vid="c5bd8a25-99a6-11e9-a598-f079596b62f9">
    <topic>expat2 -- Fix extraction of namespace prefixes from XML names</topic>
    <affects>
      <package>
	<name>expat</name>
	<range><lt>2.2.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>expat project reports:</p>
	<blockquote cite="https://github.com/libexpat/libexpat/blob/R_2_2_7/expat/Changes">
	  <p>
	    XML names with multiple colons could end up in the
	    wrong namespace, and take a high amount of RAM and CPU
	    resources while processing, opening the door to
	    use for denial-of-service attacks
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/libexpat/libexpat/blob/R_2_2_7/expat/Changes</url>
    </references>
    <dates>
      <discovery>2019-06-19</discovery>
      <entry>2019-09-16</entry>
    </dates>
  </vuln>

  <vuln vid="9fb4e57b-d65a-11e9-8a5f-e5c82b486287">
    <topic>curl -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><ge>7.19.4</ge><lt>7.66.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>curl security problems:</p>
	<blockquote cite="https://curl.haxx.se/docs/security.html">
	  <p>CVE-2019-5481: FTP-KRB double-free</p>
	  <p>libcurl can be told to use kerberos over FTP to a server, as set with
	    the CURLOPT_KRBLEVEL option.</p>
	  <p>During such kerberos FTP data transfer, the server sends data to curl
	    in blocks with the 32 bit size of each block first and then that amount
	    of data immediately following.</p>
	  <p>A malicious or just broken server can claim to send a very large block
	    and if by doing that it makes curl's subsequent call to realloc() to
	    fail, curl would then misbehave in the exit path and double-free the
	    memory.</p>
	  <p>In practical terms, an up to 4 GB memory area may very well be fine to
	    allocate on a modern 64 bit system but on 32 bit systems it will fail.</p>
	  <p>Kerberos FTP is a rarely used protocol with curl. Also, Kerberos
	    authentication is usually only attempted and used with servers that the
	    client has a previous association with.</p>
	  <p>CVE-2019-5482: TFTP small blocksize heap buffer overflow</p>
	  <p>libcurl contains a heap buffer overflow in the function
	    (tftp_receive_packet()) that receives data from a TFTP server. It can
	    call recvfrom() with the default size for the buffer rather than with
	    the size that was used to allocate it. Thus, the content that might
	    overwrite the heap memory is controlled by the server.</p>
	  <p>This flaw is only triggered if the TFTP server sends an OACK without
	    the BLKSIZE option, when a BLKSIZE smaller than 512 bytes was requested
	    by the TFTP client. OACK is a TFTP extension and is not used by all
	    TFTP servers.</p>
	  <p>Users choosing a smaller block size than default should be rare as the
	    primary use case for changing the size is to make it larger.</p>
	  <p>It is rare for users to use TFTP across the Internet. It is most
	    commonly used within local networks. TFTP as a protocol is always
	    inherently insecure.</p>
	  <p>This issue was introduced by the add of the TFTP BLKSIZE option
	    handling. It was previously incompletely fixed by an almost identical
	    issue called CVE-2019-5436.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.haxx.se/docs/security.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-5481.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-5482.html</url>
      <cvename>CVE-2019-5481</cvename>
      <cvename>CVE-2019-5482</cvename>
    </references>
    <dates>
      <discovery>2019-09-11</discovery>
      <entry>2019-09-14</entry>
    </dates>
  </vuln>

  <vuln vid="9e0c6f7a-d46d-11e9-a1c7-b499baebfeaf">
    <topic>OpenSSL -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>openssl</name>
	<range><lt>1.0.2t,1</lt></range>
      </package>
      <package>
	<name>openssl111</name>
	<range><lt>1.1.1d</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The OpenSSL project reports:</p>
	<blockquote cite="https://www.openssl.org/news/secadv/20190910.txt">
	  <p>ECDSA remote timing attack (CVE-2019-1547) [Low]</p>
	  <p>Fork Protection (CVE-2019-1549) [Low]<br/>
	    (OpenSSL 1.1.1 only)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openssl.org/news/secadv/20190910.txt</url>
      <cvename>CVE-2019-1547</cvename>
      <cvename>CVE-2019-1549</cvename>
    </references>
    <dates>
      <discovery>2019-09-10</discovery>
      <entry>2019-09-11</entry>
    </dates>
  </vuln>

  <vuln vid="c6f19fe6-d42a-11e9-b4f9-6451062f0f7a">
    <topic>Flash Player -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.255</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb19-46.html">
	  <ul>
	    <li>This update resolves a same origin method execution
	      vulnerability that could lead to arbitrary code execution
	      (CVE-2019-8069).</li>
	    <li>This update resolves a use-after-free vulnerability that
	      could lead to arbitrary code execution (CVE-2019-8070).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-8069</cvename>
      <cvename>CVE-2019-8070</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb19-46.html</url>
    </references>
    <dates>
      <discovery>2019-09-10</discovery>
      <entry>2019-09-10</entry>
    </dates>
  </vuln>

  <vuln vid="a8d87c7a-d1b1-11e9-a616-0992a4564e7c">
    <topic>oniguruma -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>oniguruma</name>
	<range><lt>6.9.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13224">
	  <p>
	    A use-after-free in onig_new_deluxe() in regext.c in Oniguruma 6.9.2 allows attackers to potentially cause information disclosure, denial of service, or possibly code execution by providing a crafted regular expression. The attacker provides a pair of a regex pattern and a string, with a multi-byte encoding that gets handled by onig_new_deluxe().
	  </p>
	</blockquote>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13225">
	  <p>A NULL Pointer Dereference in match_at() in regexec.c in Oniguruma 6.9.2 allows attackers to potentially cause denial of service by providing a crafted regular expression.</p>
	  <p>Oniguruma issues often affect Ruby, as well as common optional libraries for PHP and Rust.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-13224</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13224</url>
      <url>https://github.com/kkos/oniguruma/commit/0f7f61ed1b7b697e283e37bd2d731d0bd57adb55</url>
      <cvename>CVE-2019-13225</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13225</url>
      <url>https://github.com/kkos/oniguruma/commit/c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c</url>
    </references>
    <dates>
      <discovery>2019-07-03</discovery>
      <entry>2019-09-07</entry>
    </dates>
  </vuln>

  <vuln vid="10e1d580-d174-11e9-a87f-a4badb2f4699">
    <topic>xymon-server -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>xymon-server</name>
	<range><lt>4.3.29</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Japheth Cleaver reports:</p>
	<blockquote cite="https://lists.xymon.com/archive/2019-July/046570.html">
	  <p>Several buffer overflows were reported by University of
	    Cambridge Computer Security Incident Response Team.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.xymon.com/archive/2019-July/046570.html</url>
      <cvename>CVE-2019-13451</cvename>
      <cvename>CVE-2019-13452</cvename>
      <cvename>CVE-2019-13455</cvename>
      <cvename>CVE-2019-13273</cvename>
      <cvename>CVE-2019-13274</cvename>
      <cvename>CVE-2019-13484</cvename>
      <cvename>CVE-2019-13485</cvename>
      <cvename>CVE-2019-13486</cvename>
    </references>
    <dates>
      <discovery>2019-07-23</discovery>
      <entry>2019-09-07</entry>
    </dates>
  </vuln>

  <vuln vid="8a9f86de-d080-11e9-9051-4c72b94353b5">
    <topic>wordpress -- multiple issues</topic>
    <affects>
      <package>
	<name>wordpress</name>
	<name>fr-wordpress</name>
	<range><lt>5.2.3,1</lt></range>
      </package>
      <package>
	<name>de-wordpress</name>
	<name>zh_CN-wordpress</name>
	<name>zh_TW-wordpress</name>
	<name>ja-wordpress</name>
	<name>ru-wordpress</name>
	<range><lt>5.2.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>wordpress developers reports:</p>
	<blockquote cite="https://wordpress.org/news/2019/09/wordpress-5-2-3-security-and-maintenance-release/">
	  <p>Props to Simon Scannell of RIPS Technologies for finding and disclosing two issues.
	    The first, a cross-site scripting (XSS) vulnerability found in post previews by contributors.
	    The second was a cross-site scripting vulnerability in stored comments.</p>
	  <p>Props to Tim Coen for disclosing an issue where validation and sanitization
	     of a URL could lead to an open redirect.</p>
	  <p>Props to Anshul Jain for disclosing reflected cross-site scripting during media uploads.</p>
	  <p>Props to Zhouyuan Yang of Fortinets FortiGuard Labs who disclosed a vulnerability
	     for cross-site scripting (XSS) in shortcode previews.</p>
	  <p>Props to Ian Dunn of the Core Security Team for finding and disclosing a case where
	     reflected cross-site scripting could be found in the dashboard.</p>
	  <p>Props to Soroush Dalilifrom NCC Group for disclosing an issue with URL
	     sanitization that can lead to cross-site scripting (XSS) attacks.</p>
	  <p>In addition to the above changes, we are also updating jQuery on older versions of WordPress.
	      This change was added in 5.2.1 and is now being brought to older versions.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://wordpress.org/news/2019/09/wordpress-5-2-3-security-and-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-09-05</discovery>
      <entry>2019-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="61db9b88-d091-11e9-8d41-97657151f8c2">
    <topic>Exim -- RCE with root privileges in TLS SNI handler</topic>
    <affects>
      <package>
	<name>exim</name>
	<range><lt>4.92.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Exim developers report:</p>
	<blockquote cite="https://git.exim.org/exim.git/blob/2600301ba6dbac5c9d640c87007a07ee6dcea1f4:/doc/doc-txt/cve-2019-15846/cve.txt">
	  <p>If your Exim server accepts TLS connections, it is vulnerable. This does
	    not depend on the TLS libray, so both, GnuTLS and OpenSSL are affected.</p>
	  <p>The vulnerability is exploitable by sending a SNI ending in a
backslash-null sequence during the initial TLS handshake. The exploit
exists as a POC. For more details see the document qualys.mbx</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://git.exim.org/exim.git/blob_plain/2600301ba6dbac5c9d640c87007a07ee6dcea1f4:/doc/doc-txt/cve-2019-15846/cve.txt</url>
    </references>
    <dates>
      <discovery>2019-09-02</discovery>
      <entry>2019-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="7d53d8da-d07a-11e9-8f1a-001999f8d30b">
    <topic>asterisk -- Remote Crash Vulnerability in audio transcoding</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.28.1</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.5.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="http://www.asterisk.org/downloads/security-advisories">
	  <p>When audio frames are given to the audio transcoding
	  support in Asterisk the number of samples are examined
	  and as part of this a message is output to indicate that
	  no samples are present. A change was done to suppress
	  this message for a particular scenario in which the message
	  was not relevant. This change assumed that information
	  about the origin of a frame will always exist when in
	  reality it may not.</p>
	  <p>This issue presented itself when an RTP packet containing
	  no audio (and thus no samples) was received. In a particular
	  transcoding scenario this audio frame would get turned
	  into a frame with no origin information. If this new frame
	  was then given to the audio transcoding support a crash
	  would occur as no samples and no origin information would
	  be present. The transcoding scenario requires the genericplc
	  option to be set to enabled (the default) and a transcoding
	  path from the source format into signed linear and then
	  from signed linear into another format.</p>
	  <p>Note that there may be other scenarios that have not
	  been found which can cause an audio frame with no origin
	  to be given to the audio transcoding support and thus
	  cause a crash.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-005.html</url>
      <cvename>CVE-2019-15639</cvename>
    </references>
    <dates>
      <discovery>2019-08-07</discovery>
      <entry>2019-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="d94c08d2-d079-11e9-8f1a-001999f8d30b">
    <topic>asterisk -- Crash when negotiating for T.38 with a declined stream</topic>
    <affects>
      <package>
	<name>asterisk15</name>
	<range><lt>15.7.4</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.5.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="http://www.asterisk.org/downloads/security-advisories">
	  <p>When Asterisk sends a re-invite initiating T.38 faxing,
	  and the endpoint responds with a declined media stream a
	  crash will then occur in Asterisk.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-004.html</url>
      <cvename>CVE-2019-15297</cvename>
    </references>
    <dates>
      <discovery>2019-08-05</discovery>
      <entry>2019-09-06</entry>
    </dates>
  </vuln>

  <vuln vid="145a3e17-cea2-11e9-81e2-005056a311d1">
    <topic>samba -- combination of parameters and permissions can allow user to escape from the share path definition</topic>
    <affects>
      <package>
	<name>samba410</name>
	<range><lt>4.10.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The samba project reports:</p>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2019-10197.html">
	  <p>On a Samba SMB server for all versions of Samba from 4.9.0 clients are
	  able to escape outside the share root directory if certain
	  configuration parameters set in the smb.conf file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-10197</cvename>
      <url>https://www.samba.org/samba/security/CVE-2019-10197.html</url>
    </references>
    <dates>
      <discovery>2019-09-01</discovery>
      <entry>2019-09-03</entry>
    </dates>
  </vuln>

  <vuln vid="05463e0a-abd3-4fa4-bd5f-cd5ed132d4c6">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>69.0,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.14</lt></range>
      </package>
      <package>
	<name>seamonkey</name>
	<name>linux-seamonkey</name>
	<range><lt>2.53.0</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><ge>61.0,1</ge><lt>68.1.0,1</lt></range>
	<range><lt>60.9.0,1</lt></range>
      </package>
      <package>
	<name>linux-firefox</name>
	<range><ge>61.0,2</ge><lt>68.1.0,2</lt></range>
	<range><lt>60.9.0,2</lt></range>
      </package>
      <package>
	<name>libxul</name>
	<name>thunderbird</name>
	<name>linux-thunderbird</name>
	<range><ge>61.0</ge><lt>68.1.0</lt></range>
	<range><lt>60.9.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-25/">
	  <p>CVE-2019-11751: Malicious code execution through command line parameters</p>
	  <p>CVE-2019-11746: Use-after-free while manipulating video</p>
	  <p>CVE-2019-11744: XSS by breaking out of title and textarea elements using innerHTML</p>
	  <p>CVE-2019-11742: Same-origin policy violation with SVG filters and canvas to steal cross-origin images</p>
	  <p>CVE-2019-11736: File manipulation and privilege escalation in Mozilla Maintenance Service</p>
	  <p>CVE-2019-11753: Privilege escalation with Mozilla Maintenance Service in custom Firefox installation location</p>
	  <p>CVE-2019-11752: Use-after-free while extracting a key value in IndexedDB</p>
	  <p>CVE-2019-9812: Sandbox escape through Firefox Sync</p>
	  <p>CVE-2019-11741: Isolate addons.mozilla.org and accounts.firefox.com</p>
	  <p>CVE-2019-11743: Cross-origin access to unload event attributes</p>
	  <p>CVE-2019-11748: Persistence of WebRTC permissions in a third party context</p>
	  <p>CVE-2019-11749: Camera information available without prompting using getUserMedia</p>
	  <p>CVE-2019-5849: Out-of-bounds read in Skia</p>
	  <p>CVE-2019-11750: Type confusion in Spidermonkey</p>
	  <p>CVE-2019-11737: Content security policy directives ignore port and path if host is a wildcard</p>
	  <p>CVE-2019-11738: Content security policy bypass through hash-based sources in directives</p>
	  <p>CVE-2019-11747: 'Forget about this site' removes sites from pre-loaded HSTS list</p>
	  <p>CVE-2019-11734: Memory safety bugs fixed in Firefox 69</p>
	  <p>CVE-2019-11735: Memory safety bugs fixed in Firefox 69 and Firefox ESR 68.1</p>
	  <p>CVE-2019-11740: Memory safety bugs fixed in Firefox 69, Firefox ESR 68.1, and Firefox ESR 60.9</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11734</cvename>
      <cvename>CVE-2019-11735</cvename>
      <cvename>CVE-2019-11736</cvename>
      <cvename>CVE-2019-11737</cvename>
      <cvename>CVE-2019-11738</cvename>
      <cvename>CVE-2019-11740</cvename>
      <cvename>CVE-2019-11741</cvename>
      <cvename>CVE-2019-11742</cvename>
      <cvename>CVE-2019-11743</cvename>
      <cvename>CVE-2019-11744</cvename>
      <cvename>CVE-2019-11746</cvename>
      <cvename>CVE-2019-11747</cvename>
      <cvename>CVE-2019-11748</cvename>
      <cvename>CVE-2019-11749</cvename>
      <cvename>CVE-2019-11750</cvename>
      <cvename>CVE-2019-11751</cvename>
      <cvename>CVE-2019-11752</cvename>
      <cvename>CVE-2019-11753</cvename>
      <cvename>CVE-2019-5849</cvename>
      <cvename>CVE-2019-9812</cvename>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-25/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-26/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-27/</url>
    </references>
    <dates>
      <discovery>2019-09-03</discovery>
      <entry>2019-09-03</entry>
    </dates>
  </vuln>

  <vuln vid="ce231189-ce56-11e9-9fa0-0050569f0b83">
    <topic>www/varnish6 -- Denial of Service</topic>
    <affects>
      <package>
	<name>varnish6</name>
	<range><lt>6.2.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Varnish Team reports:</p>
	<blockquote cite="https://varnish-cache.org/security/VSV00003.html">
	  <p>A failure in HTTP/1 parsing can allow a remote attacker to trigger
	    an assertion in varnish, restarting the daemon and clearing the cache.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://varnish-cache.org/security/VSV00003.html</url>
    </references>
    <dates>
      <discovery>2019-09-02</discovery>
      <entry>2019-09-03</entry>
    </dates>
  </vuln>

  <vuln vid="c9c6c2f8-cd54-11e9-af89-080027ef1a23">
    <topic>libgcrypt -- ECDSA timing attack</topic>
    <affects>
      <package>
	<name>libgcrypt</name>
	<range><lt>1.8.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>GnuPG reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13627">
	  <p>Mitigate an ECDSA timing attack.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-13627</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13627</url>
    </references>
    <dates>
      <discovery>2019-08-29</discovery>
      <entry>2019-09-02</entry>
    </dates>
  </vuln>

  <vuln vid="e45c3669-caf2-11e9-851a-dcf3aaa3f3ff">
    <topic>webkit2-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.24.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports many vulnerabilities,
	including several arbitrary code execution vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2019-0004.html</url>
      <cvename>CVE-2019-8644</cvename>
      <cvename>CVE-2019-8649</cvename>
      <cvename>CVE-2019-8658</cvename>
      <cvename>CVE-2019-8666</cvename>
      <cvename>CVE-2019-8669</cvename>
      <cvename>CVE-2019-8671</cvename>
      <cvename>CVE-2019-8672</cvename>
      <cvename>CVE-2019-8673</cvename>
      <cvename>CVE-2019-8676</cvename>
      <cvename>CVE-2019-8677</cvename>
      <cvename>CVE-2019-8678</cvename>
      <cvename>CVE-2019-8679</cvename>
      <cvename>CVE-2019-8680</cvename>
      <cvename>CVE-2019-8681</cvename>
      <cvename>CVE-2019-8683</cvename>
      <cvename>CVE-2019-8684</cvename>
      <cvename>CVE-2019-8686</cvename>
      <cvename>CVE-2019-8687</cvename>
      <cvename>CVE-2019-8688</cvename>
      <cvename>CVE-2019-8689</cvename>
      <cvename>CVE-2019-8690</cvename>
    </references>
    <dates>
      <discovery>2019-08-29</discovery>
      <entry>2019-08-30</entry>
    </dates>
  </vuln>

  <vuln vid="b68cc195-cae7-11e9-86e9-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.2.0</ge><lt>12.2.3</lt></range>
	<range><ge>12.1.0</ge><lt>12.1.8</lt></range>
	<range><ge>0.0.0</ge><lt>12.0.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/08/29/security-release-gitlab-12-dot-2-dot-3-released/">
	  <p>Kubernetes Integration Server-Side Request Forgery</p>
	  <p>Server-Side Request Forgery in Jira Integration</p>
	  <p>Improved Protection Against Credential Stuffing Attacks</p>
	  <p>Markdown Clientside Resource Exhaustion</p>
	  <p>Pipeline Status Disclosure</p>
	  <p>Group Runner Authorization Issue</p>
	  <p>CI Metrics Disclosure</p>
	  <p>User IP Disclosed by Embedded Image and Media</p>
	  <p>Label Description HTML Injection</p>
	  <p>IDOR in Epic Notes API</p>
	  <p>Push Rule Bypass</p>
	  <p>Project Visibility Restriction Bypass</p>
	  <p>Merge Request Discussion Restriction Bypass</p>
	  <p>Disclosure of Merge Request IDs</p>
	  <p>Weak Authentication In Certain Account Actions</p>
	  <p>Disclosure of Commit Title and Comments</p>
	  <p>Stored XSS via Markdown</p>
	  <p>EXIF Geolocation Data Exposure</p>
	  <p>Multiple SSRF Regressions on Gitaly</p>
	  <p>Default Branch Name Exposure</p>
	  <p>Potential Denial of Service via CI Pipelines</p>
	  <p>Privilege Escalation via Logrotate</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/08/29/security-release-gitlab-12-dot-2-dot-3-released/</url>
      <cvename>CVE-2019-15728</cvename>
      <cvename>CVE-2019-15730</cvename>
      <cvename>CVE-2019-15722</cvename>
      <cvename>CVE-2019-15729</cvename>
      <cvename>CVE-2019-15721</cvename>
      <cvename>CVE-2019-15727</cvename>
      <cvename>CVE-2019-15726</cvename>
      <cvename>CVE-2019-15724</cvename>
      <cvename>CVE-2019-15725</cvename>
      <cvename>CVE-2019-15723</cvename>
      <cvename>CVE-2019-15732</cvename>
      <cvename>CVE-2019-15731</cvename>
      <cvename>CVE-2019-15738</cvename>
      <cvename>CVE-2019-15737</cvename>
      <cvename>CVE-2019-15734</cvename>
      <cvename>CVE-2019-15739</cvename>
      <cvename>CVE-2019-15740</cvename>
      <cvename>CVE-2019-15733</cvename>
      <cvename>CVE-2019-15736</cvename>
      <cvename>CVE-2019-15741</cvename>
    </references>
    <dates>
      <discovery>2019-08-29</discovery>
      <entry>2019-08-30</entry>
    </dates>
  </vuln>

  <vuln vid="ed8d5535-ca78-11e9-980b-999ff59c22ea">
    <topic>RDoc -- multiple jQuery vulnerabilities</topic>
    <affects>
      <package>
	<name>ruby</name>
	<range><ge>2.4.0,1</ge><lt>2.4.7,1</lt></range>
	<range><ge>2.5.0,1</ge><lt>2.5.6,1</lt></range>
	<range><ge>2.6.0,1</ge><lt>2.6.3,1</lt></range>
      </package>
      <package>
	<name>rubygem-rdoc</name>
	<range><lt>6.1.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby news:</p>
	<blockquote cite="https://www.ruby-lang.org/en/news/2019/08/28/multiple-jquery-vulnerabilities-in-rdoc/">
	  <p>There are multiple vulnerabilities about Cross-Site Scripting (XSS) in
	    jQuery shipped with RDoc which bundled in Ruby. All Ruby users are
	    recommended to update Ruby to the latest release which includes the
	    fixed version of RDoc.</p>
	  <p>The following vulnerabilities have been reported.</p>
	  <p>CVE-2012-6708</p>
	  <p>CVE-2015-9251</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.ruby-lang.org/en/news/2019/08/28/multiple-jquery-vulnerabilities-in-rdoc/</url>
      <cvename>CVE-2012-6708</cvename>
      <cvename>CVE-2015-9251</cvename>
    </references>
    <dates>
      <discovery>2019-08-28</discovery>
      <entry>2019-08-29</entry>
      <modified>2019-08-31</modified>
    </dates>
  </vuln>

  <vuln vid="abaaecda-ea16-43e2-bad0-d34a9ac576b1">
    <topic>Dovecot -- improper input validation</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.7.2</lt></range>
      </package>
      <package>
	<name>dovecot-pigeonhole</name>
	<range><lt>0.5.7.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot/2019-August/116874.html">
	  <p>Vulnerability Details:

IMAP and ManageSieve protocol parsers do not properly handle NUL byte
when scanning data in quoted strings, leading to out of bounds heap
memory writes.

Risk:

This vulnerability allows for out-of-bounds writes to objects stored on
the heap up to 8096 bytes in pre-login phase, and 65536 bytes post-login
phase, allowing sufficiently skilled attacker to perform complicated
attacks that can lead to leaking private information or remote code
execution. Abuse of this bug is very difficult to observe, as it does
not necessarily cause a crash. Attempts to abuse this bug are not
directly evident from logs.
</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot/2019-August/116874.html</url>
      <cvename>CVE-2019-11500</cvename>
    </references>
    <dates>
      <discovery>2019-04-13</discovery>
      <entry>2019-08-28</entry>
    </dates>
  </vuln>

  <vuln vid="7a7891fc-6318-447a-ba45-31d525ec11a0">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><le>2.191</le></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><le>2.176.2</le></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2019-08-28/">
	  <h1>Description</h1>
	  <h5>(Medium) SECURITY-1453 / CVE-2019-10383</h5>
	  <p>Stored XSS vulnerability in update center</p>
	  <h5>(High) SECURITY-1491 / CVE-2019-10384</h5>
	  <p>CSRF protection tokens for anonymous users did not expire in some circumstances</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-10383</cvename>
      <cvename>CVE-2019-10384</cvename>
      <url>https://jenkins.io/security/advisory/2019-08-28/</url>
    </references>
    <dates>
      <discovery>2019-08-28</discovery>
      <entry>2019-08-28</entry>
    </dates>
  </vuln>

  <vuln vid="0f31b4e9-c827-11e9-9626-589cfc01894a">
    <topic>Mozilla -- Stored passwords in 'Saved Logins' can be copied without master password entry</topic>
    <affects>
      <package>
	<name>cliqz</name>
	<range><lt>1.28.2</lt></range>
      </package>
      <package>
	<name>firefox</name>
	<range><lt>68.0.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-19/">
	  <h1>CVE-2019-11733: Stored passwords in 'Saved Logins' can
	    be copied without master password entry</h1>
	  <p>When a master password is set, it is required to be
	    entered again before stored passwords can be accessed in the 'Saved
	    Logins' dialog. It was found that locally stored passwords can be
	    copied to the clipboard thorough the 'copy password' context menu item
	    without re-entering the master password if the master password had
	    been previously entered in the same session, allowing for potential
	    theft of stored passwords.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-24/</url>
      <cvename>CVE-2019-11733</cvename>
    </references>
    <dates>
      <discovery>2019-08-14</discovery>
      <entry>2019-08-28</entry>
    </dates>
  </vuln>

  <vuln vid="72a5579e-c765-11e9-8052-0028f8d09152">
    <topic>h2o -- multiple HTTP/2 vulnerabilities</topic>
    <affects>
      <package>
	<name>h2o-devel</name>
	<range><lt>2.3.0.b2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jonathon Loomey of Netflix reports:</p>
	<blockquote cite="https://www.kb.cert.org/vuls/id/605641/">
	  <p>HTTP/2 implementations do not robustly handle abnormal traffic and resource exhaustion</p>
	  <p>Recently, a series of DoS attack vulnerabilities have been reported on a broad range of HTTP/2 stacks. Among the vulnerabilities, H2O is exposed to the following:</p>
	  <ul>
      <li>CVE-2019-9512 "Ping Flood": The attacker sends continual pings to an HTTP/2 peer, causing the peer to build an internal queue of responses. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9514 "Reset Flood": The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9515 "Settings Flood": The attacker sends a stream of SETTINGS frames to the peer. Since the RFC requires that the peer reply with one acknowledgement per SETTINGS frame, an empty SETTINGS frame is almost equivalent in behavior to a ping. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
    </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/h2o/h2o/issues/2090</url>
      <url>https://www.kb.cert.org/vuls/id/605641/</url>
      <cvename>CVE-2019-9512</cvename>
      <cvename>CVE-2019-9514</cvename>
      <cvename>CVE-2019-9515</cvename>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-25</entry>
    </dates>
  </vuln>

  <vuln vid="73b1e734-c74e-11e9-8052-0028f8d09152">
    <topic>h2o -- multiple HTTP/2 vulnerabilities</topic>
    <affects>
      <package>
	<name>h2o</name>
	<range><lt>2.2.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jonathon Loomey of Netflix reports:</p>
	<blockquote cite="https://www.kb.cert.org/vuls/id/605641/">
	  <p>HTTP/2 implementations do not robustly handle abnormal traffic and resource exhaustion</p>
	  <p>Recently, a series of DoS attack vulnerabilities have been reported on a broad range of HTTP/2 stacks. Among the vulnerabilities, H2O is exposed to the following:</p>
	  <ul>
      <li>CVE-2019-9512 "Ping Flood": The attacker sends continual pings to an HTTP/2 peer, causing the peer to build an internal queue of responses. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9514 "Reset Flood": The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9515 "Settings Flood": The attacker sends a stream of SETTINGS frames to the peer. Since the RFC requires that the peer reply with one acknowledgement per SETTINGS frame, an empty SETTINGS frame is almost equivalent in behavior to a ping. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
    </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/h2o/h2o/issues/2090</url>
      <url>https://www.kb.cert.org/vuls/id/605641/</url>
      <cvename>CVE-2019-9512</cvename>
      <cvename>CVE-2019-9514</cvename>
      <cvename>CVE-2019-9515</cvename>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-25</entry>
    </dates>
  </vuln>

  <vuln vid="e7392840-c520-11e9-a4ef-0800274e5f20">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.9.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/08/gitea-1.9.2-is-released/">
	  <p>This release contains two security fixes, so we highly recommend updating.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.9.2</url>
      <url>https://blog.gitea.io/2019/08/gitea-1.9.2-is-released/</url>
    </references>
    <dates>
      <discovery>2019-08-22</discovery>
      <entry>2019-08-22</entry>
    </dates>
  </vuln>

  <vuln vid="dbd1f627-c43b-11e9-a923-9c5c8e75236a">
    <topic>clamav -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.101.4,1</lt></range>
      </package>
      <package>
	<name>clamav-milter</name>
	<range><lt>0.101.4,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Micah Snyder reports:</p>
	<blockquote cite="https://blog.clamav.net/2019/08/clamav-01014-security-patch-release-has.html">
	  <ul>
	    <li>An out of bounds write was possible within ClamAV&amp;s NSIS bzip2 library when attempting decompression in cases where the number of selectors exceeded the max limit set by the library (CVE-2019-12900). The issue has been resolved by respecting that limit.</li>
	    <li> The zip bomb vulnerability mitigated in 0.101.3 has been assigned the CVE identifier CVE-2019-12625. Unfortunately, a workaround for the zip-bomb mitigation was immediately identified. To remediate the zip-bomb scan time issue, a scan time limit has been introduced in 0.101.4. This limit now resolves ClamAV's vulnerability to CVE-2019-12625.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2019/08/clamav-01014-security-patch-release-has.html</url>
      <cvename>CVE-2019-12625</cvename>
      <cvename>CVE-2019-12900</cvename>
    </references>
    <dates>
      <discovery>2019-08-21</discovery>
      <entry>2019-08-21</entry>
    </dates>
  </vuln>

  <vuln vid="c97a940b-c392-11e9-bb38-000d3ab229d6">
    <topic>Node.js -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>12.8.1</lt></range>
      </package>
      <package>
	<name>node10</name>
	<range><lt>10.16.3</lt></range>
      </package>
      <package>
	<name>node8</name>
	<range><lt>8.16.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
  <p>Node.js reports:</p>
  <blockquote cite="https://nodejs.org/en/blog/vulnerability/aug-2019-security-releases/">
    <p>Node.js, as well as many other implementations of HTTP/2, have been found vulnerable to Denial of Service attacks. See https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md for more information.</p>
    <p>Updates are now available for all active Node.js release lines, including Linux ARMv6 builds for Node.js 8.x (which had been delayed).</p>
    <p>We recommend that all Node.js users upgrade to a version listed below as soon as possible.</p>
    <h1>Vulnerabilities Fixed</h1>
    <p>Impact: All versions of Node.js 8 (LTS "Carbon"), Node.js 10 (LTS "Dubnium"), and Node.js 12 (Current) are vulnerable to the following:</p>
    <ul>
      <li>CVE-2019-9511 "Data Dribble": The attacker requests a large amount of data from a specified resource over multiple streams. They manipulate window size and stream priority to force the server to queue the data in 1-byte chunks. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9512 "Ping Flood": The attacker sends continual pings to an HTTP/2 peer, causing the peer to build an internal queue of responses. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9513 "Resource Loop": The attacker creates multiple request streams and continually shuffles the priority of the streams in a way that causes substantial churn to the priority tree. This can consume excess CPU, potentially leading to a denial of service.</li>
      <li>CVE-2019-9514 "Reset Flood": The attacker opens a number of streams and sends an invalid request over each stream that should solicit a stream of RST_STREAM frames from the peer. Depending on how the peer queues the RST_STREAM frames, this can consume excess memory, CPU, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9515 "Settings Flood": The attacker sends a stream of SETTINGS frames to the peer. Since the RFC requires that the peer reply with one acknowledgement per SETTINGS frame, an empty SETTINGS frame is almost equivalent in behavior to a ping. Depending on how efficiently this data is queued, this can consume excess CPU, memory, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9516 "0-Length Headers Leak": The attacker sends a stream of headers with a 0-length header name and 0-length header value, optionally Huffman encoded into 1-byte or greater headers. Some implementations allocate memory for these headers and keep the allocation alive until the session dies. This can consume excess memory, potentially leading to a denial of service.</li>
      <li>CVE-2019-9517 "Internal Data Buffering": The attacker opens the HTTP/2 window so the peer can send without constraint; however, they leave the TCP window closed so the peer cannot actually write (many of) the bytes on the wire. The attacker then sends a stream of requests for a large response object. Depending on how the servers queue the responses, this can consume excess memory, CPU, or both, potentially leading to a denial of service.</li>
      <li>CVE-2019-9518 "Empty Frames Flood": The attacker sends a stream of frames with an empty payload and without the end-of-stream flag. These frames can be DATA, HEADERS, CONTINUATION and/or PUSH_PROMISE. The peer spends time processing each frame disproportionate to attack bandwidth. This can consume excess CPU, potentially leading to a denial of service. (Discovered by Piotr Sikora of Google)</li>
    </ul>
  </blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/aug-2019-security-releases/</url>
      <cvename>CVE-2019-9511</cvename>
      <cvename>CVE-2019-9512</cvename>
      <cvename>CVE-2019-9513</cvename>
      <cvename>CVE-2019-9514</cvename>
      <cvename>CVE-2019-9515</cvename>
      <cvename>CVE-2019-9516</cvename>
      <cvename>CVE-2019-9517</cvename>
      <cvename>CVE-2019-9518</cvename>
    </references>
    <dates>
      <discovery>2019-08-16</discovery>
      <entry>2019-08-21</entry>
    </dates>
  </vuln>

  <vuln vid="795442e7-c355-11e9-8224-5404a68ad561">
    <topic>vlc -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>vlc</name>
	<range><lt>3.0.8,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The VLC project reports:</p>
	<blockquote cite="https://www.videolan.org/developers/vlc-branch/NEWS">
	  <p>Security:
	     * Fix a buffer overflow in the MKV demuxer (CVE-2019-14970)
	     * Fix a read buffer overflow in the avcodec decoder (CVE-2019-13962)
	     * Fix a read buffer overflow in the FAAD decoder
	     * Fix a read buffer overflow in the OGG demuxer (CVE-2019-14437, CVE-2019-14438)
	     * Fix a read buffer overflow in the ASF demuxer (CVE-2019-14776)
	     * Fix a use after free in the MKV demuxer (CVE-2019-14777, CVE-2019-14778)
	     * Fix a use after free in the ASF demuxer (CVE-2019-14533)
	     * Fix a couple of integer underflows in the MP4 demuxer (CVE-2019-13602)
	     * Fix a null dereference in the dvdnav demuxer
	     * Fix a null dereference in the ASF demuxer (CVE-2019-14534)
	     * Fix a null dereference in the AVI demuxer
	     * Fix a division by zero in the CAF demuxer (CVE-2019-14498)
	     * Fix a division by zero in the ASF demuxer (CVE-2019-14535)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.videolan.org/developers/vlc-branch/NEWS</url>
      <cvename>CVE-2019-13602</cvename>
      <cvename>CVE-2019-13962</cvename>
      <cvename>CVE-2019-14437</cvename>
      <cvename>CVE-2019-14438</cvename>
      <cvename>CVE-2019-14498</cvename>
      <cvename>CVE-2019-14533</cvename>
      <cvename>CVE-2019-14534</cvename>
      <cvename>CVE-2019-14535</cvename>
      <cvename>CVE-2019-14776</cvename>
      <cvename>CVE-2019-14777</cvename>
      <cvename>CVE-2019-14778</cvename>
      <cvename>CVE-2019-14970</cvename>
    </references>
    <dates>
      <discovery>2019-07-14</discovery>
      <entry>2019-08-20</entry>
    </dates>
  </vuln>

  <vuln vid="56778a31-c2a1-11e9-9051-4c72b94353b5">
    <topic>nsd -- Stack-based Buffer Overflow</topic>
    <affects>
      <package>
	<name>nsd</name>
	<range><lt>4.2.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SO-AND-SO reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-13207">
	  <p>nsd-checkzone in NLnet Labs NSD 4.2.0 has a Stack-based Buffer
	    Overflow in the dname_concatenate() function in dname.c.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-13207</url>
      <url>https://github.com/NLnetLabs/nsd/issues/20</url>
      <cvename>CVE-2019-13207</cvename>
    </references>
    <dates>
      <discovery>2019-07-28</discovery>
      <entry>2019-08-19</entry>
    </dates>
  </vuln>

  <vuln vid="ece65d3b-c20c-11e9-8af4-bcaec55be5e5">
    <topic>webmin -- unauthenticated remote code execution</topic>
    <affects>
      <package>
	<name>webmin</name>
	<range><lt>1.930</lt></range>
      </package>
      <package>
	<name>usermin</name>
	<range><lt>1.780</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Joe Cooper reports:</p>
	<blockquote cite="https://virtualmin.com/node/66890">
	  <p>I've rolled out Webmin version 1.930 and Usermin version 1.780
	  for all repositories. This release includes several security
	  fixes, including one potentially serious one caused by malicious
	  code inserted into Webmin and Usermin at some point on our build
	  infrastructure. We're still investigating how and when, but the
	  exploitable code has never existed in our github repositories, so
	  we've rebuilt from git source on new infrastructure (and checked
	  to be sure the result does not contain the malicious code).</p>

	  <p>I don't have a changelog for these releases yet, but I wanted
	  to announce them immediately due to the severity of this issue.
	  To exploit the malicious code, your Webmin installation must have
	  Webmin -&gt; Webmin Configuration -&gt; Authentication -&gt; Password
	  expiry policy set to Prompt users with expired passwords to enter
	  a new one. This option is not set by default, but if it is set,
	  it allows remote code execution.</p>

	  <p>This release addresses CVE-2019-15107, which was disclosed
	  earlier today. It also addresses a handful of XSS issues that we
	  were notified about, and a bounty was awarded to the researcher
	  (a different one) who found them.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://virtualmin.com/node/66890</url>
      <cvename>CVE-2019-15107</cvename>
    </references>
    <dates>
      <discovery>2019-08-17</discovery>
      <entry>2019-08-17</entry>
    </dates>
  </vuln>

  <vuln vid="3b2ee737-c12d-11e9-aabc-0800274e5f20">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.9.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/08/gitea-1.9.1-is-released/">
	  <p>This release contains two security fixes, so we highly recommend updating.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/08/gitea-1.9.1-is-released/</url>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.9.1</url>
    </references>
    <dates>
      <discovery>2019-07-31</discovery>
      <entry>2019-07-31</entry>
    </dates>
  </vuln>

  <vuln vid="d905b219-c1ca-11e9-8c46-0c9d925bbbc0">
    <topic>xdm -- remote denial of service</topic>
    <affects>
      <package>
	<name>xdm</name>
	<range><lt>1.1.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>nvd.nist.gov reports</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2013-2179">
	  <p>X.Org xdm 1.1.10, 1.1.11, and possibly other versions,
	    when performing authentication using certain implementations of
	    the crypt API function that can return NULL, allows remote
	    attackers to cause a denial of service (NULL pointer dereference
	    and crash) by attempting to log into an account whose password
	    field contains invalid characters, as demonstrated using the crypt
	    function from glibc 2.17 and later with (1) the "!" character in
	    the salt portion of a password field or (2) a password that has
	    been encrypted using DES or MD5 in FIPS-140 mode.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2013-2179</url>
      <cvename>CVE-2013-2179</cvename>
    </references>
    <dates>
      <discovery>2013-06-07</discovery>
      <entry>2019-08-18</entry>
    </dates>
  </vuln>

  <vuln vid="d51b52cf-c199-11e9-b13f-001b217b3468">
    <topic>Libgit2 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>libgit2</name>
	<range><lt>0.28.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Git community reports:</p>
	<blockquote cite="https://github.com/libgit2/libgit2/releases/tag/v0.28.3">
	  <p>A carefully constructed commit object with a very large number
of parents may lead to potential out-of-bounds writes or
potential denial of service.</p>
	  <p>The ProgramData configuration file is always read for compatibility
with Git for Windows and Portable Git installations. The ProgramData
location is not necessarily writable only by administrators, so we
now ensure that the configuration file is owned by the administrator
or the current user.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/libgit2/libgit2/releases/tag/v0.28.3</url>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-18</entry>
    </dates>
  </vuln>

  <vuln vid="caf545f2-c0d9-11e9-9051-4c72b94353b5">
    <topic>Apache -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>apache24</name>
	<range><lt>2.4.41</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SO-AND-SO reports:</p>
	<blockquote cite="http://www.apache.org/dist/httpd/CHANGES_2.4">
	  <h1>SECURITY: CVE-2019-10081</h1>
	  <p>mod_http2: HTTP/2 very early pushes, for example configured with "H2PushResource",
	    could lead to an overwrite of memory in the pushing request's pool,
	    leading to crashes. The memory copied is that of the configured push
	    link header values, not data supplied by the client.</p>
	  <h1>SECURITY: CVE-2019-9517</h1>
	  <p>mod_http2: a malicious client could perform a DoS attack by flooding
	    a connection with requests and basically never reading responses
	    on the TCP connection. Depending on h2 worker dimensioning, it was
	    possible to block those with relatively few connections.</p>
	  <h1>SECURITY: CVE-2019-10098</h1>
	  <p>rewrite, core: Set PCRE_DOTALL flag by default to avoid unpredictable
	    matches and substitutions with encoded line break characters.</p>
	  <h1>SECURITY: CVE-2019-10092</h1>
	  <p>Remove HTML-escaped URLs from canned error responses to prevent misleading
	    text/links being displayed via crafted links.</p>
	  <h1>SECURITY: CVE-2019-10097</h1>
	  <p>mod_remoteip: Fix stack buffer overflow and NULL pointer deference
	    when reading the PROXY protocol header.</p>
	  <h1>CVE-2019-10082</h1>
	  <p>mod_http2: Using fuzzed network input, the http/2 session
	    handling could be made to read memory after being freed,
	    during connection shutdown.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://www.apache.org/dist/httpd/CHANGES_2.4</url>
      <cvename>CVE-2019-10081</cvename>
      <cvename>CVE-2019-9517</cvename>
      <cvename>CVE-2019-10098</cvename>
      <cvename>CVE-2019-10092</cvename>
      <cvename>CVE-2019-10082</cvename>
    </references>
    <dates>
      <discovery>2019-08-14</discovery>
      <entry>2019-08-17</entry>
    </dates>
  </vuln>

  <vuln vid="121fec01-c042-11e9-a73f-b36f5969f162">
    <topic>nghttp2 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>libnghttp2</name>
	<name>nghttp2</name>
	<range><lt>1.39.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>nghttp2 GitHub releases:</p>
	<blockquote cite="https://github.com/nghttp2/nghttp2/releases">
	  <p>This release fixes CVE-2019-9511 "Data Dribble" and CVE-2019-9513
	    "Resource Loop" vulnerability in nghttpx and nghttpd. Specially crafted
	    HTTP/2 frames cause Denial of Service by consuming CPU time. Check out
	    https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md
	    for details. For nghttpx, additionally limiting inbound traffic by
	    --read-rate and --read-burst options is quite effective against this
	    kind of attack.</p>
	  <p>CVE-2019-9511 "Data Dribble": The attacker requests a large amount of
	    data from a specified resource over multiple streams. They manipulate
	    window size and stream priority to force the server to queue the data in
	    1-byte chunks. Depending on how efficiently this data is queued, this
	    can consume excess CPU, memory, or both, potentially leading to a
	    denial of service.</p>
	  <p>CVE-2019-9513 "Ping Flood": The attacker sends continual pings to an
	    HTTP/2 peer, causing the peer to build an internal queue of responses.
	    Depending on how efficiently this data is queued, this can consume
	    excess CPU, memory, or both, potentially leading to a denial of service.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/nghttp2/nghttp2/releases</url>
      <url>https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md</url>
      <cvename>CVE-2019-9511</cvename>
      <cvename>CVE-2019-9513</cvename>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-16</entry>
    </dates>
  </vuln>

  <vuln vid="60e991ac-c013-11e9-b662-001cc0382b2f">
    <topic>CUPS -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>cups</name>
	<range><lt>2.2.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Apple reports:</p>
	<blockquote cite="https://github.com/apple/cups/releases/tag/v2.2.12">
	  <ul>
	    <li>CVE-2019-8696 and CVE-2019-8675: SNMP buffer overflows.</li>
	    <li>IPP buffer overflow.</li>
	    <li>Memory disclosure in the scheduler.</li>
	    <li>DoS issues in the scheduler.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/apple/cups/releases/tag/v2.2.12</url>
      <cvename>CVE-2019-8675</cvename>
      <cvename>CVE-2019-8696</cvename>
    </references>
    <dates>
      <discovery>2019-08-15</discovery>
      <entry>2019-08-16</entry>
    </dates>
  </vuln>

  <vuln vid="41f4baac-bf77-11e9-8d2f-5404a68ad561">
    <topic>traefik -- Denial of service in HTTP/2</topic>
    <affects>
      <package>
	<name>traefik</name>
	<range><lt>1.7.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The traefik project reports:</p>
	<blockquote cite="https://github.com/containous/traefik/releases/tag/v1.7.14">
	  <p>Update of dependency to go go1.12.8 resolves potential HTTP/2
	    denial of service in traefik.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/containous/traefik/releases/tag/v1.7.14</url>
      <cvename>CVE-2019-9512</cvename>
      <cvename>CVE-2019-9514</cvename>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-15</entry>
    </dates>
  </vuln>

  <vuln vid="87679fcb-be60-11e9-9051-4c72b94353b5">
    <topic>NGINX -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>nginx</name>
	<range><lt>1.16.1,2</lt></range>
      </package>
      <package>
	<name>nginx-devel</name>
	<range><lt>1.17.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NGINX Team reports:</p>
	<blockquote cite="http://nginx.org/en/security_advisories.html">
	  <p>Several security issues were identified in nginx HTTP/2
	    implementation which might cause excessive memory consumption
	    and CPU usage (CVE-2019-9511, CVE-2019-9513, CVE-2019-9516).
	    The issues affect nginx compiled with the ngx_http_v2_module (not
	    compiled by default) if the http2 option of the listen directive
	    is used in a configuration file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://nginx.org/en/security_advisories.html</url>
      <cvename>CVE-2019-9511</cvename>
      <cvename>CVE-2019-9513</cvename>
      <cvename>CVE-2019-9516</cvename>
    </references>
    <dates>
      <discovery>2019-08-13</discovery>
      <entry>2019-08-14</entry>
      <modified>2019-08-14</modified>
    </dates>
  </vuln>

  <vuln vid="0569146e-bdef-11e9-bd31-8de4a4470bbb">
    <topic>Nokogiri -- injection vulnerability</topic>
    <affects>
      <package>
	<name>rubygem-nokogiri</name>
	<range><lt>1.10.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Nokogiri GitHub release:</p>
	<blockquote cite="https://github.com/sparklemotion/nokogiri/releases">
	  <p>A command injection vulnerability in Nokogiri v1.10.3 and earlier
	    allows commands to be executed in a subprocess by Ruby's Kernel.open
	    method. Processes are vulnerable only if the undocumented method
	    Nokogiri::CSS::Tokenizer#load_file is being passed untrusted user input.</p>
	  <p>This vulnerability appears in code generated by the Rexical gem
	    versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate
	    lexical scanner code for parsing CSS queries. The underlying
	    vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to
	    this version of Rexical in Nokogiri v1.10.4.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/sparklemotion/nokogiri/releases</url>
      <url>https://github.com/sparklemotion/nokogiri/issues/1915</url>
      <cvename>CVE-2019-5477</cvename>
    </references>
    <dates>
      <discovery>2019-08-11</discovery>
      <entry>2019-08-13</entry>
    </dates>
  </vuln>

  <vuln vid="ddd48087-bd86-11e9-b13f-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.1.0</ge><lt>12.1.6</lt></range>
	<range><ge>12.0.0</ge><lt>12.0.6</lt></range>
	<range><ge>10.0.0</ge><lt>11.11.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/08/12/critical-security-release-gitlab-12-dot-1-dot-6-released/">
	  <p>Insecure Authentication Methods Disabled for Grafana By Default</p>
	  <p>Multiple Command-Line Flag Injection Vulnerabilities</p>
	  <p>Insecure Cookie Handling on GitLab Pages</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/08/12/critical-security-release-gitlab-12-dot-1-dot-6-released/</url>
      <cvename>CVE-2019-14943</cvename>
      <cvename>CVE-2019-14944</cvename>
      <cvename>CVE-2019-14942</cvename>
    </references>
    <dates>
      <discovery>2019-08-12</discovery>
      <entry>2019-08-13</entry>
    </dates>
  </vuln>

  <vuln vid="f5f0a640-bae8-11e9-bb3a-001e2a3f778d">
    <topic>KDE Frameworks -- malicious .desktop files execute code</topic>
    <affects>
      <package>
	<name>kf5-kconfig</name>
	<range><lt>5.60.0_2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The KDE Community has released a security announcement:</p>
	<blockquote cite="https://kde.org/info/security/advisory-20190807-1.txt">
	  <p>The syntax Key[$e]=$(shell command) in *.desktop files, .directory files, and configuration files
(typically found in ~/.config) was an intentional feature of KConfig, to allow flexible configuration.
This could however be abused by malicious people to make the users install such files and get code
executed even without intentional action by the user.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-14744</cvename>
      <url>https://kde.org/info/security/advisory-20190807-1.txt</url>
    </references>
    <dates>
      <discovery>2019-08-07</discovery>
      <entry>2019-08-09</entry>
    </dates>
  </vuln>

  <vuln vid="7f7d6412-bae5-11e9-be92-3085a9a95629">
    <topic>doas -- Prevent passing of environment variables</topic>
    <affects>
      <package>
	<name>doas</name>
	<range><lt>6.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jesse Smith (upstream author of the doas program) reported:</p>
	<blockquote cite="https://github.com/slicer69/doas/releases/tag/6.1">
	  <p>Previous versions of "doas" transferred most environment variables, such
	    as USER, HOME, and PATH from the original user to the target user.

	    Passing these variables could cause files in the wrong path or
	    home directory to be read (or written to), which resulted in potential
	    security problems.</p>
	  <p>Many thanks to Sander Bos for reporting this issue and explaining
	    how it can be exploited.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <mlist msgid="2a5cda45ef35e885c9a8b1e@tedunangst.com">https://marc.info/?l=openbsd-tech&amp;m=156105665713340&amp;w=2</mlist>
      <url>https://github.com/slicer69/doas/releases/tag/6.1</url>
    </references>
    <dates>
      <discovery>2019-08-03</discovery>
      <entry>2019-08-09</entry>
      <modified>2019-08-15</modified>
    </dates>
  </vuln>

  <vuln vid="f56669f5-d799-4ff5-9174-64a6d571c451">
    <topic>bro -- Null pointer dereference and Signed integer overflow</topic>
    <affects>
      <package>
	<name>bro</name>
	<range><lt>2.6.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/1d874e5548a58b3b8fd2a342fe4aa0944e779809/NEWS">
	  <p>This is a security patch release to address potential
	  Denial of Service vulnerabilities:</p>
	  <ul>
	  <li>
	  Null pointer dereference in the RPC analysis code. RPC
	  analyzers (e.g. MOUNT or NFS) are not enabled in the
	  default configuration.</li>

	  <li>
	  Signed integer overflow in BinPAC-generated parser code.
	  The result of this is Undefined Behavior with respect to
	  the array bounds checking conditions that BinPAC generates,
	  so it's unpredictable what an optimizing compiler may
	  actually do under the assumption that signed integer
	  overlows should never happen.  The specific symptom which
	  lead to finding this issue was with the PE analyzer causing
	  out-of-memory crashes due to large allocations that were
	  otherwise prevented when the array bounds checking logic
	  was changed to prevent any possible signed integer overlow.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://raw.githubusercontent.com/zeek/zeek/1d874e5548a58b3b8fd2a342fe4aa0944e779809/NEWS</url>
    </references>
    <dates>
      <discovery>2019-06-22</discovery>
      <entry>2019-08-09</entry>
    </dates>
  </vuln>

  <vuln vid="9de4c1c1-b9ee-11e9-82aa-6cc21735f730">
    <topic>PostgresSQL -- TYPE in pg_temp execute arbitrary SQL during `SECURITY DEFINER` execution</topic>
    <affects>
      <package>
	<name>postgresql11-server</name>
	<range><lt>11.5</lt></range>
      </package>
      <package>
	<name>postgresql10-server</name>
	<range><lt>10.10</lt></range>
      </package>
     <package>
	<name>postgresql96-server</name>
	<range><lt>9.6.15</lt></range>
      </package>
     <package>
	<name>postgresql95-server</name>
	<range><lt>9.5.19</lt></range>
      </package>
     <package>
	<name>postgresql94-server</name>
	<range><lt>9.4.24</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PostgreSQL project reports:</p>
	<blockquote cite="https://www.postgresql.org/about/news/1960/">
	  <p>
	    Versions Affected: 9.4 - 11
	  </p>
	  <p>
	    Given a suitable `SECURITY DEFINER` function, an attacker can execute arbitrary
	    SQL under the identity of the function owner.  An attack requires `EXECUTE`
	    permission on the function, which must itself contain a function call having
	    inexact argument type match.  For example, `length('foo'::varchar)` and
	    `length('foo')` are inexact, while `length('foo'::text)` is exact.
	    As part of exploiting this vulnerability, the attacker uses `CREATE DOMAIN`
	    to create a type in a `pg_temp` schema. The attack pattern and fix are similar
	    to that for CVE-2007-2138.
	  </p>
	  <p>
	    Writing `SECURITY DEFINER` functions continues to require following
	    the considerations noted in the documentation:
	  </p>
	  <p>
	    https://www.postgresql.org/docs/devel/sql-createfunction.html#SQL-CREATEFUNCTION-SECURITY
	  </p>
	</blockquote>
	<blockquote cite="https://www.postgresql.org/about/news/1960/">
	  <p>
	    Versions Affected: 11
	  </p>
	  <p>
	    In a database containing hypothetical, user-defined hash equality operators,
	    an attacker could read arbitrary bytes of server memory. For an attack to
	    become possible, a superuser would need to create unusual operators.
	    It is possible for operators not purpose-crafted for attack to have
	    the properties that enable an attack, but we are not aware of specific examples.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.postgresql.org/about/news/1960/</url>
      <cvename>CVE-2019-10208</cvename>
      <cvename>CVE-2019-10209</cvename>
    </references>
    <dates>
      <discovery>2019-08-08</discovery>
      <entry>2019-08-08</entry>
    </dates>
  </vuln>

  <vuln vid="6e65dfea-b614-11e9-a3a2-1506e15611cc">
    <topic>Django -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<range><lt>1.11.23</lt></range>
      </package>
      <package>
	<name>py27-django21</name>
	<name>py35-django21</name>
	<name>py36-django21</name>
	<name>py37-django21</name>
	<range><lt>2.1.11</lt></range>
      </package>
      <package>
	<name>py27-django22</name>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<range><lt>2.2.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django release notes:</p>
	<blockquote cite="https://docs.djangoproject.com/en/1.11/releases/1.11.23/">
	  <p>CVE-2019-14232: Denial-of-service possibility in
	    django.utils.text.Truncator</p>
	  <p>If django.utils.text.Truncator's chars() and words() methods were
	    passed the html=True argument, they were extremely slow to evaluate
	    certain inputs due to a catastrophic backtracking vulnerability in a
	    regular expression. The chars() and words() methods are used to
	    implement the truncatechars_html and truncatewords_html template
	    filters, which were thus vulnerable</p>
	  <p>The regular expressions used by Truncator have been simplified in
	    order to avoid potential backtracking issues. As a consequence, trailing
	    punctuation may now at times be included in the truncated output.</p>
	  <p>CVE-2019-14233: Denial-of-service possibility in strip_tags()</p>
	  <p>Due to the behavior of the underlying HTMLParser,
	    django.utils.html.strip_tags() would be extremely slow to evaluate
	    certain inputs containing large sequences of nested incomplete HTML
	    entities. The strip_tags() method is used to implement the corresponding
	    striptags template filter, which was thus also vulnerable.</p>
	  <p>strip_tags() now avoids recursive calls to HTMLParser when progress
	    removing tags, but necessarily incomplete HTML entities, stops being
	    made.</p>
	  <p>Remember that absolutely NO guarantee is provided about the results of
	    strip_tags() being HTML safe. So NEVER mark safe the result of a
	    strip_tags() call without escaping it first, for example with
	    django.utils.html.escape().</p>
	  <p>CVE-2019-14234: SQL injection possibility in key and index lookups for
	    JSONField/HStoreField</p>
	  <p>Key and index lookups for JSONField and key lookups for HStoreField
	    were subject to SQL injection, using a suitably crafted dictionary,
	    with dictionary expansion, as the **kwargs passed to QuerySet.filter().</p>
	  <p>CVE-2019-14235: Potential memory exhaustion in
	    django.utils.encoding.uri_to_iri()</p>
	  <p>If passed certain inputs, django.utils.encoding.uri_to_iri() could lead
	    to significant memory usage due to excessive recursion when
	    re-percent-encoding invalid UTF-8 octet sequences.</p>
	  <p>uri_to_iri() now avoids recursion when re-percent-encoding invalid
	    UTF-8 octet sequences.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.djangoproject.com/en/1.11/releases/1.11.23/</url>
      <url>https://docs.djangoproject.com/en/2.1/releases/2.1.11/</url>
      <url>https://docs.djangoproject.com/en/2.2/releases/2.2.4/</url>
      <cvename>CVE-2019-14232</cvename>
      <cvename>CVE-2019-14233</cvename>
      <cvename>CVE-2019-14234</cvename>
      <cvename>CVE-2019-14235</cvename>
    </references>
    <dates>
      <discovery>2019-08-01</discovery>
      <entry>2019-08-03</entry>
    </dates>
  </vuln>

  <vuln vid="e7b69694-b3b5-11e9-9bb6-0800274e5f20">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.9.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/07/gitea-1.9.0-is-released/">
	  <p>This version of Gitea contains security fixes that could not be
	    backported to 1.8. For this reason, we strongly recommend updating.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/07/gitea-1.9.0-is-released/</url>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.9.0</url>
    </references>
    <dates>
      <discovery>2019-07-31</discovery>
      <entry>2019-07-31</entry>
    </dates>
  </vuln>

  <vuln vid="0d3f99f7-b30c-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- File description reference count leak</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_8</lt></range>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>If a process attempts to transmit rights over a UNIX-domain
	socket and an error causes the attempt to fail, references
	acquired on the rights are not released and are leaked.
	This bug can be used to cause the reference counter to wrap
	around and free the corresponding file structure.</p>
	<h1>Impact:</h1>
	<p>A local user can exploit the bug to gain root privileges
	or escape from a jail.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5607</cvename>
      <freebsdsa>SA-19:17.fd</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="edf064fb-b30b-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Bhyve out-of-bounds read in XHCI device</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_8</lt></range>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The pci_xhci_device_doorbell() function does not validate
	the 'epid' and 'streamid' provided by the guest, leading
	to an out-of-bounds read.</p>
	<h1>Impact:</h1>
	<p>A misbehaving bhyve guest could crash the system or
	access memory that it should not be able to.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5604</cvename>
      <freebsdsa>SA-19:16.bhyve</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="deb6e164-b30b-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Reference count overflow in mqueue filesystem</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_8</lt></range>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>System calls operating on file descriptors obtain a
	reference to relevant struct file which due to a programming
	error was not always put back, which in turn could be used
	to overflow the counter of affected struct file.</p>
	<h1>Impact:</h1>
	<p>A local user can use this flaw to obtain access to files,
	directories, sockets etc. opened by processes owned by other
	users. If obtained struct file represents a directory from
	outside of user's jail, it can be used to access files
	outside of the jail. If the user in question is a jailed
	root they can obtain root privileges on the host system.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5603</cvename>
      <freebsdsa>SA-19:15.mqueuefs</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="6b856e00-b30a-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Kernel memory disclosure in freebsd32_ioctl</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Due to insufficient initialization of memory copied to
	userland in the components listed above small amounts of
	kernel memory may be disclosed to userland processes.</p>
	<h1>Impact:</h1>
	<p>A user who can invoke 32-bit FreeBSD ioctls may be able
	to read the contents of small portions of kernel memory.</p>
	<p>Such memory might contain sensitive information, such
	as portions of the file cache or terminal buffers. This
	information might be directly useful, or it might be leveraged
	to obtain elevated privileges in some way; for example, a
	terminal buffer might include a user-entered password.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5605</cvename>
      <freebsdsa>SA-19:14.freebsd32</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="5721ae65-b30a-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- pts(4) write-after-free</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_8</lt></range>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The code which handles a close(2) of a descriptor created
	by posix_openpt(2) fails to undo the configuration which
	causes SIGIO to be raised. This bug can lead to a
	write-after-free of kernel memory.</p>
	<h1>Impact:</h1>
	<p>The bug permits malicious code to trigger a write-after-free,
	which may be used to gain root privileges or escape a
	jail.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5606</cvename>
      <freebsdsa>SA-19:13.pts</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="39f6cbff-b30a-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- telnet(1) client multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_8</lt></range>
	<range><ge>11.2</ge><lt>11.2_12</lt></range>
	<range><ge>11.3</ge><lt>11.3_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Insufficient validation of environment variables in the
	telnet client supplied in FreeBSD can lead to stack-based
	buffer overflows. A stack- based overflow is present in the
	handling of environment variables when connecting via the
	telnet client to remote telnet servers.</p>
	<p>This issue only affects the telnet client. Inbound telnet
	sessions to telnetd(8) are not affected by this issue.</p>
	<h1>Impact:</h1>
	<p>These buffer overflows may be triggered when connecting
	to a malicious server, or by an active attacker in the
	network path between the client and server. Specially crafted
	TELNET command sequences may cause the execution of arbitrary
	code with the privileges of the user invoking telnet(1).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-0053</cvename>
      <freebsdsa>SA-19:12.telnet</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-24</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="14a3b376-b30a-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Privilege escalation in cd(4) driver</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_7</lt></range>
	<range><ge>11.2</ge><lt>11.2_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>To implement one particular ioctl, the Linux emulation
	code used a special interface present in the cd(4) driver
	which allows it to copy subchannel information directly to
	a kernel address. This interface was erroneously made
	accessible to userland, allowing users with read access to
	a cd(4) device to arbitrarily overwrite kernel memory when
	some media is present in the device.</p>
	<h1>Impact:</h1>
	<p>A user in the operator group can make use of this interface
	to gain root privileges on a system with a cd(4) device
	when some media is present in the device.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5602</cvename>
      <freebsdsa>SA-19:11.cd_ioctl</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-02</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="ff82610f-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Kernel stack disclosure in UFS/FFS</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_7</lt></range>
	<range><ge>11.2</ge><lt>11.2_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A bug causes up to three bytes of kernel stack memory
	to be written to disk as uninitialized directory entry
	padding. This data can be viewed by any user with read
	access to the directory. Additionally, a malicious user
	with write access to a directory can cause up to 254 bytes
	of kernel stack memory to be exposed.</p>
	<h1>Impact:</h1>
	<p>Some amount of the kernel stack is disclosed and written
	out to the filesystem.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5601</cvename>
      <freebsdsa>SA-19:10.ufs</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-02</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="f62bba56-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- iconv buffer overflow</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_7</lt></range>
	<range><ge>11.2</ge><lt>11.2_11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>With certain inputs, iconv may write beyond the end of
	the output buffer.</p>
	<h1>Impact:</h1>
	<p>Depending on the way in which iconv is used, an attacker
	may be able to create a denial of service, provoke incorrect
	program behavior, or induce a remote code execution. iconv
	is a libc library function and the nature of possible attacks
	will depend on the way in which iconv is used by applications
	or daemons.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5600</cvename>
      <freebsdsa>SA-19:09.iconv</freebsdsa>
    </references>
    <dates>
      <discovery>2019-07-02</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="c294c2e6-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Resource exhaustion in non-default RACK TCP stack</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>While processing acknowledgements, the RACK code uses
	several linked lists to maintain state entries. A malicious
	attacker can cause the lists to grow unbounded. This can
	cause an expensive list traversal on every packet being
	processed, leading to resource exhaustion and a denial of
	service.</p>
	<h1>Impact:</h1>
	<p>An attacker with the ability to send specially crafted
	TCP traffic to a victim system can degrade network performance
	and/or consume excessive CPU by exploiting the inefficiency
	of traversing the potentially very large RACK linked lists
	with relatively small bandwidth cost.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5599</cvename>
      <freebsdsa>SA-19:08.rack</freebsdsa>
    </references>
    <dates>
      <discovery>2019-06-19</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="a633651b-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- Microarchitectural Data Sampling (MDS)</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_5</lt></range>
	<range><ge>11.2</ge><lt>11.2_10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>On some Intel processors utilizing speculative execution
	a local process may be able to infer stale information from
	microarchitectural buffers to obtain a memory disclosure.</p>
	<h1>Impact:</h1>
	<p>An attacker may be able to read secret data from the
	kernel or from a process when executing untrusted code (for
	example, in a web browser).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-1212</cvename>
      <cvename>CVE-2018-1213</cvename>
      <cvename>CVE-2019-1109</cvename>
      <freebsdsa>SA-19:07.mds</freebsdsa>
    </references>
    <dates>
      <discovery>2019-05-14</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="59c5f255-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- ICMP/ICMP6 packet filter bypass in pf</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_4</lt></range>
	<range><ge>11.2</ge><lt>11.2_10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>States in pf(4) let ICMP and ICMP6 packets pass if they
	have a packet in their payload matching an existing condition.
	pf(4) does not check if the outer ICMP or ICMP6 packet has
	the same destination IP as the source IP of the inner
	protocol packet.</p>
	<h1>Impact:</h1>
	<p>A maliciously crafted ICMP/ICMP6 packet could bypass the
	packet filter rules and be passed to a host that would
	otherwise be unavailable.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5598</cvename>
      <freebsdsa>SA-19:06.pf</freebsdsa>
    </references>
    <dates>
      <discovery>2019-05-14</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="3d02520d-b309-11e9-a87f-a4badb2f4699">
    <topic>FreeBSD -- IPv6 fragment reassembly panic in pf(4)</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_4</lt></range>
	<range><ge>11.2</ge><lt>11.2_10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>A bug in the pf(4) IPv6 fragment reassembly logic
	incorrectly uses the last extension header offset from the
	last received packet instead of from the first packet.</p>
	<h1>Impact:</h1>
	<p>Malicious IPv6 packets with different IPv6 extensions
	could cause a kernel panic or potentially a filtering rule
	bypass.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5597</cvename>
      <freebsdsa>SA-19:05.pf</freebsdsa>
    </references>
    <dates>
      <discovery>2019-05-14</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="1cd89254-b2db-11e9-8001-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.1.0</ge><lt>12.1.2</lt></range>
	<range><ge>12.0.0</ge><lt>12.0.4</lt></range>
	<range><ge>8.9.0</ge><lt>11.11.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/07/29/security-release-gitlab-12-dot-1-dot-2-released/">
	  <p>GitHub Integration SSRF</p>
	  <p>Trigger Token Impersonation</p>
	  <p>Build Status Disclosure</p>
	  <p>SSRF Mitigation Bypass</p>
	  <p>Information Disclosure New Issue ID</p>
	  <p>IDOR Label Name Enumeration</p>
	  <p>Persistent XSS Wiki Pages</p>
	  <p>User Revokation Bypass with Mattermost Integration</p>
	  <p>Arbitrary File Upload via Import Project Archive</p>
	  <p>Information Disclosure Vulnerability Feedback</p>
	  <p>Persistent XSS via Email</p>
	  <p>Denial Of Service Epic Comments</p>
	  <p>Email Verification Bypass</p>
	  <p>Override Merge Request Approval Rules</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/07/29/security-release-gitlab-12-dot-1-dot-2-released/</url>
    </references>
    <dates>
      <discovery>2019-07-29</discovery>
      <entry>2019-07-30</entry>
    </dates>
  </vuln>

  <vuln vid="38d2df4d-b143-11e9-87e7-901b0e934d69">
    <topic>py-matrix-synapse -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>py27-matrix-synapse</name>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>1.2.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	<blockquote cite="https://matrix.org/blog/2019/07/26/critical-security-update-synapse-1-2-1-released">
	  <p>The matrix team releases Synapse 1.2.1 as a critical security update. It contains patches relating to redactions and event federation:</p>
	  <ul>
	    <li>Prevent an attack where a federated server could send redactions for arbitrary events in v1 and v2 rooms.</li>
	    <li>Prevent a denial-of-service attack where cycles of redaction events would make Synapse spin infinitely.</li>
	    <li>Prevent an attack where users could be joined or parted from public rooms without their consent.</li>
	    <li>Fix a vulnerability where a federated server could spoof read-receipts from users on other servers. </li>
	    <li>It was possible for a room moderator to send a redaction for an m.room.create event, which would downgrade the room to version 1.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://matrix.org/blog/2019/07/26/critical-security-update-synapse-1-2-1-released</url>
      <url>https://github.com/matrix-org/synapse/releases/tag/v1.2.1</url>
    </references>
    <dates>
      <discovery>2019-07-26</discovery>
      <entry>2019-07-28</entry>
    </dates>
  </vuln>

  <vuln vid="3e0da406-aece-11e9-8d41-97657151f8c2">
    <topic>Exim -- RCE in ${sort} expansion</topic>
    <affects>
      <package>
	<name>exim</name>
	<range><ge>4.85</ge><lt>4.92.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Exim team report:</p>
	<blockquote cite="https://www.exim.org/static/doc/security/CVE-2019-13917.txt">
	  <p>
	    A local or remote attacker can execute programs with root privileges - if you've an unusual configuration.
	  </p>
	  <p>
	    If your configuration uses the ${sort } expansion for items that can be controlled by an attacker (e.g. $local_part, $domain). The default config, as shipped by the Exim developers, does not contain ${sort }.
	  </p>
	  <p>
	    The vulnerability is exploitable either remotely or locally and could
be used to execute other programs with root privilege.  The ${sort }
expansion re-evaluates its items.
	  </p>
	  <p>
	    Exim 4.92.1 is not vulnerable.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-13917</cvename>
      <url>https://www.exim.org/static/doc/security/CVE-2019-13917.txt</url>
    </references>
    <dates>
      <discovery>2019-07-18</discovery>
      <entry>2019-07-25</entry>
      <modified>2019-07-26</modified>
    </dates>
  </vuln>

  <vuln vid="198e6220-ac8b-11e9-a1c7-b499baebfeaf">
    <topic>MySQL -- Multiple vulerabilities</topic>
    <affects>
      <package>
	<name>mariadb55-server</name>
	<range><lt>5.5.65</lt></range>
      </package>
      <package>
	<name>mariadb101-server</name>
	<range><lt>10.1.41</lt></range>
      </package>
      <package>
	<name>mariadb102-server</name>
	<range><lt>10.2.26</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.17</lt></range>
      </package>
      <package>
	<name>mariadb104-server</name>
	<range><lt>10.4.7</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.45</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.27</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.17</lt></range>
      </package>
      <package>
	<name>percona55-server</name>
	<range><lt>5.5.65</lt></range>
      </package>
      <package>
	<name>percona56-server</name>
	<range><lt>5.6.45</lt></range>
      </package>
      <package>
	<name>percona57-server</name>
	<range><lt>5.7.27</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html">
	  <p>This Critical Patch Update contains 45 new security fixes for
	    Oracle MySQL.  4 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</url>
      <cvename>CVE-2019-2730</cvename>
      <cvename>CVE-2019-2731</cvename>
      <cvename>CVE-2019-2737</cvename>
      <cvename>CVE-2019-2738</cvename>
      <cvename>CVE-2019-2739</cvename>
      <cvename>CVE-2019-2740</cvename>
      <cvename>CVE-2019-2741</cvename>
      <cvename>CVE-2019-2743</cvename>
      <cvename>CVE-2019-2746</cvename>
      <cvename>CVE-2019-2747</cvename>
      <cvename>CVE-2019-2752</cvename>
      <cvename>CVE-2019-2755</cvename>
      <cvename>CVE-2019-2757</cvename>
      <cvename>CVE-2019-2758</cvename>
      <cvename>CVE-2019-2774</cvename>
      <cvename>CVE-2019-2778</cvename>
      <cvename>CVE-2019-2780</cvename>
      <cvename>CVE-2019-2784</cvename>
      <cvename>CVE-2019-2785</cvename>
      <cvename>CVE-2019-2789</cvename>
      <cvename>CVE-2019-2791</cvename>
      <cvename>CVE-2019-2795</cvename>
      <cvename>CVE-2019-2796</cvename>
      <cvename>CVE-2019-2797</cvename>
      <cvename>CVE-2019-2798</cvename>
      <cvename>CVE-2019-2800</cvename>
      <cvename>CVE-2019-2801</cvename>
      <cvename>CVE-2019-2802</cvename>
      <cvename>CVE-2019-2803</cvename>
      <cvename>CVE-2019-2805</cvename>
      <cvename>CVE-2019-2808</cvename>
      <cvename>CVE-2019-2810</cvename>
      <cvename>CVE-2019-2811</cvename>
      <cvename>CVE-2019-2812</cvename>
      <cvename>CVE-2019-2814</cvename>
      <cvename>CVE-2019-2815</cvename>
      <cvename>CVE-2019-2819</cvename>
      <cvename>CVE-2019-2822</cvename>
      <cvename>CVE-2019-2826</cvename>
      <cvename>CVE-2019-2830</cvename>
      <cvename>CVE-2019-2834</cvename>
      <cvename>CVE-2019-2879</cvename>
      <cvename>CVE-2019-3822</cvename>
    </references>
    <dates>
      <discovery>2019-07-16</discovery>
      <entry>2019-07-22</entry>
    </dates>
  </vuln>

  <vuln vid="19d648e0-ab69-11e9-bfef-000ffec0b3e1">
    <topic>drupal -- Drupal core - Access bypass</topic>
    <affects>
      <package>
	<name>drupal8</name>
	<range><lt>8.7.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/SA-CORE-2019-008">
	  <p>In Drupal 8.7.4, when the experimental Workspaces module is enabled,
	    an access bypass condition is created.</p>
	  <p>This can be mitigated by disabling the Workspaces module. It does
	    not affect any release other than Drupal 8.7.4.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/SA-CORE-2019-008</url>
    </references>
    <dates>
      <discovery>2019-07-17</discovery>
      <entry>2019-07-21</entry>
    </dates>
  </vuln>

  <vuln vid="5914705c-ab03-11e9-a4f9-080027ac955c">
    <topic>PuTTY 0.72 -- buffer overflow in SSH-1 and integer overflow in SSH client</topic>
    <affects>
      <package>
	<name>putty</name> <range><lt>0.72</lt></range>
	</package><package>
	<name>putty-gtk2</name> <range><lt>0.72</lt></range>
	</package><package>
	<name>putty-nogtk</name> <range><lt>0.72</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Simon Tatham reports:</p>
	<blockquote cite="https://lists.tartarus.org/pipermail/putty-announce/2019/000028.html">
	  <p>Vulnerabilities fixed in this release include:</p>
	  <ul>
	    <li>A malicious SSH-1 server could trigger a buffer overrun by sending
	      extremely short RSA keys, or certain bad packet length fields.
	      Either of these could happen before host key verification, so even
	      if you trust the server you *intended* to connect to, you would
	      still be at risk.
	    <br/>
	      (However, the SSH-1 protocol is obsolete, and recent versions of
	      PuTTY do not try it by default, so you are only at risk if you work
	      with old servers and have explicitly configured SSH-1.)</li>
	    <li>If a malicious process found a way to impersonate Pageant, then it
	      could cause an integer overflow in any of the SSH client tools
	      (PuTTY, Plink, PSCP, PSFTP) which accessed the malicious Pageant.</li>
	  </ul>
	  <p>Other security-related bug fixes include:</p>
	  <ul>
	    <li>The 'trust sigil' system introduced in PuTTY 0.71 to protect
	      against server spoofing attacks had multiple bugs. Trust sigils
	      were not turned off after login in the SSH-1 and Rlogin protocols,
	      and not turned back on if you used the Restart Session command.
	      Both are now fixed.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://lists.tartarus.org/pipermail/putty-announce/2019/000028.html</url>
    </references>
    <dates>
      <discovery>2019-07-14</discovery>
      <entry>2019-07-20</entry>
    </dates>
  </vuln>

  <vuln vid="df3db21d-1a4d-4c78-acf7-4639e5a795e0">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.186</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.176.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2019-07-17/">
	  <h1>Description</h1>
	  <h5>(Medium) SECURITY-1424 / CVE-2019-10352</h5>
	  <p>Arbitrary file write vulnerability using file parameter definitions</p>
	  <h5>(High) SECURITY-626 / CVE-2019-10353</h5>
	  <p>CSRF protection tokens did not expire</p>
	  <h5>(Medium) SECURITY-534 / CVE-2019-10354</h5>
	  <p>Unauthorized view fragment access</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-10352</cvename>
      <cvename>CVE-2019-10353</cvename>
      <cvename>CVE-2019-10354</cvename>
      <url>https://jenkins.io/security/advisory/2019-07-17/</url>
    </references>
    <dates>
      <discovery>2019-07-17</discovery>
      <entry>2019-07-17</entry>
    </dates>
  </vuln>

  <vuln vid="93167bef-9752-11e9-b61c-b885849ded8e">
    <topic>libxslt -- security framework bypass</topic>
    <affects>
      <package>
	<name>libxslt</name>
	<range><lt>1.1.33</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre report:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11068">
	  <p>libxslt through 1.1.33 allows bypass of a protection mechanism because callers of xsltCheckRead and xsltCheckWrite permit access even upon receiving a -1 error code. xsltCheckRead can return -1 for a crafted URL that is not actually invalid and is subsequently loaded.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11068</url>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-07-16</entry>
    </dates>
  </vuln>

  <vuln vid="818b2bcb-a46f-11e9-bed9-001999f8d30b">
    <topic>asterisk -- Remote crash vulnerability with MESSAGE messages</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.27.1</lt></range>
      </package>
      <package>
	<name>asterisk15</name>
	<range><lt>15.7.3</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.4.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="http://www.asterisk.org/downloads/security-advisories">
	  <p>A specially crafted SIP in-dialog MESSAGE message can cause Asterisk to crash.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-002.html</url>
      <cvename>CVE-2019-12827</cvename>
    </references>
    <dates>
      <discovery>2019-06-13</discovery>
      <entry>2019-07-12</entry>
    </dates>
  </vuln>

  <vuln vid="e9d2e981-a46d-11e9-bed9-001999f8d30b">
    <topic>asterisk -- Remote Crash Vulnerability in chan_sip channel driver</topic>
    <affects>
      <package>
	<name>asterisk13</name>
	<range><lt>13.27.1</lt></range>
      </package>
      <package>
	<name>asterisk15</name>
	<range><lt>15.7.3</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.4.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="http://www.asterisk.org/downloads/security-advisories">
	  <p>When T.38 faxing is done in Asterisk a T.38 reinvite
	  may be sent to an endpoint to switch it to T.38. If the
	  endpoint responds with an improperly formatted SDP answer
	  including both a T.38 UDPTL stream and an audio or video
	  stream containing only codecs not allowed on the SIP peer
	  or user a crash will occur. The code incorrectly assumes
	  that there will be at least one common codec when T.38
	  is also in the SDP answer.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-003.html</url>
      <cvename>CVE-2019-13161</cvename>
    </references>
    <dates>
      <discovery>2019-06-28</discovery>
      <entry>2019-07-12</entry>
    </dates>
  </vuln>

  <vuln vid="a449c604-a43a-11e9-b422-fcaa147e860e">
    <topic>python 3.7 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python37</name>
	<range><lt>3.7.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python changelog:</p>
	<blockquote cite="https://docs.python.org/3.7/whatsnew/changelog.html#python-3-7-4-final">
	  <p>bpo-37463: ssl.match_hostname() no longer accepts IPv4 addresses with additional text
	    after the address and only quad-dotted notation without trailing whitespaces. Some
	    inet_aton() implementations ignore whitespace and all data after whitespace, e.g.'127.0.0.1
	    whatever'.</p>
	  <p>bpo-35907: CVE-2019-9948: Avoid file reading by disallowing local-file:// and
	    local_file:// URL schemes in URLopener().open() and URLopener().retrieve() of
	    urllib.request.</p>
	  <p>bpo-36742: Fixes mishandling of pre-normalization characters in urlsplit().</p>
	  <p>bpo-30458: Address CVE-2019-9740 by disallowing URL paths with embedded whitespace
	    or control characters through into the underlying http client request. Such potentially
	    malicious header injection URLs now cause an http.client.InvalidURL exception to be
	    raised.</p>
	  <p>bpo-33529: Prevent fold function used in email header encoding from entering infinite
	    loop when there are too many non-ASCII characters in a header.</p>
	  <p>bpo-35755: shutil.which() now uses os.confstr("CS_PATH") if available and if the PATH
	    environment variable is not set. Remove also the current directory from posixpath.defpath.
	    On Unix, shutil.which() and the subprocess module no longer search the executable in the
	    current directory if the PATH environment variable is not set.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3.7/whatsnew/changelog.html#python-3-7-4-final</url>
      <cvename>CVE-2019-9740</cvename>
      <cvename>CVE-2019-9948</cvename>
    </references>
    <dates>
      <discovery>2019-03-13</discovery>
      <entry>2019-07-12</entry>
    </dates>
  </vuln>

  <vuln vid="0592f49f-b3b8-4260-b648-d1718762656c">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>68.0_4,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.12</lt></range>
      </package>
      <package>
	<name>seamonkey</name>
	<name>linux-seamonkey</name>
	<range><lt>2.53.0</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.8.0,1</lt></range>
      </package>
      <package>
	<name>linux-firefox</name>
	<range><lt>60.8.0,2</lt></range>
      </package>
      <package>
	<name>libxul</name>
	<name>thunderbird</name>
	<name>linux-thunderbird</name>
	<range><lt>60.8.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-21/">
	  <p>CVE-2019-9811: Sandbox escape via installation of malicious language pack</p>
	  <p>CVE-2019-11711: Script injection within domain through inner window reuse</p>
	  <p>CVE-2019-11712: Cross-origin POST requests can be made with NPAPI plugins by following 308 redirects</p>
	  <p>CVE-2019-11713: Use-after-free with HTTP/2 cached stream</p>
	  <p>CVE-2019-11714: NeckoChild can trigger crash when accessed off of main thread</p>
	  <p>CVE-2019-11729: Empty or malformed p256-ECDH public keys may trigger a segmentation fault</p>
	  <p>CVE-2019-11715: HTML parsing error can contribute to content XSS</p>
	  <p>CVE-2019-11716: globalThis not enumerable until accessed</p>
	  <p>CVE-2019-11717: Caret character improperly escaped in origins</p>
	  <p>CVE-2019-11718: Activity Stream writes unsanitized content to innerHTML</p>
	  <p>CVE-2019-11719: Out-of-bounds read when importing curve25519 private key</p>
	  <p>CVE-2019-11720: Character encoding XSS vulnerability</p>
	  <p>CVE-2019-11721: Domain spoofing through unicode latin 'kra' character</p>
	  <p>CVE-2019-11730: Same-origin policy treats all files in a directory as having the same-origin</p>
	  <p>CVE-2019-11723: Cookie leakage during add-on fetching across private browsing boundaries</p>
	  <p>CVE-2019-11724: Retired site input.mozilla.org has remote troubleshooting permissions</p>
	  <p>CVE-2019-11725: Websocket resources bypass safebrowsing protections</p>
	  <p>CVE-2019-11727: PKCS#1 v1.5 signatures can be used for TLS 1.3</p>
	  <p>CVE-2019-11728: Port scanning through Alt-Svc header</p>
	  <p>CVE-2019-11710: Memory safety bugs fixed in Firefox 68</p>
	  <p>CVE-2019-11709: Memory safety bugs fixed in Firefox 68 and Firefox ESR 60.8</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11709</cvename>
      <cvename>CVE-2019-11710</cvename>
      <cvename>CVE-2019-11711</cvename>
      <cvename>CVE-2019-11712</cvename>
      <cvename>CVE-2019-11713</cvename>
      <cvename>CVE-2019-11714</cvename>
      <cvename>CVE-2019-11715</cvename>
      <cvename>CVE-2019-11716</cvename>
      <cvename>CVE-2019-11717</cvename>
      <cvename>CVE-2019-11718</cvename>
      <cvename>CVE-2019-11719</cvename>
      <cvename>CVE-2019-11720</cvename>
      <cvename>CVE-2019-11721</cvename>
      <cvename>CVE-2019-11723</cvename>
      <cvename>CVE-2019-11724</cvename>
      <cvename>CVE-2019-11725</cvename>
      <cvename>CVE-2019-11727</cvename>
      <cvename>CVE-2019-11728</cvename>
      <cvename>CVE-2019-11729</cvename>
      <cvename>CVE-2019-11730</cvename>
      <cvename>CVE-2019-9811</cvename>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-21/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-22/</url>
    </references>
    <dates>
      <discovery>2019-07-09</discovery>
      <entry>2019-07-09</entry>
      <modified>2019-07-23</modified>
    </dates>
  </vuln>

  <vuln vid="23f65f58-a261-11e9-b444-002590acae31">
    <topic>GnuPG -- denial of service</topic>
    <affects>
      <package>
	<name>gnupg</name>
	<range><lt>2.2.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>From the GnuPG 2.2.17 changelog:</p>
	<blockquote cite="https://dev.gnupg.org/T4606">
	  <p>gpg: Ignore all key-signatures received from keyservers.  This
   change is required to mitigate a DoS due to keys flooded with
   faked key-signatures.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dev.gnupg.org/T4606</url>
      <url>https://dev.gnupg.org/T4607</url>
    </references>
    <dates>
      <discovery>2019-07-03</discovery>
      <entry>2019-07-09</entry>
    </dates>
  </vuln>

  <vuln vid="18ed9650-a1d6-11e9-9b17-fcaa147e860e">
    <topic>python 3.6 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>python36</name>
	<range><lt>3.6.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python changelog:</p>
	<blockquote cite="https://docs.python.org/3.6/whatsnew/changelog.html#python-3-6-9-final">
	  <p>bpo-35907: CVE-2019-9948: Avoid file reading by disallowing local-file://
	    and local_file:// URL schemes in URLopener().open() and URLopener().retrieve()
	    of urllib.request.</p>
	  <p>bpo-36742: Fixes mishandling of pre-normalization characters in urlsplit().</p>
	  <p>bpo-30458: Address CVE-2019-9740 by disallowing URL paths with embedded
	    whitespace or control characters through into the underlying http client
	    request. Such potentially malicious header injection URLs now cause an
	    http.client.InvalidURL exception to be raised.</p>
	  <p>bpo-36216: Changes urlsplit() to raise ValueError when the URL contains
	    characters that decompose under IDNA encoding (NFKC-normalization) into
	    characters that affect how the URL is parsed.</p>
	  <p>bpo-33529: Prevent fold function used in email header encoding from
	    entering infinite loop when there are too many non-ASCII characters in
	    a header.</p>
	  <p>bpo-35121: Don't send cookies of domain A without Domain attribute to
	    domain B when domain A is a suffix match of domain B while using a cookiejar
	    with http.cookiejar.DefaultCookiePolicy policy. Patch by Karthikeyan
	    Singaravelan.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3.6/whatsnew/changelog.html#python-3-6-9-final</url>
      <cvename>CVE-2019-9948</cvename>
      <cvename>CVE-2019-9740</cvename>
    </references>
    <dates>
      <discovery>2019-03-13</discovery>
      <entry>2019-07-08</entry>
    </dates>
  </vuln>

  <vuln vid="3dd46e05-9fb0-11e9-bf65-00012e582166">
    <topic>webkit2-gtk3 -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.24.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The WebKitGTK project reports many vulnerabilities,
	including several arbitrary code execution vulnerabilities.</p>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2019-0002.html</url>
      <cvename>CVE-2019-6201</cvename>
      <cvename>CVE-2019-6251</cvename>
      <cvename>CVE-2019-7285</cvename>
      <cvename>CVE-2019-7292</cvename>
      <cvename>CVE-2019-8503</cvename>
      <cvename>CVE-2019-8506</cvename>
      <cvename>CVE-2019-8515</cvename>
      <cvename>CVE-2019-8518</cvename>
      <cvename>CVE-2019-8523</cvename>
      <cvename>CVE-2019-8524</cvename>
      <cvename>CVE-2019-8535</cvename>
      <cvename>CVE-2019-8536</cvename>
      <cvename>CVE-2019-8544</cvename>
      <cvename>CVE-2019-8551</cvename>
      <cvename>CVE-2019-8558</cvename>
      <cvename>CVE-2019-8559</cvename>
      <cvename>CVE-2019-8563</cvename>
      <cvename>CVE-2019-11070</cvename>
      <url>https://webkitgtk.org/security/WSA-2019-0003.html</url>
      <cvename>CVE-2019-6237</cvename>
      <cvename>CVE-2019-8571</cvename>
      <cvename>CVE-2019-8583</cvename>
      <cvename>CVE-2019-8584</cvename>
      <cvename>CVE-2019-8586</cvename>
      <cvename>CVE-2019-8587</cvename>
      <cvename>CVE-2019-8594</cvename>
      <cvename>CVE-2019-8595</cvename>
      <cvename>CVE-2019-8596</cvename>
      <cvename>CVE-2019-8597</cvename>
      <cvename>CVE-2019-8601</cvename>
      <cvename>CVE-2019-8607</cvename>
      <cvename>CVE-2019-8608</cvename>
      <cvename>CVE-2019-8609</cvename>
      <cvename>CVE-2019-8610</cvename>
      <cvename>CVE-2019-8615</cvename>
      <cvename>CVE-2019-8611</cvename>
      <cvename>CVE-2019-8619</cvename>
      <cvename>CVE-2019-8622</cvename>
      <cvename>CVE-2019-8623</cvename>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-07-06</entry>
    </dates>
  </vuln>

  <vuln vid="3c5a4fe0-9ebb-11e9-9169-fcaa147e860e">
    <topic>mediawiki -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mediawiki131</name>
	<range><lt>1.31.3</lt></range>
      </package>
      <package>
	<name>mediawiki132</name>
	<range><lt>1.32.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mediawiki reports:</p>
	<blockquote cite="https://lists.wikimedia.org/pipermail/mediawiki-announce/2019-June/000230.html">
	  <p>Security fixes:
	    T197279, CVE-2019-12468: Directly POSTing to Special:ChangeEmail would allow
	    for bypassing reauthentication, allowing for potential account takeover.
	    T204729, CVE-2019-12473: Passing invalid titles to the API could cause a DoS
	    by querying the entire `watchlist` table.
	    T207603, CVE-2019-12471: Loading user JavaScript from a non-existent account
	    allows anyone to create the account, and XSS the users' loading that script.
	    T208881: blacklist CSS var().
	    T199540, CVE-2019-12472: It is possible to bypass the limits on IP range
	    blocks (`$wgBlockCIDRLimit`) by using the API.
	    T212118, CVE-2019-12474: Privileged API responses that include whether a
	    recent change has been patrolled may be cached publicly.
	    T209794, CVE-2019-12467: A spammer can use Special:ChangeEmail to send out
	    spam with no rate limiting or ability to block them.
	    T25227, CVE-2019-12466: An account can be logged out without using a token(CRRF)
	    T222036, CVE-2019-12469: Exposed suppressed username or log in Special:EditTags.
	    T222038, CVE-2019-12470: Exposed suppressed log in RevisionDelete page.
	    T221739, CVE-2019-11358: Fix potential XSS in jQuery.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11358</cvename>
      <cvename>CVE-2019-12466</cvename>
      <cvename>CVE-2019-12467</cvename>
      <cvename>CVE-2019-12468</cvename>
      <cvename>CVE-2019-12469</cvename>
      <cvename>CVE-2019-12470</cvename>
      <cvename>CVE-2019-12471</cvename>
      <cvename>CVE-2019-12472</cvename>
      <cvename>CVE-2019-12473</cvename>
      <cvename>CVE-2019-12474</cvename>
      <url>https://lists.wikimedia.org/pipermail/mediawiki-announce/2019-June/000230.html</url>
    </references>
    <dates>
      <discovery>2019-04-23</discovery>
      <entry>2019-07-05</entry>
    </dates>
  </vuln>

  <vuln vid="b79ec16b-9da7-11e9-a0ea-a92fe7db4867">
    <topic>ettercap -- out-of-bound read vulnerability</topic>
    <affects>
      <package>
	<name>ettercap</name>
	<range><lt>0.8.3,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ettercap GitHub issue:</p>
	<blockquote cite="https://github.com/Ettercap/ettercap/issues/782">
	  <p>Etterfilter results in an invalid read of 8 bytes when parsing a crafted file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/Ettercap/ettercap/issues/782</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2017-6430</url>
      <cvename>CVE-2017-6430</cvename>
    </references>
    <dates>
      <discovery>2019-07-01</discovery>
      <entry>2019-07-03</entry>
    </dates>
  </vuln>

  <vuln vid="4ea507d1-9da8-11e9-a759-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>12.0.0</ge><lt>12.0.3</lt></range>
	<range><ge>11.11.0</ge><lt>11.11.5</lt></range>
	<range><ge>8.3.0</ge><lt>11.10.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/07/03/security-release-gitlab-12-dot-0-dot-3-released/">
	  <p>Ability to Write a Note to a Private Snippet</p>
	  <p>Recent Pipeline Information Disclosed to Unauthorised Users</p>
	  <p>Resource Exhaustion Attack</p>
	  <p>Error Caused by Encoded Characters in Comments</p>
	  <p>Authorization Issues in GraphQL</p>
	  <p>Number of Merge Requests was Accessible</p>
	  <p>Enabling One of the Service Templates Could Cause Resource Depletion</p>
	  <p>Broken Access Control for the Content of Personal Snippets</p>
	  <p>Decoding Color Codes Caused Resource Depletion</p>
	  <p>Merge Request Template Name Disclosure</p>
	  <p>SSRF Vulnerability in Project GitHub Integration</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/07/03/security-release-gitlab-12-dot-0-dot-3-released/</url>
      <cvename>CVE-2019-13001</cvename>
      <cvename>CVE-2019-13002</cvename>
      <cvename>CVE-2019-13003</cvename>
      <cvename>CVE-2019-13004</cvename>
      <cvename>CVE-2019-13005</cvename>
      <cvename>CVE-2019-13006</cvename>
      <cvename>CVE-2019-13007</cvename>
      <cvename>CVE-2019-13009</cvename>
      <cvename>CVE-2019-13010</cvename>
      <cvename>CVE-2019-13011</cvename>
      <cvename>CVE-2019-13121</cvename>
    </references>
    <dates>
      <discovery>2019-07-03</discovery>
      <entry>2019-07-03</entry>
    </dates>
  </vuln>

  <vuln vid="3394bc2b-9da4-11e9-951e-14dae9d5a9d2">
    <topic>SDL2_image -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>sdl2_image</name>
	<range><lt>2.0.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>SDL_image developers report:</p>
	<blockquote cite="https://www.libsdl.org/projects/SDL_image/">
	  <p>Fixed a number of security issues:</p>
	  <ul>
	    <li>TALOS-2019-0820</li>
	    <li>TALOS-2019-0821</li>
	    <li>TALOS-2019-0841</li>
	    <li>TALOS-2019-0842</li>
	    <li>TALOS-2019-0843</li>
	    <li>TALOS-2019-0844</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0820</url>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0821</url>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0841</url>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0842</url>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0843</url>
      <url>https://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0844</url>
      <cvename>CVE-2019-5051</cvename>
      <cvename>CVE-2019-5052</cvename>
      <cvename>CVE-2019-5057</cvename>
      <cvename>CVE-2019-5058</cvename>
      <cvename>CVE-2019-5059</cvename>
      <cvename>CVE-2019-5060</cvename>
    </references>
    <dates>
      <discovery>2019-07-02</discovery>
      <entry>2019-07-03</entry>
    </dates>
  </vuln>

  <vuln vid="475f952c-9b29-11e9-a8a5-6805ca0b38e8">
    <topic>irssi -- Use after free when sending SASL login to the server</topic>
    <affects>
      <package>
	<name>irssi</name>
	<range><lt>1.2.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Irssi reports:</p>
	<blockquote cite="https://irssi.org/security/irssi_sa_2019_06.txt">
	  <p>Use after free when sending SASL login to the server found by ilbelkyr. (CWE-416, CWE-825)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://irssi.org/security/irssi_sa_2019_06.txt</url>
      <cvename>CVE-2019-13045</cvename>
    </references>
    <dates>
      <discovery>2019-06-29</discovery>
      <entry>2019-07-01</entry>
    </dates>
  </vuln>

  <vuln vid="b805d7b4-9c0c-11e9-97f0-000c29e96db4">
    <topic>Django -- Incorrect HTTP detection with reverse-proxy connecting via HTTPS</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<range><lt>1.11.22</lt></range>
      </package>
      <package>
	<name>py35-django21</name>
	<name>py36-django21</name>
	<name>py37-django21</name>
	<range><lt>2.1.10</lt></range>
      </package>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<range><lt>2.2.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django security releases issued:</p>
	<blockquote cite="https://www.djangoproject.com/weblog/2019/jul/01/security-releases/">
	  <p>When deployed behind a reverse-proxy connecting to Django via HTTPS,
	    django.http.HttpRequest.scheme would incorrectly detect client requests
	    made via HTTP as using HTTPS. This entails incorrect results for is_secure(),
	    and build_absolute_uri(), and that HTTP requests would not be redirected to
	    HTTPS in accordance with SECURE_SSL_REDIRECT.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-12781</cvename>
      <url>https://www.djangoproject.com/weblog/2019/jul/01/security-releases/</url>
    </references>
    <dates>
      <discovery>2019-07-01</discovery>
      <entry>2019-07-01</entry>
    </dates>
  </vuln>

  <vuln vid="4b6cb45d-881e-447a-a4e0-c97a954ea758">
    <topic>bzip2 -- multiple issues</topic>
    <affects>
      <package>
	<name>bzip2</name>
	<range><lt>1.0.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>bzip2 developers reports:</p>
	<blockquote cite="https://gitlab.com/federicomenaquintero/bzip2/blob/master/NEWS">
	  <p>CVE-2016-3189 - Fix use-after-free in bzip2recover (Jakub Martisko)</p>
	  <p>CVE-2019-12900 - Detect out-of-range nSelectors in corrupted files (Albert Astals Cid).  Found through fuzzing karchive.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://gitlab.com/federicomenaquintero/bzip2/blob/master/NEWS</url>
      <url>https://bugzilla.redhat.com/show_bug.cgi?id=1319648</url>
      <cvename>CVE-2016-3189</cvename>
      <cvename>CVE-2019-12900</cvename>
    </references>
    <dates>
      <discovery>2019-06-23</discovery>
      <entry>2019-06-30</entry>
    </dates>
  </vuln>

  <vuln vid="1c21f6a3-9415-11e9-95ec-6805ca2fa271">
    <topic>powerdns -- multiple vulnerabilities</topic>
    <affects>
      <package>
       <name>powerdns</name>
       <range><lt>4.1.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>PowerDNS Team reports:</p>
       <blockquote cite="https://doc.powerdns.com/authoritative/changelog/4.1.html#change-4.1.10">
	 <p>CVE-2019-10162: An issue has been found in PowerDNS Authoritative Server allowing an authorized user to
	  cause the server to exit by inserting a crafted record in a MASTER type zone under their control. The
	  issue is due to the fact that the Authoritative Server will exit when it runs into a parsing error while
	  looking up the NS/A/AAAA records it is about to use for an outgoing notify.</p>
	 <p>CVE-2019-10163: An issue has been found in PowerDNS Authoritative Server allowing a remote, authorized
	  master server to cause a high CPU load or even prevent any further updates to any slave zone by sending
	  a large number of NOTIFY messages. Note that only servers configured as slaves are affected by this issue.</p>
       </blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/authoritative/changelog/4.1.html#change-4.1.10</url>
      <cvename>CVE-2019-10162</cvename>
      <cvename>CVE-2019-10163</cvename>
    </references>
    <dates>
      <discovery>2019-06-21</discovery>
      <entry>2019-06-21</entry>
    </dates>
  </vuln>

  <vuln vid="5e35cfba-9994-11e9-b07f-df5abf8b84d6">
    <topic>TYPO3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>typo3-8-php71</name>
	<name>typo3-8-php72</name>
	<name>typo3-8-php73</name>
	<range><lt>8.7.27</lt></range>
      </package>
      <package>
	<name>typo3-9-php71</name>
	<name>typo3-9-php72</name>
	<name>typo3-9-php73</name>
	<range><lt>9.5.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>TYPO3 news:</p>
	<blockquote cite="https://typo3.org/article/typo3-958-and-8727-security-releases-published/">
	  <p>Please read the corresponding Security Advisories for details.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://typo3.org/article/typo3-958-and-8727-security-releases-published/</url>
      <url>https://get.typo3.org/release-notes/8.7.27</url>
      <url>https://get.typo3.org/release-notes/9.5.8</url>
      <cvename>CVE-2019-10912</cvename>
      <cvename>CVE-2019-12747</cvename>
      <cvename>CVE-2019-12748</cvename>
    </references>
    <dates>
      <discovery>2019-06-28</discovery>
      <entry>2019-06-28</entry>
    </dates>
  </vuln>

  <vuln vid="245629d4-991e-11e9-82aa-6cc21735f730">
    <topic>PostgreSQL -- Stack-based buffer overflow via setting a password</topic>
    <affects>
      <package>
	<name>postgresql11-server</name>
	<range><lt>11.4</lt></range>
      </package>
      <package>
	<name>postgresql10-server</name>
	<range><lt>10.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PostgreSQL project reports:</p>
	<blockquote cite="https://www.postgresql.org/about/news/1949/">
	  <p>
	    An authenticated user could create a stack-based buffer overflow
	    by changing their own password to a purpose-crafted value. In addition
	    to the ability to crash the PostgreSQL server, this could be further
	    exploited to execute arbitrary code as the PostgreSQL operating system account.
	  </p>
	  <p>
	    Additionally, a rogue server could send a specifically crafted
	    message during the SCRAM authentication process and cause a libpq-enabled client
	    to either crash or execute arbitrary code as the client's operating system account.
	  </p>
	  <p>
	    This issue is fixed by upgrading and restarting your PostgreSQL
	    server as well as your libpq installations. All users running
	    PostgreSQL 10, 11, and 12 beta are encouraged to upgrade as soon as possible.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.postgresql.org/about/news/1949/</url>
      <cvename>CVE-2019-10164</cvename>
    </references>
    <dates>
      <discovery>2019-06-20</discovery>
      <entry>2019-06-27</entry>
    </dates>
  </vuln>

  <vuln vid="6f15730d-94ea-11e9-a83e-641c67a117d8">
    <topic>znc -- privilege escalation</topic>
    <affects>
      <package>
	<name>znc</name>
	<range><lt>1.7.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12816">
	  <p>Modules.cpp in ZNC before 1.7.4-rc1 allows remote authenticated
	    non-admin users to escalate privileges and execute arbitrary
	    code by loading a module with a crafted name.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-12816</cvename>
      <url>https://wiki.znc.in/ChangeLog/1.7.4</url>
    </references>
    <dates>
      <discovery>2019-06-13</discovery>
      <entry>2019-06-22</entry>
    </dates>
  </vuln>

  <vuln vid="49beb00f-a6e1-4a42-93df-9cb14b4c2bee">
    <topic>Mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>thunderbird</name>
	<range><lt>thunderbird-60.7.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-20/">
	  <h1>CVE-2019-11707: Type confusion in Array.pop</h1>
	  <p>A type confusion vulnerability can occur when manipulating
	    JavaScript objects due to issues in Array.pop. This can allow
	    for an exploitable crash. We are aware of targeted attacks in
	    the wild abusing this flaw.</p>
	  <h1>CVE-2019-11708: sandbox escape using Prompt:Open</h1>
	  <p>Insufficient vetting of parameters passed with the
	    Prompt:Open IPC message between child and parent processes can
	    result in the non-sandboxed parent process opening web content
	    chosen by a compromised child process. When combined with
	    additional vulnerabilities this could result in executing
	    arbitrary code on the user's computer.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-20/</url>
      <cvename>CVE-2019-11707</cvename>
      <cvename>CVE-2019-11708</cvename>
    </references>
    <dates>
      <discovery>2019-06-20</discovery>
      <entry>2019-06-21</entry>
    </dates>
  </vuln>

  <vuln vid="39bc2294-ff32-4972-9ecb-b9f40b4ccb74">
    <topic>Mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>67.0.4,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.12</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.7.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-19/">
	  <h1>CVE-2019-11708: sandbox escape using Prompt:Open</h1>
	  <p>Insufficient vetting of parameters passed with the
	    Prompt:Open IPC message between child and parent processes
	    can result in the non-sandboxed parent process opening web
	    content chosen by a compromised child process. When combined
	    with additional vulnerabilities this could result in executing
	    arbitrary code on the user's computer.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-19/</url>
      <cvename>CVE-2019-11708</cvename>
    </references>
    <dates>
      <discovery>2019-06-20</discovery>
      <entry>2019-06-21</entry>
      <modified>2019-07-09</modified>
    </dates>
  </vuln>

  <vuln vid="98f1241f-8c09-4237-ad0d-67fb4158ea7a">
    <topic>Mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>thunderbird</name>
	<range><lt>60.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-17/">
	  <h1>CVE-2019-11703: Heap buffer overflow in icalparser.c</h1>
	  <p>A flaw in Thunderbird's implementation of iCal causes a heap
	    buffer overflow in parser_get_next_char when processing certain
	    email messages, resulting in a potentially exploitable crash.</p>
	  <h1>CVE-2019-11704: Heap buffer overflow in icalvalue.c</h1>
	  <p>A flaw in Thunderbird's implementation of iCal causes a heap
	    buffer overflow in icalmemory_strdup_and_dequote when processing
	    certain email messages, resulting in a potentially exploitable
	    crash.</p>
	  <h1>CVE-2019-11705: Stack buffer overflow in icalrecur.c</h1>
	  <p>A flaw in Thunderbird's implementation of iCal causes a stack
	    buffer overflow in icalrecur_add_bydayrules when processing
	    certain email messages, resulting in a potentially exploitable
	    crash.</p>
	  <h1>CVE-2019-11706: Type confusion in icalproperty.c</h1>
	  <p>A flaw in Thunderbird's implementation of iCal causes a type
	    confusion in icaltimezone_get_vtimezone_properties when
	    processing certain email messages, resulting in a crash.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-17/</url>
      <cvename>CVE-2019-11703</cvename>
      <cvename>CVE-2019-11704</cvename>
      <cvename>CVE-2019-11705</cvename>
      <cvename>CVE-2019-11706</cvename>
    </references>
    <dates>
      <discovery>2019-06-13</discovery>
      <entry>2019-06-21</entry>
    </dates>
  </vuln>

  <vuln vid="5b218581-9372-11e9-8fc4-5404a68ad561">
    <topic>vlc -- Double free in Matroska demuxer</topic>
    <affects>
      <package>
	<name>vlc</name>
	<range><lt>3.0.7.1,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The VLC project reports:</p>
	<blockquote cite="http://git.videolan.org/?p=vlc.git;a=commit;h=81023659c7de5ac2637b4a879195efef50846102">
	  <p>mkv: Fix potential double free</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-12874</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12874</url>
      <url>http://git.videolan.org/?p=vlc.git;a=commit;h=81023659c7de5ac2637b4a879195efef50846102</url>
    </references>
    <dates>
      <discovery>2019-05-20</discovery>
      <entry>2019-06-20</entry>
    </dates>
  </vuln>

  <vuln vid="f2144530-936f-11e9-8fc4-5404a68ad561">
    <topic>vlc -- Buffer overflow vulnerability</topic>
    <affects>
      <package>
	<name>vlc</name>
	<range><lt>3.0.7,4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>zhangyang reports:</p>
	<blockquote cite="https://hackerone.com/reports/484398">
	  <p>The ReadFrame function in the avi.c file uses a variable i_width_bytes,
	    which is obtained directly from the file. It is a signed integer.
	    It does not do a strict check before the memory operation(memmove, memcpy),
	    which may cause a buffer overflow.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5439</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5439</url>
      <url>https://hackerone.com/reports/484398</url>
    </references>
    <dates>
      <discovery>2019-01-23</discovery>
      <entry>2019-06-20</entry>
    </dates>
  </vuln>

  <vuln vid="0cea6e0a-7a39-4dac-b3ec-dbc13d404f76">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>67.0.3,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.11</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.7.1,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-18/">
	  <h1>CVE-2019-11707: Type confusion in Array.pop</h1>
	  <p>A type confusion vulnerability can occur when
	    manipulating JavaScript objects due to issues in
	    Array.pop. This can allow for an exploitable crash. We are
	    aware of targeted attacks in the wild abusing this flaw.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11707</cvename>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-18/</url>
    </references>
    <dates>
      <discovery>2019-06-18</discovery>
      <entry>2019-06-19</entry>
      <modified>2019-06-20</modified>
    </dates>
  </vuln>

  <vuln vid="9c9023ff-9057-11e9-b764-00505632d232">
    <topic>netatalk3 -- remote code execution vulnerability</topic>
    <affects>
      <package>
	<name>netatalk3</name>
	<range><lt>3.1.12,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NIST reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2018-1160">
	  <p>Netatalk before 3.1.12 is vulnerable to an out of bounds write in dsi_opensess.c. This is due to lack of bounds checking on attacker controlled data. A remote unauthenticated attacker can leverage this vulnerability to achieve arbitrary code execution.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2018-1160</url>
      <url>https://medium.com/tenable-techblog/exploiting-an-18-year-old-bug-b47afe54172</url>
    </references>
    <dates>
      <discovery>2018-11-10</discovery>
      <entry>2019-06-16</entry>
    </dates>
  </vuln>

  <vuln vid="82c07dfa-9016-11e9-af2f-712c38aa3e4c">
    <topic>GraphicsMagick -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>GraphicsMagick</name>
	<range><lt>1.3.32,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>GraphicsMagick News:</p>
	<blockquote cite="http://www.graphicsmagick.org/NEWS.html">
	  <p>Read "Security Fixes:" section for details.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://www.graphicsmagick.org/NEWS.html</url>
    </references>
    <dates>
      <discovery>2019-06-15</discovery>
      <entry>2019-06-16</entry>
    </dates>
  </vuln>

  <vuln vid="d4fc4599-8f75-11e9-8d9f-3065ec8fd3ec">
    <topic>chromium -- use after free</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>75.0.3770.90</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2019/06/stable-channel-update-for-desktop_13.html">
	  <p>[961413] High CVE-2019-5842: Use-after-free in Blink. Reported by BUGFENSE Anonymous Bug Bounties https://bugfense.io on 2019-05-09</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://chromereleases.googleblog.com/2019/06/stable-channel-update-for-desktop_13.html</url>
      <cvename>CVE-2019-5842</cvename>
    </references>
    <dates>
      <discovery>2019-05-09</discovery>
      <entry>2019-06-15</entry>
    </dates>
  </vuln>

  <vuln vid="a5681027-8e03-11e9-85f4-6805ca0b3d42">
    <topic>phpMyAdmin -- CSRF vulnerability in login form</topic>
    <affects>
      <package>
	<name>phpMyAdmin</name>
	<name>phpMyAdmin-php56</name>
	<name>phpMyAdmin-php70</name>
	<name>phpMyAdmin-php71</name>
	<name>phpMyAdmin-php72</name>
	<range><lt>4.9.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The phpMyAdmin development team reports:</p>
	<blockquote cite="https://www.phpmyadmin.net/security/PMASA-2019-4/">
	  <h3>Summary</h3>
	  <p>CSRF vulnerability in login form</p>

	  <h3>Description</h3>
	  <p>A vulnerability was found that allows an attacker to
	    trigger a CSRF attack against a phpMyAdmin user. The
	    attacker can trick the user, for instance through a broken
	    <code>&lt;img&gt;</code> tag pointing at the victim's
	    phpMyAdmin database, and the attacker can potentially
	    deliver a payload (such as a specific INSERT or DELETE
	    statement) through the victim.</p>

	  <h3>Severity</h3>
	  <p>We consider this vulnerability to be severe.</p>


	  <h3>Mitigation factor</h3> <p>Only the 'cookie'
	    auth_type is affected; users can temporary use
	    phpMyAdmin's http authentication as a workaround.</p>

	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.phpmyadmin.net/security/PMASA-2019-4/</url>
      <cvename>CVE-2019-12616</cvename>
    </references>
    <dates>
      <discovery>2019-06-04</discovery>
      <entry>2019-06-13</entry>
    </dates>
  </vuln>

  <vuln vid="bbdb9713-8e09-11e9-87bc-002590acae31">
    <topic>Vim/NeoVim -- Security vulnerability</topic>
    <affects>
      <package>
	<name>vim</name>
	<name>vim-console</name>
	<name>vim-tiny</name>
	<range><lt>8.1.1365</lt></range>
      </package>
      <package>
	<name>neovim</name>
	<range><lt>0.3.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Security releases for Vim/NeoVim:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-12735">
	  <p>Sandbox escape allows for arbitrary code execution.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-12735</url>
    </references>
    <dates>
      <discovery>2019-05-22</discovery>
      <entry>2019-06-13</entry>
    </dates>
  </vuln>

  <vuln vid="13960f55-8d35-11e9-9ba0-4c72b94353b5">
    <topic>mybb -- vulnerabilities</topic>
    <affects>
      <package>
	<name>mybb</name>
	<range><lt>1.8.21</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mybb Team reports:</p>
	<blockquote cite="https://blog.mybb.com/2019/06/10/mybb-1-8-21-released-security-maintenance-release/">
	  <p>High risk: Theme import stylesheet name RCE</p>
	  <p>High risk: Nested video MyCode persistent XSS</p>
	  <p>Medium risk: Find Orphaned Attachments reflected XSS</p>
	  <p>Medium risk: Post edit reflected XSS</p>
	  <p>Medium risk: Private Messaging folders SQL injection</p>
	  <p>Low risk: Potential phar deserialization through Upload Path</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.mybb.com/2019/06/10/mybb-1-8-21-released-security-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-06-10</discovery>
      <entry>2019-06-12</entry>
    </dates>
  </vuln>

  <vuln vid="ab099d2c-8c8c-11e9-8ba7-6451062f0f7a">
    <topic>Flash Player -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.207</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb19-30.html">
	  <ul>
	    <li>This update resolves a use-after-free vulnerability that
	      could lead to arbitrary code execution (CVE-2019-7845).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-7845</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb19-30.html</url>
    </references>
    <dates>
      <discovery>2019-06-11</discovery>
      <entry>2019-06-11</entry>
    </dates>
  </vuln>

  <vuln vid="9b8a52fc-89c1-11e9-9ba0-4c72b94353b5">
    <topic>drupal -- Drupal core - Moderately critical</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.67</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/SA-CORE-2019-007">
	  <p>CVE-2019-11831: By-passing protection of Phar Stream Wrapper Interceptor.</p>
	  <p>In order to intercept file invocations like file_exists or stat on compromised Phar archives
	     the base name has to be determined and checked before allowing to be handled by PHP
	     Phar stream handling.
	     The current implementation is vulnerable to path traversal leading to scenarios where the
	     Phar archive to be assessed is not the actual (compromised) file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/SA-CORE-2019-007</url>
    </references>
    <dates>
      <discovery>2019-05-08</discovery>
      <entry>2019-06-08</entry>
    </dates>
  </vuln>

  <vuln vid="45bea6b5-8855-11e9-8d41-97657151f8c2">
    <topic>Exim -- RCE in deliver_message() function</topic>
    <affects>
      <package>
	<name>exim</name>
	<range><ge>4.87</ge><lt>4.92</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Exim team and Qualys report:</p>
	<blockquote cite="https://www.exim.org/static/doc/security/CVE-2019-10149.txt">
	  <p>
	    We received a report of a possible remote exploit.  Currently there is no evidence of an active use of this exploit.
	  </p>
	  <p>
	    A patch exists already, is being tested, and backported to all
	    versions we released since (and including) 4.87.
	  </p>
	  <p>
	    The severity depends on your configuration.  It depends on how close to
	    the standard configuration your Exim runtime configuration is. The
	    closer the better.
	  </p>
	  <p>
	    Exim 4.92 is not vulnerable.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-10149</cvename>
      <url>https://www.exim.org/static/doc/security/CVE-2019-10149.txt</url>
    </references>
    <dates>
      <discovery>2019-05-27</discovery>
      <entry>2019-06-06</entry>
    </dates>
  </vuln>

  <vuln vid="ffc73e87-87f0-11e9-ad56-fcaa147e860e">
    <topic>Django -- AdminURLFieldWidget XSS</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<range><lt>1.11.21</lt></range>
      </package>
      <package>
	<name>py35-django21</name>
	<name>py36-django21</name>
	<name>py37-django21</name>
	<range><lt>2.1.9</lt></range>
      </package>
      <package>
	<name>py35-django22</name>
	<name>py36-django22</name>
	<name>py37-django22</name>
	<range><lt>2.2.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Django security releases issued:</p>
	<blockquote cite="https://www.djangoproject.com/weblog/2019/jun/03/security-releases/">
	  <p>The clickable "Current URL" link generated by AdminURLFieldWidget displayed the
	    provided value without validating it as a safe URL. Thus, an unvalidated value stored
	    in the database, or a value provided as a URL query parameter payload, could result
	    in an clickable JavaScript link..</p>
	  <p>jQuery before 3.4.0, mishandles jQuery.extend(true, {}, ...) because of Object.prototype
	    pollution. If an unsanitized source object contained an enumerable __proto__ property,
	    it could extend the native Object.prototype.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-12308</cvename>
      <cvename>CVE-2019-11358</cvename>
      <url>https://www.djangoproject.com/weblog/2019/jun/03/security-releases/</url>
    </references>
    <dates>
      <discovery>2019-06-03</discovery>
      <entry>2019-06-06</entry>
    </dates>
  </vuln>

  <vuln vid="4091069e-860b-11e9-a05f-001b217b3468">
    <topic>Gitlab -- Multiple Vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.11.0</ge><lt>11.11.1</lt></range>
	<range><ge>11.10.0</ge><lt>11.10.5</lt></range>
	<range><ge>6.8.0</ge><lt>11.9.12</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/06/03/security-release-gitlab-11-dot-11-dot-1-released/">
	  <p>Remote Command Execution Vulnerability on Repository Download Feature</p>
	  <p>Confidential Issue Titles Revealed to Restricted Users on Unsubscribe</p>
	  <p>Disclosure of Milestone Metadata through the Search API</p>
	  <p>Private Project Discovery via Comment Links</p>
	  <p>Metadata of Confidential Issues Disclosed to Restricted Users</p>
	  <p>Mandatory External Authentication Provider Sign-In Restrictions Bypass</p>
	  <p>Internal Projects Allowed to Be Created on in Private Groups</p>
	  <p>Server-Side Request Forgery Through DNS Rebinding</p>
	  <p>Stored Cross-Site Scripting on Wiki Pages</p>
	  <p>Stored Cross-Site Scripting on Notes</p>
	  <p>Repository Password Disclosed on Import Error Page</p>
	  <p>Protected Branches Restriction Rules Bypass</p>
	  <p>Stored Cross-Site Scripting Vulnerability on Child Epics</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/06/03/security-release-gitlab-11-dot-11-dot-1-released/</url>
      <cvename>CVE-2019-12430</cvename>
      <cvename>CVE-2019-12432</cvename>
      <cvename>CVE-2019-12431</cvename>
      <cvename>CVE-2019-12434</cvename>
      <cvename>CVE-2019-12429</cvename>
      <cvename>CVE-2019-12428</cvename>
      <cvename>CVE-2019-12433</cvename>
      <cvename>CVE-2019-12443</cvename>
      <cvename>CVE-2019-12444</cvename>
      <cvename>CVE-2019-12445</cvename>
      <cvename>CVE-2019-12446</cvename>
      <cvename>CVE-2019-12441</cvename>
      <cvename>CVE-2019-12442</cvename>
    </references>
    <dates>
      <discovery>2019-06-03</discovery>
      <entry>2019-06-03</entry>
    </dates>
  </vuln>

  <vuln vid="ada8db8a-8471-11e9-8170-0050562a4d7b">
    <topic>buildbot -- OAuth Authentication Vulnerability</topic>
    <affects>
      <package>
	<name>py27-buildbot</name>
	<name>py35-buildbot</name>
	<name>py36-buildbot</name>
	<name>py37-buildbot</name>
	<range><lt>2.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication">
	  <p>Buildbot accepted user-submitted authorization token from OAuth and used
	  it to authenticate user.</p>
	  <p>The vulnerability can lead to malicious attackers to authenticate as legitimate users
	  of a Buildbot instance without knowledge of the victim's login credentials on certain
	  scenarios.</p>
	  <p>If an attacker has an application authorized to access data of another user at the
	  same Identity Provider as the used by the Buildbot instance, then he can acquire a token
	  to access the data of that user, supply the token to the Buildbot instance and successfully
	  login as the victim.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/buildbot/buildbot/wiki/OAuth-vulnerability-in-using-submitted-authorization-token-for-authentication</url>
      <url>https://github.com/buildbot/buildbot/pull/4763</url>
      <cvename>CVE-2019-12300</cvename>
    </references>
    <dates>
      <discovery>2019-05-07</discovery>
      <entry>2019-06-01</entry>
    </dates>
  </vuln>

  <vuln vid="177fa455-48fc-4ded-ba1b-9975caa7f62a">
    <topic>bro -- Unsafe integer conversions can cause unintentional code paths to be executed</topic>
    <affects>
      <package>
	<name>bro</name>
	<range><lt>2.6.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jon Siwek of Corelight reports:</p>
	<blockquote cite="https://raw.githubusercontent.com/zeek/zeek/bb979702cf9a2fa67b8d1a1c7f88d0b56c6af104/NEWS">
	  <p>The following Denial of Service vulnerabilities are addressed:</p>
	  <ul>
	  <li>Integer type mismatches in BinPAC-generated parser code
	  and Bro analyzer code may allow for crafted packet data
	  to cause unintentional code paths in the analysis logic
	  to be taken due to unsafe integer conversions causing the
	  parser and analysis logic to each expect different fields
	  to have been parsed.  One such example, reported by Maksim
	  Shudrak, causes the Kerberos analyzer to dereference a
	  null pointer.  CVE-2019-12175 was assigned for this issue.</li>

	  <li>The Kerberos parser allows for several fields to be left
	  uninitialized, but they were not marked with an &amp;optional
	  attribute and several usages lacked existence checks.
	  Crafted packet data could potentially cause an attempt
	  to access such uninitialized fields, generate a runtime
	  error/exception, and leak memory.  Existence checks and
	  &amp;optional attributes have been added to the relevent
	  Kerberos fields.</li>

	  <li>BinPAC-generated protocol parsers commonly contain fields
	  whose length is derived from other packet input, and for
	  those that allow for incremental parsing, BinPAC did not
	  impose a limit on how large such a field could grow,
	  allowing for remotely-controlled packet data to cause
	  growth of BinPAC's flowbuffer bounded only by the numeric
	  limit of an unsigned 64-bit integer, leading to memory
	  exhaustion.  There is now a generalized limit for how
	  large flowbuffers are allowed to grow, tunable by setting
	  "BinPAC::flowbuffer_capacity_max".</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2017-12175</cvename>
    </references>
    <dates>
      <discovery>2019-05-29</discovery>
      <entry>2019-05-31</entry>
    </dates>
  </vuln>

  <vuln vid="183d700e-ec70-487e-a9c4-632324afa934">
    <topic>ImageMagick -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>ImageMagick7</name>
	<range><lt>7.0.8.47</lt></range>
      </package>
      <package>
	<name>ImageMagick7-nox11</name>
	<range><lt>7.0.8.47</lt></range>
      </package>
      <package>
	<name>ImageMagick6</name>
	<range><lt>6.9.10.47,1</lt></range>
      </package>
      <package>
	<name>ImageMagick6-nox11</name>
	<range><lt>6.9.10.47,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>cvedetails.com reports:</p>
	<blockquote cite="https://www.cvedetails.com/vulnerability-list/vendor_id-1749/Imagemagick.html">
	  <p>CVE-2019-7175: In ImageMagick before 7.0.8-25, some memory leaks exist in DecodeImage in coders/pcd.c.</p>
	  <p>CVE-2019-7395: In ImageMagick before 7.0.8-25, a memory leak exists in WritePSDChannel in coders/psd.c.</p>
	  <p>CVE-2019-7396: In ImageMagick before 7.0.8-25, a memory leak exists in ReadSIXELImage in coders/sixel.c.</p>
	  <p>CVE-2019-7397: In ImageMagick before 7.0.8-25 and GraphicsMagick through 1.3.31, several memory leaks exist in WritePDFImage in coders/pdf.c.</p>
	  <p>CVE-2019-7398: In ImageMagick before 7.0.8-25, a memory leak exists in WriteDIBImage in coders/dib.c.</p>
	  <p>CVE-2019-9956: In ImageMagick 7.0.8-35 Q16, there is a stack-based buffer overflow in the function PopHexPixel of coders/ps.c, which allows an attacker to cause a denial of service or code execution via a crafted image file.</p>
	  <p>CVE-2019-10131: An off-by-one read vulnerability was discovered in ImageMagick before version 7.0.7-28 in the formatIPTCfromBuffer function in coders/meta.c. A local attacker may use this flaw to read beyond the end of the buffer or to crash the program.</p>
	  <p>CVE-2019-10649: In ImageMagick 7.0.8-36 Q16, there is a memory leak in the function SVGKeyValuePairs of coders/svg.c, which allows an attacker to cause a denial of service via a crafted image file.</p>
	  <p>CVE-2019-10650: In ImageMagick 7.0.8-36 Q16, there is a heap-based buffer over-read in the function WriteTIFFImage of coders/tiff.c, which allows an attacker to cause a denial of service or information disclosure via a crafted image file.</p>
	  <p>CVE-2019-10714: LocaleLowercase in MagickCore/locale.c in ImageMagick before 7.0.8-32 allows out-of-bounds access, leading to a SIGSEGV.</p>
	  <p>CVE-2019-11470: The cineon parsing component in ImageMagick 7.0.8-26 Q16 allows attackers to cause a denial-of-service (uncontrolled resource consumption) by crafting a Cineon image with an incorrect claimed image size. This occurs because ReadCINImage in coders/cin.c lacks a check for insufficient image data in a file.</p>
	  <p>CVE-2019-11472: ReadXWDImage in coders/xwd.c in the XWD image parsing component of ImageMagick 7.0.8-41 Q16 allows attackers to cause a denial-of-service (divide-by-zero error) by crafting an XWD image file in which the header indicates neither LSB first nor MSB first.</p>
	  <p>CVE-2019-11597: In ImageMagick 7.0.8-43 Q16, there is a heap-based buffer over-read in the function WriteTIFFImage of coders/tiff.c, which allows an attacker to cause a denial of service or possibly information disclosure via a crafted image file.</p>
	  <p>CVE-2019-11598: In ImageMagick 7.0.8-40 Q16, there is a heap-based buffer over-read in the function WritePNMImage of coders/pnm.c, which allows an attacker to cause a denial of service or possibly information disclosure via a crafted image file. This is related to SetGrayscaleImage in MagickCore/quantize.c.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.cvedetails.com/vulnerability-list/vendor_id-1749/Imagemagick.html</url>
      <cvename>CVE-2019-7175</cvename>
      <cvename>CVE-2019-7395</cvename>
      <cvename>CVE-2019-7396</cvename>
      <cvename>CVE-2019-7397</cvename>
      <cvename>CVE-2019-7398</cvename>
      <cvename>CVE-2019-9956</cvename>
      <cvename>CVE-2019-10131</cvename>
      <cvename>CVE-2019-10649</cvename>
      <cvename>CVE-2019-10650</cvename>
      <cvename>CVE-2019-10714</cvename>
      <cvename>CVE-2019-11470</cvename>
      <cvename>CVE-2019-11472</cvename>
      <cvename>CVE-2019-11597</cvename>
      <cvename>CVE-2019-11598</cvename>
    </references>
    <dates>
      <discovery>2019-03-07</discovery>
      <entry>2019-05-30</entry>
      <modified>2019-06-17</modified>
    </dates>
  </vuln>

  <vuln vid="10fd731c-8088-11e9-b6ae-001871ec5271">
    <topic>cyrus-imapd -- buffer overrun in httpd</topic>
    <affects>
      <package>
	<name>cyrus-imapd30</name>
	<range><ge>3.0.0</ge><lt>3.0.10</lt></range>
      </package>
      <package>
	<name>cyrus-imapd25</name>
	<range><ge>2.5.0</ge><lt>2.5.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cyrus IMAP 3.0.10 Release Notes states:</p>
	<blockquote cite="https://www.cyrusimap.org/imap/download/release-notes/3.0/x/3.0.10.html">
	  <p>Fixed CVE-2019-11356: buffer overrun in httpd</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-11356</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11356</url>
    </references>
    <dates>
      <discovery>2019-04-19</discovery>
      <entry>2019-05-27</entry>
    </dates>
  </vuln>

  <vuln vid="3ba87032-7fbd-11e9-8a5f-c85b76ce9b5a">
    <topic>serendipity -- XSS</topic>
    <affects>
      <package>
	<name>serendipity</name>
	<range><lt>2.1.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11870">
	  <p>Serendipity before 2.1.5 has XSS via EXIF data that is mishandled in the templates/2k11/admin/media_choose.tpl Editor Preview feature or the templates/2k11/admin/media_items.tpl Media Library feature.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.s9y.org/archives/282-Serendipity-2.1.5-released.html</url>
      <cvename>CVE-2019-11870</cvename>
    </references>
    <dates>
      <discovery>2019-05-01</discovery>
      <entry>2019-05-26</entry>
    </dates>
  </vuln>

  <vuln vid="36b905ad-7fbb-11e9-8a5f-c85b76ce9b5a">
    <topic>sqlite3 -- use after free</topic>
    <affects>
      <package>
	<name>sqlite3</name>
	<range><eq>3.26.0</eq></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5018">
	  <p>An exploitable use after free vulnerability exists in the window function functionality of Sqlite3 3.26.0. A specially crafted SQL command can cause a use after free vulnerability, potentially resulting in remote code execution. An attacker can send a malicious SQL command to trigger this vulnerability.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://talosintelligence.com/vulnerability_reports/TALOS-2019-0777</url>
      <cvename>CVE-2019-5018</cvename>
    </references>
    <dates>
      <discovery>2019-05-09</discovery>
      <entry>2019-05-26</entry>
    </dates>
  </vuln>

  <vuln vid="3b903bf3-7f94-11e9-8a5f-c85b76ce9b5a">
    <topic>suricata -- buffer over-read</topic>
    <affects>
      <package>
	<name>suricata</name>
	<range><lt>4.1.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10053">
	  <p>An issue was discovered in Suricata 4.1.x before 4.1.4. If the input of the function SSHParseBanner is composed only of a \n character, then the program runs into a heap-based buffer over-read. This occurs because the erroneous search for \r results in an integer underflow.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://suricata-ids.org/2019/04/30/suricata-4-1-4-released/</url>
      <cvename>CVE-2019-10053</cvename>
    </references>
    <dates>
      <discovery>2019-03-15</discovery>
      <entry>2019-05-26</entry>
      <modified>2019-05-26</modified>
    </dates>
  </vuln>

  <vuln vid="dd343a2b-7ee7-11e9-a290-8ddc52868fa9">
    <topic>curl -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><ge>7.19.4</ge><lt>7.65.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>curl security problems:</p>
	<blockquote cite="https://curl.haxx.se/docs/security.html">
	  <p>CVE-2019-5435: Integer overflows in curl_url_set()</p>
	  <p>libcurl contains two integer overflows in the curl_url_set()
	    function that if triggered, can lead to a too small buffer
	    allocation and a subsequent heap buffer overflow.</p>
	  <p>The flaws only exist on 32 bit architectures and require
	    excessive string input lengths.</p>
	  <p>CVE-2019-5436: TFTP receive buffer overflow</p>
	  <p>libcurl contains a heap buffer overflow in the function
	    (tftp_receive_packet()) that recevives data from a TFTP server. It
	    calls recvfrom() with the default size for the buffer rather than
	    with the size that was used to allocate it. Thus, the content that
	    might overwrite the heap memory is entirely controlled by the server.</p>
	  <p>The flaw exists if the user selects to use a "blksize" of 504 or
	    smaller (default is 512). The smaller size that is used, the larger
	    the possible overflow becomes.</p>
	  <p>Users chosing a smaller size than default should be rare as the
	    primary use case for changing the size is to make it larger.</p>
	  <p>It is rare for users to use TFTP across the Internet. It is most
	    commonly used within local networks.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.haxx.se/docs/security.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-5435.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-5436.html</url>
      <cvename>CVE-2019-5435</cvename>
      <cvename>CVE-2019-5436</cvename>
    </references>
    <dates>
      <discovery>2019-05-22</discovery>
      <entry>2019-05-25</entry>
      <modified>2019-05-26</modified>
    </dates>
  </vuln>

  <vuln vid="8d2af843-7d8e-11e9-8464-c85b76ce9b5a">
    <topic>OCaml -- Multiple Security Vulnerabilities</topic>
    <affects>
      <package>
	<name>ocaml</name>
	<range><lt>4.03.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>MITRE reports:</p>
	<blockquote cite="INSERT URL HERE">
	  <p>OCaml before 4.03.0 does not properly handle sign extensions, which allows remote attackers to conduct buffer overflow attacks or obtain sensitive information as demonstrated by a long string to the String.copy function.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2015-8869</url>
      <url>https://github.com/ocaml/ocaml/commit/659615c7b100a89eafe6253e7a5b9d84d0e8df74#diff-a97df53e3ebc59bb457191b496c90762</url>
      <cvename>CVE-2015-8869</cvename>
    </references>
    <dates>
      <discovery>2016-06-13</discovery>
      <entry>2019-05-23</entry>
      <modified>2019-05-26</modified>
    </dates>
  </vuln>

  <vuln vid="44b6dfbf-4ef7-4d52-ad52-2b1b05d81272">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>67.0,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.10</lt></range>
      </package>
      <package>
	<name>seamonkey</name>
	<name>linux-seamonkey</name>
	<range><lt>2.53.0</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.7.0,1</lt></range>
      </package>
      <package>
	<name>linux-firefox</name>
	<range><lt>60.7.0,2</lt></range>
      </package>
      <package>
	<name>libxul</name>
	<name>thunderbird</name>
	<name>linux-thunderbird</name>
	<range><lt>60.7.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-13/">
	  <p>CVE-2019-9815: Disable hyperthreading on content JavaScript threads on macOS</p>
	  <p>CVE-2019-9816: Type confusion with object groups and UnboxedObjects</p>
	  <p>CVE-2019-9817: Stealing of cross-domain images using canvas</p>
	  <p>CVE-2019-9818: Use-after-free in crash generation server</p>
	  <p>CVE-2019-9819: Compartment mismatch with fetch API</p>
	  <p>CVE-2019-9820: Use-after-free of ChromeEventHandler by DocShell</p>
	  <p>CVE-2019-9821: Use-after-free in AssertWorkerThread</p>
	  <p>CVE-2019-11691: Use-after-free in XMLHttpRequest</p>
	  <p>CVE-2019-11692: Use-after-free removing listeners in the event listener manager</p>
	  <p>CVE-2019-11693: Buffer overflow in WebGL bufferdata on Linux</p>
	  <p>CVE-2019-7317: Use-after-free in png_image_free of libpng library</p>
	  <p>CVE-2019-11694: Uninitialized memory memory leakage in Windows sandbox</p>
	  <p>CVE-2019-11695: Custom cursor can render over user interface outside of web content</p>
	  <p>CVE-2019-11696: Java web start .JNLP files are not recognized as executable files for download prompts</p>
	  <p>CVE-2019-11697: Pressing key combinations can bypass installation prompt delays and install extensions</p>
	  <p>CVE-2019-11698: Theft of user history data through drag and drop of hyperlinks to and from bookmarks</p>
	  <p>CVE-2019-11700: res: protocol can be used to open known local files</p>
	  <p>CVE-2019-11699: Incorrect domain name highlighting during page navigation</p>
	  <p>CVE-2019-11701: webcal: protocol default handler loads vulnerable web page</p>
	  <p>CVE-2019-9814: Memory safety bugs fixed in Firefox 67</p>
	  <p>CVE-2019-9800: Memory safety bugs fixed in Firefox 67 and Firefox ESR 60.7</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9815</cvename>
      <cvename>CVE-2019-9816</cvename>
      <cvename>CVE-2019-9817</cvename>
      <cvename>CVE-2019-9818</cvename>
      <cvename>CVE-2019-9819</cvename>
      <cvename>CVE-2019-9820</cvename>
      <cvename>CVE-2019-9821</cvename>
      <cvename>CVE-2019-11691</cvename>
      <cvename>CVE-2019-11692</cvename>
      <cvename>CVE-2019-11693</cvename>
      <cvename>CVE-2019-7317</cvename>
      <cvename>CVE-2019-11694</cvename>
      <cvename>CVE-2019-11695</cvename>
      <cvename>CVE-2019-11696</cvename>
      <cvename>CVE-2019-11697</cvename>
      <cvename>CVE-2019-11698</cvename>
      <cvename>CVE-2019-11700</cvename>
      <cvename>CVE-2019-11699</cvename>
      <cvename>CVE-2019-11701</cvename>
      <cvename>CVE-2019-9814</cvename>
      <cvename>CVE-2019-9800</cvename>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-13/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-14/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-15/</url>
    </references>
    <dates>
      <discovery>2019-05-21</discovery>
      <entry>2019-05-22</entry>
      <modified>2019-07-23</modified>
    </dates>
  </vuln>

  <vuln vid="793a0072-7822-11e9-81e2-005056a311d1">
    <topic>samba -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>samba46</name>
	<range><le>4.6.16</le></range>
      </package>
      <package>
	<name>samba47</name>
	<range><le>4.7.12</le></range>
      </package>
      <package>
	<name>samba48</name>
	<range><lt>4.8.12</lt></range>
      </package>
      <package>
	<name>samba49</name>
	<range><lt>4.9.8</lt></range>
      </package>
      <package>
	<name>samba410</name>
	<range><lt>4.10.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The samba project reports:</p>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2018-16860.html">
	  <p>The checksum validation in the S4U2Self handler in the embedded Heimdal KDC
	  did not first confirm that the checksum was keyed, allowing replacement of the
	  requested target (client) principal</p>
	</blockquote>
	<blockquote cite="https://www.samba.org/samba/security/CVE-2019-3880.html">
	  <p>Authenticated users with write permission can trigger a symlink traversal to write
	     or detect files outside the Samba share.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.samba.org/samba/security/CVE-2018-16860.html</url>
      <cvename>CVE-2018-16860</cvename>
      <url>https://www.samba.org/samba/security/CVE-2019-3880.html</url>
      <cvename>CVE-2019-3880</cvename>
    </references>
    <dates>
      <discovery>2019-05-14</discovery>
      <entry>2019-05-14</entry>
    </dates>
  </vuln>

  <vuln vid="37528379-76a8-11e9-a4fd-00012e582166">
    <topic>Rust -- violation of Rust's safety guarantees</topic>
    <affects>
      <package>
	<name>rust</name>
	<range><ge>1.34.0</ge><lt>1.34.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Sean McArthur reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-12083">
	  <p>
	    The Rust Programming Language Standard Library 1.34.x
	    before 1.34.2 contains a stabilized method which, if
	    overridden, can violate Rust's safety guarantees and
	    cause memory unsafety.  If the Error::type_id method
	    is overridden then any type can be safely cast to any
	    other type, causing memory safety vulnerabilities in
	    safe code (e.g., out-of-bounds write or read).  Code
	    that does not manually implement Error::type_id is
	    unaffected.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.rust-lang.org/2019/05/13/Security-advisory.html</url>
      <cvename>CVE-2019-12083</cvename>
    </references>
    <dates>
      <discovery>2019-05-09</discovery>
      <entry>2019-05-15</entry>
    </dates>
  </vuln>

  <vuln vid="a99923a9-768c-11e9-885a-6451062f0f7a">
    <topic>Flash Player -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.192</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb19-26.html">
	  <ul>
	    <li>This update resolves a use-after-free vulnerability that
	      could lead to arbitrary code execution (CVE-2019-7837).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-7837</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb19-26.html</url>
    </references>
    <dates>
      <discovery>2019-05-14</discovery>
      <entry>2019-05-14</entry>
    </dates>
  </vuln>

  <vuln vid="c2d1693b-73cb-11e9-a1c7-b499baebfeaf">
    <topic>PHP -- Multiple vulnerabilities in EXIF module</topic>
    <affects>
      <package>
	<name>php71-exif</name>
	<range><lt>7.1.28</lt></range>
      </package>
      <package>
	<name>php72-exif</name>
	<range><lt>7.2.17</lt></range>
      </package>
      <package>
	<name>php73-exif</name>
	<range><lt>7.3.4</lt></range>
      </package>

    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PHP project reports:</p>
	<blockquote cite="https://www.php.net/ChangeLog-7.php">
	  <p>Heap-buffer-overflow in php_ifd_get32s (CVE-2019-11034)</p>
	  <p>Heap-buffer-overflow in exif_iif_add_value (CVE-2019-11035)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.php.net/ChangeLog-7.php</url>
      <cvename>CVE-2019-11034</cvename>
      <cvename>CVE-2019-11035</cvename>
    </references>
    <dates>
      <discovery>2019-04-04</discovery>
      <entry>2019-05-11</entry>
    </dates>
  </vuln>

  <vuln vid="065890c3-725e-11e9-b0e1-6cc21735f730">
    <topic>PostgreSQL -- Selectivity estimators bypass row security policies</topic>
    <affects>
      <package>
	<name>postgresql11-server</name>
	<range><lt>11.3</lt></range>
      </package>
      <package>
	<name>postgresql10-server</name>
	<range><lt>10.8</lt></range>
      </package>
      <package>
	<name>postgresql96-server</name>
	<range><lt>9.6.13</lt></range>
      </package>
      <package>
	<name>postgresql95-server</name>
	<range><lt>9.5.17</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PostgreSQL project reports:</p>
	<blockquote cite="https://www.postgresql.org/about/news/1939/">
	  <p>
	    PostgreSQL maintains statistics for tables by sampling
	    data available in columns; this data is consulted during
	    the query planning process. Prior to this release, a user
	    able to execute SQL queries with permissions to read a
	    given column could craft a leaky operator that could
	    read whatever data had been sampled from that column.
	    If this happened to include values from rows that the user
	    is forbidden to see by a row security policy, the user
	    could effectively bypass the policy. This is fixed by only
	    allowing a non-leakproof operator to use this data if
	    there are no relevant row security policies for the table.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.postgresql.org/about/news/1939/</url>
      <cvename>CVE-2019-10130</cvename>
    </references>
    <dates>
      <discovery>2019-05-09</discovery>
      <entry>2019-05-09</entry>
    </dates>
  </vuln>

  <vuln vid="e66a5440-7258-11e9-b0e1-6cc21735f730">
    <topic>PostgreSQL -- Memory disclosure in partition routing</topic>
    <affects>
      <package>
	<name>postgresql11-server</name>
	<range><lt>11.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PostgreSQL project reports:</p>
	<blockquote cite="https://www.postgresql.org/about/news/1939/">
	  <p>
	    Prior to this release, a user running PostgreSQL 11 can read
	    arbitrary bytes of server memory by executing a purpose-crafted
	    INSERT statement to a partitioned table.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.postgresql.org/about/news/1939/</url>
      <cvename>CVE-2019-10129</cvename>
    </references>
    <dates>
      <discovery>2019-05-09</discovery>
      <entry>2019-05-09</entry>
    </dates>
  </vuln>

  <vuln vid="a1de4ae9-6fda-11e9-9ba0-4c72b94353b5">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.8.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/04/gitea-1.8.0-is-released">
	  <p>This release contains two new security fixes which cannot be backported
	    to the 1.7.0 branch, so it is recommended to update to this version.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/04/gitea-1.8.0-is-released/</url>
    </references>
    <dates>
      <discovery>2019-04-21</discovery>
      <entry>2019-05-06</entry>
    </dates>
  </vuln>

  <vuln vid="3df5a920-6edc-11e9-a44b-0050562a4d7b">
    <topic>comms/hylafax -- Malformed fax sender remote code execution in JPEG support</topic>
    <affects>
      <package>
	<name>hylafax</name>
	<range><lt>6.0.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="ftp://ftp.hylafax.org/security/CVE-2018-17141.html">
	  <p>A malicious sender that sets both JPEG and MH,MR,MMR or JBIG in
	     the same DCS signal or sends a large JPEG page could lead to remote code execution.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-17141</cvename>
      <url>ftp://ftp.hylafax.org/security/CVE-2018-17141.html</url>
      <url>https://www.x41-dsec.de/lab/advisories/x41-2018-008-hylafax/</url>
      <url>http://bugs.hylafax.org/show_bug.cgi?id=974</url>
      <url>http://git.hylafax.org/HylaFAX?a=commit;h=c6cac8d8cd0dbe313689ba77023e12bc5b3027be</url>
    </references>
    <dates>
      <discovery>2018-08-24</discovery>
      <entry>2019-05-05</entry>
    </dates>
  </vuln>

  <vuln vid="4faac805-6be0-11e9-a685-001b217b3468">
    <topic>Gitlab -- Information Disclosure</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.10.0</ge><lt>11.10.3</lt></range>
	<range><ge>11.9.0</ge><lt>11.9.11</lt></range>
	<range><ge>11.8.0</ge><lt>11.8.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/04/30/security-release-gitlab-11-dot-10-dot-3-released/">
	  <p>Information Disclosure with Limited Scope Token</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/04/30/security-release-gitlab-11-dot-10-dot-3-released/</url>
      <cvename>CVE-2019-11605</cvename>
    </references>
    <dates>
      <discovery>2019-04-30</discovery>
      <entry>2019-05-01</entry>
    </dates>
  </vuln>

  <vuln vid="3f98ccb3-6b8a-11e9-9b5c-a4badb296695">
    <topic>Dovecot -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><ge>2.3.0</ge><lt>2.3.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/list/dovecot-news/2019-April/000409.html">
	  <p>Submission-login crashes with signal 11 due to null pointer access when authentication is aborted by disconnecting. This can lead to denial-of-service attack by persistent attacker(s).</p>
	</blockquote>
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/list/dovecot-news/2019-April/000410.html">
	  <p>Submission-login crashes when authentication is started over TLS secured channel and invalid authentication message is sent. This can lead to denial-of-service attack by persistent attacker(s).</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/list/dovecot-news/2019-April/000409.html</url>
      <cvename>CVE-2019-11494</cvename>
      <url>https://dovecot.org/list/dovecot-news/2019-April/000410.html</url>
      <cvename>CVE-2019-11499</cvename>
    </references>
    <dates>
      <discovery>2019-03-11</discovery>
      <entry>2019-04-30</entry>
    </dates>
  </vuln>

  <vuln vid="1138b39e-6abb-11e9-a685-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.10.0</ge><lt>11.10.2</lt></range>
	<range><ge>11.9.0</ge><lt>11.9.10</lt></range>
	<range><ge>6.0.0</ge><lt>11.8.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/04/29/security-release-gitlab-11-dot-10-dot-2-released/">
	  <p>Moving an Issue to Private Repo Leaks Project Namespace</p>
	  <p>Notification Emails Sent to Restricted Users</p>
	  <p>Unauthorized Comments on Confidential Issues</p>
	  <p>Merge Request Approval Count Inflation</p>
	  <p>Unsanitized Branch Names on New Merge Request Notification Emails</p>
	  <p>Improper Sanitation of Credentials in Gitaly</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/04/29/security-release-gitlab-11-dot-10-dot-2-released/</url>
      <cvename>CVE-2019-11545</cvename>
      <cvename>CVE-2019-11544</cvename>
      <cvename>CVE-2019-11548</cvename>
      <cvename>CVE-2019-11546</cvename>
      <cvename>CVE-2019-11547</cvename>
      <cvename>CVE-2019-11549</cvename>
    </references>
    <dates>
      <discovery>2019-04-29</discovery>
      <entry>2019-04-29</entry>
    </dates>
  </vuln>

  <vuln vid="5536ea5f-6814-11e9-a8f7-0050562a4d7b">
    <topic>buildbot -- CRLF injection in Buildbot login and logout redirect code</topic>
    <affects>
      <package>
	<name>py27-buildbot</name>
	<name>py35-buildbot</name>
	<name>py36-buildbot</name>
	<name>py37-buildbot</name>
	<range><lt>1.8.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://github.com/buildbot/buildbot/wiki/CRLF-injection-in-Buildbot-login-and-logout-redirect-code">
	  <p>A CRLF can be injected in Location header of /auth/login and /auth/logout
	    This is due to lack of input validation in the buildbot redirection code.
	  </p>
	  <p>It was not found a way to impact Buildbot product own security through
	    this vulnerability, but it could be used to compromise other sites
	    hosted on the same domain as Buildbot.

	     - cookie injection a master domain (ie if your buildbot is on
		buildbot.buildbot.net, one can inject a cookie on *.buildbot.net,
		which could impact another website hosted in your domain)

	     - HTTP response splitting and cache poisoning (browser or proxy) are
		also typical impact of this vulnerability class, but might be impractical
		to exploit.
	   </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/buildbot/buildbot/wiki/CRLF-injection-in-Buildbot-login-and-logout-redirect-code</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-7313</url>
      <cvename>CVE-2019-7313</cvename>
    </references>
    <dates>
      <discovery>2019-01-29</discovery>
      <entry>2019-04-26</entry>
    </dates>
  </vuln>

  <vuln vid="2bad8b5d-66fb-11e9-9815-78acc0a3b880">
    <topic>drupal -- Drupal core - Moderately critical</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.66</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.6.15</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/SA-CORE-2019-005">
	  <p>CVE-2019-10909: Escape validation messages in the PHP templating engine.</p>
	  <p>CVE-2019-10910: Check service IDs are valid.</p>
	  <p>CVE-2019-10911: Add a separator in the remember me cookie hash.</p>
	</blockquote>
	<blockquote cite="https://www.drupal.org/sa-core-2019-006">
	  <p>jQuery 3.4.0 includes a fix for some unintended behavior when using
	    jQuery.extend(true, {}, ...). If an unsanitized source object contained
	    an enumerable __proto__ property, it could extend the native Object.prototype.
	    This fix is included in jQuery 3.4.0, but patch diffs exist to patch previous
	    jQuery versions.</p>

	  <p>It's possible that this vulnerability is exploitable with some Drupal modules.
	    As a precaution, this Drupal security release backports the fix to jQuery.extend(),
	    without making any other changes to the jQuery version that is included in
	    Drupal core (3.2.1 for Drupal 8 and 1.4.4 for Drupal 7) or running on the site
	    via some other module such as jQuery Update.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/SA-CORE-2019-005</url>
      <url>https://www.drupal.org/SA-CORE-2019-006</url>
    </references>
    <dates>
      <discovery>2019-04-17</discovery>
      <entry>2019-04-25</entry>
    </dates>
  </vuln>

  <vuln vid="f6ea18bb-65b9-11e9-8b31-002590045d9c">
    <topic>py-yaml -- arbitrary code execution</topic>
    <affects>
      <package>
	<name>py27-yaml</name>
	<name>py35-yaml</name>
	<name>py36-yaml</name>
	<name>py37-yaml</name>
	<range><lt>4.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>pyyaml reports:</p>
	<blockquote cite="https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation">
	  <p>the PyYAML.load function could be easily exploited to call any Python
	function. That means it could call any system command using os.system()</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2017-18342</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-18342</url>
      <url>https://github.com/yaml/pyyaml/pull/74</url>
    </references>
    <dates>
      <discovery>2018-06-27</discovery>
      <entry>2019-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="a207bbd8-6572-11e9-8e67-206a8a720317">
    <topic>FreeBSD -- EAP-pwd message reassembly issue with unexpected fragment</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
      <package>
	<name>wpa_supplicant</name>
	<range><lt>2.8</lt></range>
      </package>
      <package>
	<name>hostapd</name>
	<range><lt>2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>EAP-pwd implementation in hostapd (EAP server) and wpa_supplicant
	(EAP peer) does not to validate fragmentation reassembly state
	properly for a case where an unexpected fragment could be received.
	This could result in process termination due to NULL pointer
	dereference.</p>
	<p>See
	https://w1.fi/security/2019-5/eap-pwd-message-reassembly-issue-with-unexpected-fragment.txt
	for a detailed description of the bug.</p>
	<h1>Impact:</h1>
	<p>All wpa_supplicant and hostapd versions with EAP-pwd support could
	suffer a denial of service attack through process termination.</p>
      </body>
    </description>
    <references>
      <url>https://w1.fi/security/2019-5/eap-pwd-message-reassembly-issue-with-unexpected-fragment.txt</url>
    </references>
    <dates>
      <discovery>2019-04-18</discovery>
      <entry>2019-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="2da3cb25-6571-11e9-8e67-206a8a720317">
    <topic>FreeBSD -- EAP-pwd missing commit validation</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
      <package>
	<name>wpa_supplicant</name>
	<range><lt>2.8</lt></range>
      </package>
      <package>
	<name>hostapd</name>
	<range><lt>2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>EAP-pwd implementation in hostapd (EAP server) and wpa_supplicant
	(EAP peer) does not to validate the received scalar and element values
	in EAP-pwd-Commit messages properly. This could result in attacks that
	would be able to complete EAP-pwd authentication exchange without the
	attacker having to know the used password.</p>
	<p>See
	https://w1.fi/security/2019-4/eap-pwd-missing-commit-validation.txt
	for a detailed description of the bug.</p>
	<h1>Impact:</h1>
	<p>All wpa_supplicant and hostapd versions with EAP-pwd support.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9497</cvename>
      <cvename>CVE-2019-9498</cvename>
      <cvename>CVE-2019-9499</cvename>
      <freebsdsa>SA-19:03.wpa</freebsdsa>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-23</entry>
      <modified>2019-07-30</modified>
    </dates>
  </vuln>

  <vuln vid="98b71436-656d-11e9-8e67-206a8a720317">
    <topic>FreeBSD -- SAE confirm missing state validation</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
      <package>
	<name>wpa_supplicant</name>
	<range><lt>2.8</lt></range>
      </package>
      <package>
	<name>hostapd</name>
	<range><lt>2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>When hostapd is used to operate an access point with SAE
	(Simultaneous Authentication of Equals; also known as WPA3-Personal),
	an invalid authentication sequence could result in the hostapd process
	terminating due to a NULL pointer dereference when processing SAE
	confirm message. This was caused by missing state validation steps
	when processing the SAE confirm message in hostapd/AP mode.</p>
	<p>See
	https://w1.fi/security/2019-3/sae-confirm-missing-state-validation.txt
	for a detailed description of the bug.</p>
	<h1>Impact:</h1>
	<p>All hostapd versions with SAE support (CONFIG_SAE=y in the build
	configuration and SAE being enabled in the runtime configuration).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9496</cvename>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="60129efe-656d-11e9-8e67-206a8a720317">
    <topic>FreeBSD -- EAP-pwd side-channel attack</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
      <package>
	<name>wpa_supplicant</name>
	<range><lt>2.8</lt></range>
      </package>
      <package>
	<name>hostapd</name>
	<range><lt>2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Potential side channel attacks in the SAE implementations used
	by both hostapd and wpa_supplicant (see CVE-2019-9494 and VU#871675).
	EAP-pwd uses a similar design for deriving PWE from the password and
	while a specific attack against EAP-pwd is not yet known to be tested,
	there is no reason to believe that the EAP-pwd implementation would
	be immune against the type of cache attack that was identified for the
	SAE implementation. Since the EAP-pwd implementation in hostapd (EAP
	server) and wpa_supplicant (EAP peer) does not support MODP groups,
	the timing attack described against SAE is not applicable for the
	EAP-pwd implementation.</p>
	<p>See
	https://w1.fi/security/2019-2/eap-pwd-side-channel-attack.txt
	for a detailed description of the bug.</p>
	<h1>Impact:</h1>
	<p>All wpa_supplicant and hostapd versions with EAP-pwd support
	(CONFIG_EAP_PWD=y in the build configuration and EAP-pwd being enabled
	in the runtime configuration).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9495</cvename>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="7e53f9cc-656d-11e9-8e67-206a8a720317">
    <topic>FreeBSD -- SAE side-channel attacks</topic>
    <affects>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
      <package>
	<name>wpa_supplicant</name>
	<range><lt>2.8</lt></range>
      </package>
      <package>
	<name>hostapd</name>
	<range><lt>2.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>Side channel attacks in the SAE implementations used by both
	hostapd (AP) and wpa_supplicant (infrastructure BSS station/mesh
	station). SAE (Simultaneous Authentication of Equals) is also known
	as WPA3-Personal. The discovered side channel attacks may be able to
	leak information about the used password based on observable timing
	differences and cache access patterns. This might result in full
	password recovery when combined with an offline dictionary attack and
	if the password is not strong enough to protect against dictionary
	attacks.</p>
	<p>See
	https://w1.fi/security/2019-1/sae-side-channel-attacks.txt
	for a detailed description of the bug.</p>
	<h1>Impact:</h1>
	<p>All wpa_supplicant and hostapd versions with SAE support
	(CONFIG_SAE=y in the build configuration and SAE being enabled in
	the runtime configuration).</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9494</cvename>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-23</entry>
    </dates>
  </vuln>

  <vuln vid="484d3f5e-653a-11e9-b0e3-1c39475b9f84">
    <topic>Istio -- Security vulnerabilities</topic>
    <affects>
      <package>
	<name>istio</name>
	<range><lt>1.1.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Istio reports:</p>
	<blockquote cite="https://istio.io/blog/2019/announcing-1.1.2/#security-update">
	  <p>Two security vulnerabilities have recently been identified in the Envoy proxy.
		The vulnerabilities are centered on the fact that Envoy did not normalize
		HTTP URI paths and did not fully validate HTTP/1.1 header values. These
		vulnerabilities impact Istio features that rely on Envoy to enforce any of
		authorization, routing, or rate limiting.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9900</cvename>
      <cvename>CVE-2019-9901</cvename>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9900</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9901</url>
      <url>https://github.com/envoyproxy/envoy/issues/6434</url>
      <url>https://github.com/envoyproxy/envoy/issues/6435</url>
    </references>
    <dates>
      <discovery>2019-03-29</discovery>
      <entry>2019-04-22</entry>
    </dates>
  </vuln>

  <vuln vid="5ed7102e-6454-11e9-9a3a-001cc0382b2f">
    <topic>Ghostscript -- Security bypass vulnerability</topic>
    <affects>
      <package>
	<name>ghostscript9-agpl-base</name>
	<name>ghostscript9-agpl-x11</name>
	<range><lt>9.27</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Cedric Buissart (Red Hat) reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3835">
	  <p>It was found that the superexec operator was available in the
	    internal dictionary in ghostscript before 9.27. A specially crafted
	    PostScript file could use this flaw in order to, for example, have
	    access to the file system outside of the constrains imposed by
	    -dSAFER.</p>
	</blockquote>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3838">
	  <p>It was found that the forceput operator could be extracted from
	    the DefineResource method in ghostscript before 9.27. A specially
	    crafted PostScript file could use this flaw in order to, for
	    example, have access to the file system outside of the constrains
	    imposed by -dSAFER.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3835</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3838</url>
      <cvename>CVE-2019-3835</cvename>
      <cvename>CVE-2019-3838</cvename>
    </references>
    <dates>
      <discovery>2019-03-21</discovery>
      <entry>2019-04-21</entry>
    </dates>
  </vuln>

  <vuln vid="fb30db8f-62af-11e9-b0de-001cc0382b2f">
    <topic>GnuTLS -- double free, invalid pointer access</topic>
    <affects>
      <package>
	<name>gnutls</name>
	<range><lt>3.6.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The GnuTLS project reports:</p>
	<blockquote cite="https://www.gnutls.org/security-new.html#GNUTLS-SA-2019-03-27">
	  <ul>
	    <li>Tavis Ormandy from Google Project Zero found a memory
	      corruption (double free) vulnerability in the certificate
	      verification API. Any client or server application that verifies
	      X.509 certificates with GnuTLS 3.5.8 or later is affected.</li>
	    <li>It was found using the TLS fuzzer tools that decoding a
	      malformed TLS1.3 asynchronous message can cause a server crash
	      via an invalid pointer access. The issue affects GnuTLS server
	      applications since 3.6.4.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.gnutls.org/security-new.html#GNUTLS-SA-2019-03-27</url>
      <cvename>CVE-2019-3829</cvename>
      <cvename>CVE-2019-3836</cvename>
    </references>
    <dates>
      <discovery>2019-03-27</discovery>
      <entry>2019-04-19</entry>
    </dates>
  </vuln>

  <vuln vid="a64aa22f-61ec-11e9-85b9-a4badb296695">
    <topic>dovecot -- json encoder crash</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><ge>2.3.0</ge><lt>2.3.5.2</lt></range>
      </package>
      <package>
	<name>dovecot2</name>
	<range><ge>2.3.0</ge><lt>2.3.5.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="https://dovecot.org/pipermail/dovecot-news/2019-April/000407.html">
	  <p>* CVE-2019-10691: Trying to login with 8bit username containing
      invalid UTF8 input causes auth process to crash if auth policy is
      enabled. This could be used rather easily to cause a DoS. Similar
      crash also happens during mail delivery when using invalid UTF8 in
      From or Subject header when OX push notification driver is used.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://dovecot.org/pipermail/dovecot-news/2019-April/000407.html</url>
      <cvename>CVE-2019-10691</cvename>
    </references>
    <dates>
      <discovery>2019-04-09</discovery>
      <entry>2019-04-18</entry>
      <modified>2019-05-26</modified>
    </dates>
  </vuln>

  <vuln vid="6e58e1e9-2636-413e-9f84-4c0e21143628">
    <topic>libssh2 -- multiple issues</topic>
    <affects>
      <package>
	<name>libssh2</name>
	<range><lt>1.8.1,3</lt></range>
      </package>
      <package>
	<name>linux-c6-libssh2</name>
	<range><lt>1.4.2_7</lt></range>
      </package>
      <package>
	<name>linux-c7-libssh2</name>
	<range><lt>1.4.3_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>libssh2 developers report:</p>
	<blockquote cite="https://github.com/libssh2/libssh2/releases/tag/libssh2-1.8.1">
	  <ul>
	    <li>Defend against possible integer overflows in comp_method_zlib_decomp.</li>
	    <li>Defend against writing beyond the end of the payload in _libssh2_transport_read().</li>
	    <li>Sanitize padding_length - _libssh2_transport_read().</li>
	    <li>This prevents an underflow resulting in a potential out-of-bounds read if a server sends a too-large padding_length, possibly with malicious intent.</li>
	    <li>Prevent zero-byte allocation in sftp_packet_read() which could lead to an out-of-bounds read.</li>
	    <li>Check the length of data passed to sftp_packet_add() to prevent out-of-bounds reads.</li>
	    <li>Add a required_size parameter to sftp_packet_require et. al. to require callers of these functions to handle packets that are too short.</li>
	    <li>Additional length checks to prevent out-of-bounds reads and writes in _libssh2_packet_add().</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/libssh2/libssh2/releases/tag/libssh2-1.8.1</url>
      <url>https://libssh2.org/CVE-2019-3855.html</url>
      <url>https://libssh2.org/CVE-2019-3856.html</url>
      <url>https://libssh2.org/CVE-2019-3857.html</url>
      <url>https://libssh2.org/CVE-2019-3858.html</url>
      <url>https://libssh2.org/CVE-2019-3859.html</url>
      <url>https://libssh2.org/CVE-2019-3860.html</url>
      <url>https://libssh2.org/CVE-2019-3861.html</url>
      <url>https://libssh2.org/CVE-2019-3862.html</url>
      <url>https://libssh2.org/CVE-2019-3863.html</url>
      <cvename>CVE-2019-3855</cvename>
      <cvename>CVE-2019-3856</cvename>
      <cvename>CVE-2019-3857</cvename>
      <cvename>CVE-2019-3858</cvename>
      <cvename>CVE-2019-3859</cvename>
      <cvename>CVE-2019-3860</cvename>
      <cvename>CVE-2019-3861</cvename>
      <cvename>CVE-2019-3862</cvename>
      <cvename>CVE-2019-3863</cvename>
    </references>
    <dates>
      <discovery>2019-03-14</discovery>
      <entry>2019-04-18</entry>
      <modified>2019-07-07</modified>
    </dates>
  </vuln>

  <vuln vid="b747783f-5fb6-11e9-b2ac-08002705f877">
    <topic>gitea -- remote code execution</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.7.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/04/gitea-1.7.6-is-released/">
	  <p>Prevent remote code execution vulnerability with mirror repo URL settings.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/04/gitea-1.7.6-is-released/</url>
    </references>
    <dates>
      <discovery>2019-04-13</discovery>
      <entry>2019-04-17</entry>
    </dates>
  </vuln>

  <vuln vid="4e1997e8-5de0-11e9-b95c-b499baebfeaf">
    <topic>MySQL -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>mariadb55-server</name>
	<range><lt>5.5.64</lt></range>
      </package>
      <package>
	<name>mariadb101-server</name>
	<range><lt>10.1.39</lt></range>
      </package>
      <package>
	<name>mariadb102-server</name>
	<range><lt>10.2.23</lt></range>
      </package>
      <package>
	<name>mariadb103-server</name>
	<range><lt>10.3.14</lt></range>
      </package>
      <package>
	<name>mysql56-server</name>
	<range><lt>5.6.44</lt></range>
      </package>
      <package>
	<name>mysql57-server</name>
	<range><lt>5.7.26</lt></range>
      </package>
      <package>
	<name>mysql80-server</name>
	<range><lt>8.0.15</lt></range>
      </package>
      <package>
	<name>percona55-server</name>
	<range><lt>5.5.64</lt></range>
      </package>
      <package>
	<name>percona56-server</name>
	<range><lt>5.6.44</lt></range>
      </package>
      <package>
	<name>percona57-server</name>
	<range><lt>5.7.26</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Oracle reports:</p>
	<blockquote cite="https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html">
	  <p>Critical Patch Update Oracle MySQL Executive Summary</p>
	  <p>This Critical Patch Update contains 44 new security fixes for
	    Oracle MySQL. 3 of these vulnerabilities may be remotely exploitable
	    without authentication, i.e., may be exploited over a network without
	    requiring user credentials.</p>
	  <p>The Oracle MySQL products and versions affected by vulnerabilities
	    that are fixed in this Critical Patch Update are: MySQL Server, versions
	    5.6.43 and prior, 5.7.25 and prior, 8.0.15 and prior</p>
	  <p>Further details will be published by Oracle on 2019-04-16</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html</url>
    </references>
    <dates>
      <discovery>2019-04-13</discovery>
      <entry>2019-04-13</entry>
    </dates>
  </vuln>

  <vuln vid="a737eb11-5cfc-11e9-ab87-8cec4bf8fcfb">
    <topic>wget -- security flaw in caching credentials passed as a part of the URL</topic>
    <affects>
      <package>
	<name>wget</name>
	<range><ge>1.19</ge><lt>1.20.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gynvael Coldwind reports:</p>
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20483">
	  <p>
	    set_file_metadata in xattr.c in GNU Wget before 1.20.1 stores a
	    file's origin URL in the user.xdg.origin.url metadata attribute
	    of the extended attributes of the downloaded file, which allows
	    local users to obtain sensitive information (e.g., credentials
	    contained in the URL) by reading this attribute, as demonstrated
	    by getfattr. This also applies to Referer information in the
	    user.xdg.referrer.url metadata attribute.
	  </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20483</url>
      <cvename>CVE-2018-20483</cvename>
    </references>
    <dates>
      <discovery>2018-12-25</discovery>
      <entry>2019-04-12</entry>
    </dates>
  </vuln>

  <vuln vid="a0602fa0-5c1c-11e9-abd6-001b217b3468">
    <topic>Gitlab -- Group Runner Registration Token Exposure</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.9.0</ge><lt>11.9.7</lt></range>
	<range><ge>11.8.0</ge><lt>11.8.7</lt></range>
	<range><ge>10.4.0</ge><lt>11.7.11</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/04/10/critical-security-release-gitlab-11-dot-9-dot-7-released/">
	  <p>Group Runner Registration Token Exposure</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/04/10/critical-security-release-gitlab-11-dot-9-dot-7-released/</url>
      <cvename>CVE-2019-11000</cvename>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-11</entry>
    </dates>
  </vuln>

  <vuln vid="8e9c3f5a-715b-4336-8d05-19babef55e9e">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.172</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.164.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2019-04-10/">
	  <h1>Description</h1>
	  <h5>(Medium) SECURITY-1289</h5>
	  <p>Jenkins accepted cached legacy CLI authentication</p>
	  <h5>(Medium) SECURITY-1327</h5>
	  <p>XSS vulnerability in form validation button</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://jenkins.io/security/advisory/2019-04-10/</url>
    </references>
    <dates>
      <discovery>2019-04-10</discovery>
      <entry>2019-04-10</entry>
    </dates>
  </vuln>

  <vuln vid="45d89773-5b64-11e9-80ed-d43d7ef03aa6">
    <topic>Flash Player -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.171</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb19-19.html">
	  <ul>
	    <li>This update resolves a use-after-free vulnerability that
	      could lead to arbitrary code execution (CVE-2019-7096).</li>
	    <li>This update resolves an out-of-bounds read vulnerability that
	      could lead to information disclosure (CVE-2019-7108).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-7096</cvename>
      <cvename>CVE-2019-7108</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb19-19.html</url>
    </references>
    <dates>
      <discovery>2019-04-09</discovery>
      <entry>2019-04-10</entry>
    </dates>
  </vuln>

  <vuln vid="84ce26c3-5769-11e9-abd6-001b217b3468">
    <topic>clamav -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>clamav</name>
	<range><lt>0.101.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Clamav reports:</p>
	<blockquote cite="https://blog.clamav.net/2019/03/clamav-01012-and-01003-patches-have.html">
	  <p>An out-of-bounds heap read condition may occur when scanning PDF documents</p>
	  <p>An out-of-bounds heap read condition may occur when scanning PE files</p>
	  <p>An out-of-bounds heap write condition may occur when scanning OLE2 files</p>
	  <p>An out-of-bounds heap read condition may occur when scanning malformed PDF documents</p>
	  <p>A path-traversal write condition may occur as a result of improper input validation when scanning RAR archives</p>
	  <p>A use-after-free condition may occur as a result of improper error handling when scanning nested RAR archives</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.clamav.net/2019/03/clamav-01012-and-01003-patches-have.html</url>
      <cvename>CVE-2019-1787</cvename>
      <cvename>CVE-2019-1789</cvename>
      <cvename>CVE-2019-1788</cvename>
      <cvename>CVE-2019-1786</cvename>
      <cvename>CVE-2019-1785</cvename>
      <cvename>CVE-2019-1798</cvename>
    </references>
    <dates>
      <discovery>2019-03-29</discovery>
      <entry>2019-04-05</entry>
    </dates>
  </vuln>

  <vuln vid="da459dbc-5586-11e9-abd6-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.9.0</ge><lt>11.9.4</lt></range>
	<range><ge>11.8.0</ge><lt>11.8.6</lt></range>
	<range><lt>11.7.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/04/01/security-release-gitlab-11-dot-9-dot-4-released/">
	  <p>DoS potential for regex in CI/CD refs</p>
	  <p>Related branches visible in issues for guests</p>
	  <p>Persistent XSS at merge request resolve conflicts</p>
	  <p>Improper authorization control "move issue"</p>
	  <p>Guest users of private projects have access to releases</p>
	  <p>DoS potential on project languages page</p>
	  <p>Recurity assessment: information exposure through timing discrepancy</p>
	  <p>Recurity assessment: loginState HMAC issues</p>
	  <p>Recurity assessment: open redirect</p>
	  <p>PDF.js vulnerable to CVE-2018-5158</p>
	  <p>IDOR labels of private projects/groups</p>
	  <p>EXIF geolocation data not stripped from uploaded images</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/04/01/security-release-gitlab-11-dot-9-dot-4-released/</url>
      <cvename>CVE-2019-10640</cvename>
      <cvename>CVE-2019-10116</cvename>
      <cvename>CVE-2019-10111</cvename>
      <cvename>CVE-2019-10110</cvename>
      <cvename>CVE-2019-10115</cvename>
      <cvename>CVE-2019-10113</cvename>
      <cvename>CVE-2019-10114</cvename>
      <cvename>CVE-2019-10112</cvename>
      <cvename>CVE-2019-10117</cvename>
      <cvename>CVE-2018-5158</cvename>
      <cvename>CVE-2019-10108</cvename>
      <cvename>CVE-2019-10109</cvename>
    </references>
    <dates>
      <discovery>2019-04-01</discovery>
      <entry>2019-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="cf2105c6-551b-11e9-b95c-b499baebfeaf">
    <topic>Apache -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>apache24</name>
	<range><lt>2.4.39</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache httpd Project reports:</p>
	<blockquote cite="https://httpd.apache.org/security/vulnerabilities_24.html">
	  <p>Apache HTTP Server privilege escalation from modules' scripts
	    (CVE-2019-0211) (important)</p>
	  <p>mod_auth_digest access control bypass (CVE-2019-0217)
	    (important)</p>
	  <p>mod_ssl access control bypass (CVE-2019-0215) (important)</p>
	  <p>mod_http2, possible crash on late upgrade (CVE-2019-0197) (low)</p>
	  <p>mod_http2, read-after-free on a string compare (CVE-2019-0196)
	    (low)</p>
	  <p>Apache httpd URL normalization inconsistincy (CVE-2019-0220)
	    (low)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.apache.org/dist/httpd/CHANGES_2.4.39</url>
      <url>https://httpd.apache.org/security/vulnerabilities_24.html</url>
      <cvename>CVE-2019-0211</cvename>
      <cvename>CVE-2019-0217</cvename>
      <cvename>CVE-2019-0215</cvename>
      <cvename>CVE-2019-0196</cvename>
      <cvename>CVE-2019-0220</cvename>
    </references>
    <dates>
      <discovery>2019-04-01</discovery>
      <entry>2019-04-02</entry>
    </dates>
  </vuln>

  <vuln vid="6a0129bf-54ad-11e9-987c-1c39475b9f84">
    <topic>Kubectl -- Potential directory traversal</topic>
    <affects>
      <package>
	<name>kubectl</name>
	<range><lt>1.11.9</lt></range>
	<range><ge>1.12.0</ge><lt>1.12.7</lt></range>
	<range><ge>1.13.0</ge><lt>1.13.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Kubernetes.io reports:</p>
	<blockquote cite="https://discuss.kubernetes.io/t/announce-security-release-of-kubernetes-kubectl-potential-directory-traversal-releases-1-11-9-1-12-7-1-13-5-and-1-14-0-cve-2019-1002101/5712">
	  <p>A security issue was discovered with the Kubernetes kubectl cp
		command that could enable a directory traversal replacing or
		deleting files on a user’s workstation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-1002101</cvename>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-1002101</url>
    </references>
    <dates>
      <discovery>2019-03-28</discovery>
      <entry>2019-04-01</entry>
    </dates>
  </vuln>

  <vuln vid="b22d6d4c-53b9-11e9-9310-28d244aee256">
    <topic>znc -- Denial of Service</topic>
    <affects>
      <package>
	<name>znc</name>
	<range><lt>1.7.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mitre reports:</p>
	<blockquote cite="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9917">
	  <p>ZNC before 1.7.3-rc1 allows an existing remote user to cause a Denial
	    of Service (crash) via invalid encoding.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9917</cvename>
      <url>https://wiki.znc.in/ChangeLog/1.7.3</url>
    </references>
    <dates>
      <discovery>2019-03-21</discovery>
      <entry>2019-03-31</entry>
    </dates>
  </vuln>

  <vuln vid="fe7e322f-522d-11e9-98b5-216e512dad89">
    <topic>Jupyter notebook -- open redirect vulnerability</topic>
    <affects>
      <package>
	<name>py27-notebook</name>
	<name>py35-notebook</name>
	<name>py36-notebook</name>
	<name>py37-notebook</name>
	<range><lt>5.7.8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jupyter blog:</p>
	<blockquote cite="https://blog.jupyter.org/open-redirect-vulnerability-in-jupyter-jupyterhub-adf43583f1e4">
	  <p>Login pages tend to take a parameter for redirecting back to a page
	    after successful login, e.g. /login?next=/notebooks/mynotebook.ipynb, so
	    that you aren't disrupted too much if you try to visit a page, but have
	    to authenticate first. An Open Redirect Vulnerability is when a
	    malicious person crafts a link pointing to the login page of a trusted
	    site, but setting the "redirect after successful login" parameter to
	    send the user to their own site, instead of a page on the authenticated
	    site (the notebook or JupyterHub server), e.g.
	    /login?next=http://badwebsite.biz. This doesn't necessarily compromise
	    anything immediately, but it enables phishing if users don't notice
	    that the domain has changed, e.g. by showing a fake "re-enter your
	    password" page. Servers generally have to validate the redirect URL to
	    avoid this. Both JupyterHub and Notebook already do this, but the
	    validation didn't take into account all possible ways to redirect to
	    other sites, so some malicious URLs could still be crafted to redirect
	    away from the server (the above example does not work in any recent
	    version of either package). Only certain browsers (Chrome and Firefox,
	    not Safari) could be redirected from the JupyterHub login page, but all
	    browsers could be redirected away from a standalone notebook server.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.jupyter.org/open-redirect-vulnerability-in-jupyter-jupyterhub-adf43583f1e4</url>
      <url>https://github.com/jupyter/notebook/blob/master/docs/source/changelog.rst</url>
      <cvename>CVE-2019-10255</cvename>
    </references>
    <dates>
      <discovery>2019-03-28</discovery>
      <entry>2019-03-29</entry>
      <modified>2019-04-06</modified>
    </dates>
  </vuln>

  <vuln vid="7862213c-5152-11e9-8b26-a4badb296695">
    <topic>dovecot -- Buffer overflow reading extension header</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.5.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi reports:</p>
	<blockquote cite="http://cve.mitre.org/cgi-bin/cvename.cgi?name=2019-7524">
	  <p>Vulnerability Details:
When reading FTS or POP3-UIDL header from dovecot index, the input
buffer size is not bound, and data is copied to target structure causing
stack overflow.

Risk:
This can be used for local root privilege escalation or executing
arbitrary code in dovecot process context. This requires ability to
directly modify dovecot indexes.
Steps to reproduce:
Produce dovecot.index.log entry that creates an FTS header which has
more than 12 bytes of data.
Trigger dovecot indexer-worker or run doveadm index.
Dovecot will crash.

Mitigations:
Since 2.3.0 dovecot has been compiled with stack smash protection, ASLR,
read-only GOT tables and other techniques that make exploiting this bug
much harder.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://cve.mitre.org/cgi-bin/cvename.cgi?name=2019-7524</url>
      <url>https://dovecot.org/list/dovecot-news/2019-March/000401.html</url>
      <cvename>CVE-2019-7524</cvename>
    </references>
    <dates>
      <discovery>2019-02-05</discovery>
      <entry>2019-03-28</entry>
    </dates>
  </vuln>

  <vuln vid="94d63fd7-508b-11e9-9ba0-4c72b94353b5">
    <topic>drupal -- Drupal core - Moderately critical - Cross Site Scripting</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.65</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.6.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/SA-CORE-2019-004">
	  <p>Under certain circumstances the File module/subsystem allows a malicious
	    user to upload a file that can trigger a cross-site scripting (XSS) vulnerability.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/project/drupal/releases/8.6.13</url>
      <url>https://www.drupal.org/project/drupal/releases/7.65</url>
      <url>https://www.drupal.org/SA-CORE-2019-004</url>
      <cvename>CVE-2019-6341</cvename>
    </references>
    <dates>
      <discovery>2019-03-20</discovery>
      <entry>2019-03-27</entry>
      <modified>2019-03-28</modified>
    </dates>
  </vuln>

  <vuln vid="d74371d2-4fee-11e9-a5cd-1df8a848de3d">
    <topic>Python -- NULL pointer dereference vulnerability</topic>
    <affects>
      <package>
	<name>python27</name>
	<range><lt>2.7.16</lt></range>
      </package>
      <package>
	<name>python35</name>
	<range><lt>3.5.7</lt></range>
      </package>
      <package>
	<name>python36</name>
	<range><lt>3.6.8_1</lt></range>
      </package>
      <package>
	<name>python37</name>
	<range><lt>3.7.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Python Changelog:</p>
	<blockquote cite="https://docs.python.org/3.7/whatsnew/changelog.html">
	  <p>bpo-35746: [CVE-2019-5010] Fix a NULL pointer deref in ssl module. The
	    cert parser did not handle CRL distribution points with empty DP or URI
	    correctly. A malicious or buggy certificate can result into segfault.
	    Vulnerability (TALOS-2018-0758) reported by Colin Read and Nicolas Edet
	    of Cisco.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.python.org/3.7/whatsnew/changelog.html</url>
      <url>https://bugs.python.org/issue35746</url>
      <cvename>CVE-2019-5010</cvename>
    </references>
    <dates>
      <discovery>2019-01-15</discovery>
      <entry>2019-03-26</entry>
      <modified>2019-03-27</modified>
    </dates>
  </vuln>

  <vuln vid="15ee0e93-4bbb-11e9-9ba0-4c72b94353b5">
    <topic>wordpress -- multiple issues</topic>
    <affects>
      <package>
	<name>wordpress</name>
	<name>fr-wordpress</name>
	<range><lt>5.1.1,1</lt></range>
      </package>
      <package>
	<name>de-wordpress</name>
	<name>zh_CN-wordpress</name>
	<name>zh_TW-wordpress</name>
	<name>ja-wordpress</name>
	<name>ru-wordpress</name>
	<range><lt>5.1.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>wordpress developers reports:</p>
	<blockquote cite="https://wordpress.org/news/2019/03/wordpress-5-1-1-security-and-maintenance-release/">
	  <p>Hosts can now offer a button for their users to update PHP.</p>
	  <p>The recommended PHP version used by the Update PHP notice can now be filtered.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://wordpress.org/news/2019/03/wordpress-5-1-1-security-and-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-03-12</discovery>
      <entry>2019-03-21</entry>
    </dates>
  </vuln>

  <vuln vid="e0382fde-4bb0-11e9-adcb-001b217b3468">
    <topic>Gitlab -- Vulnerability</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.8.0</ge><lt>11.8.3</lt></range>
	<range><lt>11.7.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/03/20/critical-security-release-gitlab-11-dot-8-dot-3-released/">
	  <p>Project Runner Token Exposed Through Issues Quick Actions</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/03/20/critical-security-release-gitlab-11-dot-8-dot-3-released/</url>
      <cvename>CVE-2019-9866</cvename>
    </references>
    <dates>
      <discovery>2019-03-20</discovery>
      <entry>2019-03-21</entry>
    </dates>
  </vuln>

  <vuln vid="1b6a10e9-4b7b-11e9-9e89-54e1ad3d6335">
    <topic>libXdmcp -- insufficient entropy generating session keys</topic>
    <affects>
      <package>
	<name>libXdmcp</name>
	<range><lt>1.1.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The freedesktop and x.org project reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2017-2625">
	  <p>It was discovered that libXdmcp before 1.1.3 used weak
	    entropy to generate session keys on platforms without
	    arc4random_buf() but with getentropy(). On a multi-user system using
	    xdmcp, a local attacker could potentially use information available
	    from the process list to brute force the key, allowing them to
	    hijack other users' sessions.</p>
	  <p>Please note, that since FreeBSD provides arc4random_buf(), it is
	    unknown if FreeBSD is affected by this vulnerability</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2017-2625</url>
      <url>https://lists.x.org/archives/xorg-announce/2019-March/002974.html</url>
      <cvename>CVE-2017-2625</cvename>
    </references>
    <dates>
      <discovery>2017-04-04</discovery>
      <entry>2019-03-21</entry>
      <modified>2019-03-22</modified>
    </dates>
  </vuln>

  <vuln vid="7ba5a3d0-4b18-11e9-adcb-001b217b3468">
    <topic>Gitlab -- Vulnerability</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><lt>11.8.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/03/14/gitlab-11-8-2-released/">
	  <p>Public project in a private group makes the group page publicly accessible</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/03/14/gitlab-11-8-2-released/</url>
      <cvename>CVE-2019-9732</cvename>
    </references>
    <dates>
      <discovery>2019-03-14</discovery>
      <entry>2019-03-20</entry>
    </dates>
  </vuln>

  <vuln vid="a8ba7358-4b02-11e9-9ba0-4c72b94353b5">
    <topic>gitea -- XSS vulnerability</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.7.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitea Team reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/03/gitea-1.7.4-is-released/">
	  <p>Fix potential XSS vulnerability in repository description.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.gitea.io/2019/03/gitea-1.7.4-is-released/</url>
    </references>
    <dates>
      <discovery>2019-03-12</discovery>
      <entry>2019-03-20</entry>
    </dates>
  </vuln>

  <vuln vid="05da6b56-3e66-4306-9ea3-89fafe939726">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>66.0_3,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.9</lt></range>
      </package>
      <package>
	<name>seamonkey</name>
	<name>linux-seamonkey</name>
	<range><lt>2.53.0</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.6.0,1</lt></range>
      </package>
      <package>
	<name>linux-firefox</name>
	<range><lt>60.6.0,2</lt></range>
      </package>
      <package>
	<name>libxul</name>
	<name>thunderbird</name>
	<name>linux-thunderbird</name>
	<range><lt>60.6.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-07/">
	  <p>CVE-2019-9790: Use-after-free when removing in-use DOM elements</p>
	  <p>CVE-2019-9791: Type inference is incorrect for constructors entered through on-stack replacement with IonMonkey</p>
	  <p>CVE-2019-9792: IonMonkey leaks JS_OPTIMIZED_OUT magic value to script</p>
	  <p>CVE-2019-9793: Improper bounds checks when Spectre mitigations are disabled</p>
	  <p>CVE-2019-9794: Command line arguments not discarded during execution</p>
	  <p>CVE-2019-9795: Type-confusion in IonMonkey JIT compiler</p>
	  <p>CVE-2019-9796: Use-after-free with SMIL animation controller</p>
	  <p>CVE-2019-9797: Cross-origin theft of images with createImageBitmap</p>
	  <p>CVE-2019-9798: Library is loaded from world writable APITRACE_LIB location</p>
	  <p>CVE-2019-9799: Information disclosure via IPC channel messages</p>
	  <p>CVE-2019-9801: Windows programs that are not 'URL Handlers' are exposed to web content</p>
	  <p>CVE-2019-9802: Chrome process information leak</p>
	  <p>CVE-2019-9803: Upgrade-Insecure-Requests incorrectly enforced for same-origin navigation</p>
	  <p>CVE-2019-9804: Code execution through 'Copy as cURL' in Firefox Developer Tools on macOS</p>
	  <p>CVE-2019-9805: Potential use of uninitialized memory in Prio</p>
	  <p>CVE-2019-9806: Denial of service through successive FTP authorization prompts</p>
	  <p>CVE-2019-9807: Text sent through FTP connection can be incorporated into alert messages</p>
	  <p>CVE-2019-9809: Denial of service through FTP modal alert error messages</p>
	  <p>CVE-2019-9808: WebRTC permissions can display incorrect origin with data: and blob: URLs</p>
	  <p>CVE-2019-9789: Memory safety bugs fixed in Firefox 66</p>
	  <p>CVE-2019-9788: Memory safety bugs fixed in Firefox 66 and Firefox ESR 60.6</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-9788</cvename>
      <cvename>CVE-2019-9789</cvename>
      <cvename>CVE-2019-9790</cvename>
      <cvename>CVE-2019-9791</cvename>
      <cvename>CVE-2019-9792</cvename>
      <cvename>CVE-2019-9793</cvename>
      <cvename>CVE-2019-9794</cvename>
      <cvename>CVE-2019-9795</cvename>
      <cvename>CVE-2019-9796</cvename>
      <cvename>CVE-2019-9797</cvename>
      <cvename>CVE-2019-9798</cvename>
      <cvename>CVE-2019-9799</cvename>
      <cvename>CVE-2019-9801</cvename>
      <cvename>CVE-2019-9802</cvename>
      <cvename>CVE-2019-9803</cvename>
      <cvename>CVE-2019-9804</cvename>
      <cvename>CVE-2019-9805</cvename>
      <cvename>CVE-2019-9806</cvename>
      <cvename>CVE-2019-9807</cvename>
      <cvename>CVE-2019-9808</cvename>
      <cvename>CVE-2019-9809</cvename>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-07/</url>
      <url>https://www.mozilla.org/security/advisories/mfsa2019-08/</url>
    </references>
    <dates>
      <discovery>2019-03-19</discovery>
      <entry>2019-03-19</entry>
      <modified>2019-07-23</modified>
    </dates>
  </vuln>

  <vuln vid="6001cfc6-9f0f-4fae-9b4f-9b8fae001425">
    <topic>PowerDNS -- Insufficient validation in the HTTP remote backend</topic>
    <affects>
      <package>
	<name>powerdns</name>
	<range><lt>4.1.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS developers report:</p>
	<blockquote cite="https://doc.powerdns.com/authoritative/security-advisories/powerdns-advisory-2019-03.html">
	  <p>An issue has been found in PowerDNS Authoritative Server when the HTTP remote backend is used in RESTful mode (without post=1 set), allowing a remote user to cause the HTTP backend to connect to an attacker-specified host instead of the configured one, via a crafted DNS query. This can be used to cause a denial of service by preventing the remote backend from getting a response, content spoofing if the attacker can time its own query so that subsequent queries will use an attacker-controlled HTTP server instead of the configured one, and possibly information disclosure if the Authoritative Server has access to internal servers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/authoritative/security-advisories/powerdns-advisory-2019-03.html</url>
      <cvename>CVE-2019-3871</cvename>
    </references>
    <dates>
      <discovery>2019-03-18</discovery>
      <entry>2019-03-19</entry>
    </dates>
  </vuln>

  <vuln vid="1396a74a-4997-11e9-b5f1-83edb3f89ba1">
    <topic>Rails -- Action View vulnerabilities</topic>
    <affects>
      <package>
	<name>rubygem-actionview4</name>
	<range><lt>4.2.11.1</lt></range>
      </package>
      <package>
	<name>rubygem-actionview50</name>
	<range><lt>5.0.7.2</lt></range>
      </package>
      <package>
	<name>rubygem-actionview5</name>
	<range><lt>5.1.6.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Ruby on Rails blog:</p>
	<blockquote cite="https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/">
	  <p>Rails 4.2.11.1, 5.0.7.2, 5.1.6.2, 5.2.2.1, and 6.0.0.beta3 have been released! These contain the following important security fixes. It is recommended that users upgrade as soon as possible:</p>
	  <p>CVE-2019-5418 File Content Disclosure in Action View</p>
	  <p>CVE-2019-5419 Denial of Service Vulnerability in Action View</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</url>
      <cvename>CVE-2019-5418</cvename>
      <cvename>CVE-2019-5419</cvename>
    </references>
    <dates>
      <discovery>2019-03-13</discovery>
      <entry>2019-03-18</entry>
    </dates>
  </vuln>

  <vuln vid="46e1ece5-48bd-11e9-9c40-080027ac955c">
    <topic>PuTTY -- security fixes in new release</topic>
    <affects>
      <package>
	<name>putty</name>
	<range><lt>0.71</lt></range>
      </package>
      <package>
	<name>putty-gtk2</name>
	<range><lt>0.71</lt></range>
      </package>
      <package>
	<name>putty-nogtk</name>
	<range><lt>0.71</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The PuTTY team reports:</p>
	<blockquote cite="https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html">
	  <p>New in 0.71:</p>
	  <ul>
	    <li>Security fixes found by an EU-funded bug bounty programme:</li>
	    <li>+ a remotely triggerable memory overwrite in RSA key exchange, which can occur before host key verification</li>
	    <li>+ potential recycling of random numbers used in cryptography</li>
	    <li>+ on Unix, remotely triggerable buffer overflow in any kind of server-to-client forwarding</li>
	    <li>+ multiple denial-of-service attacks that can be triggered by writing to the terminal</li>
	    <li>Other security enhancements: major rewrite of the crypto code to remove cache and timing side channels.</li>
	    <li>User interface changes to protect against fake authentication prompts from a malicious server.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html</url>
    </references>
    <dates>
      <discovery>2019-03-16</discovery>
      <entry>2019-03-17</entry>
    </dates>
  </vuln>

  <vuln vid="72a6e3be-483a-11e9-92d7-f1590402501e">
    <topic>Jupyter notebook -- cross-site inclusion (XSSI) vulnerability</topic>
    <affects>
      <package>
	<name>py27-notebook</name>
	<name>py35-notebook</name>
	<name>py36-notebook</name>
	<name>py37-notebook</name>
	<range><lt>5.7.6</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jupyter notebook Changelog:</p>
	<blockquote cite="https://github.com/jupyter/notebook/blob/master/docs/source/changelog.rst">
	  <p>5.7.6 contains a security fix for a cross-site inclusion (XSSI)
	    vulnerability, where files at a known URL could be included in a page
	    from an unauthorized website if the user is logged into a Jupyter
	    server. The fix involves setting the X-Content-Type-Options: nosniff
	    header, and applying CSRF checks previously on all non-GET API requests
	    to GET requests to API endpoints and the /files/ endpoint.</p>
	  <p>The attacking page is able to access some contents of files when using
	    Internet Explorer through script errors, but this has not been
	    demonstrated with other browsers. A CVE has been requested for this
	    vulnerability.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/jupyter/notebook/blob/master/docs/source/changelog.rst</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-auth-prompt-spoofing.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-fd-set-overflow.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-rng-reuse.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-rsa-kex-integer-overflow.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-terminal-dos-combining-chars.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-terminal-dos-combining-chars-double-width-gtk.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-terminal-dos-one-column-cjk.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/pscp-unsanitised-server-output.html</url>
      <url>https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/side-channels.html</url>
    </references>
    <dates>
      <discovery>2019-03-10</discovery>
      <entry>2019-03-16</entry>
    </dates>
  </vuln>

  <vuln vid="27b12d04-4722-11e9-8b7c-b5e01141761f">
    <topic>RubyGems -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>ruby23-gems</name>
	<name>ruby24-gems</name>
	<name>ruby25-gems</name>
	<range><lt>3.0.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>RubyGems Security Advisories:</p>
	<blockquote cite="https://blog.rubygems.org/2019/03/05/security-advisories-2019-03.html">
	  <p>CVE-2019-8320: Delete directory using symlink when decompressing tar</p>
	  <p>CVE-2019-8321: Escape sequence injection vulnerability in 'verbose'</p>
	  <p>CVE-2019-8322: Escape sequence injection vulnerability in 'gem owner'</p>
	  <p>CVE-2019-8323: Escape sequence injection vulnerability in API response handling</p>
	  <p>CVE-2019-8324: Installing a malicious gem may lead to arbitrary code execution</p>
	  <p>CVE-2019-8325: Escape sequence injection vulnerability in errors</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.rubygems.org/2019/03/05/security-advisories-2019-03.html</url>
      <url>https://github.com/rubygems/rubygems/blob/master/History.txt</url>
      <cvename>CVE-2019-8320</cvename>
      <cvename>CVE-2019-8321</cvename>
      <cvename>CVE-2019-8322</cvename>
      <cvename>CVE-2019-8323</cvename>
      <cvename>CVE-2019-8324</cvename>
      <cvename>CVE-2019-8325</cvename>
    </references>
    <dates>
      <discovery>2019-03-05</discovery>
      <entry>2019-03-15</entry>
    </dates>
  </vuln>

  <vuln vid="e56f2f7c-410e-11e9-b95c-b499baebfeaf">
    <topic>OpenSSL -- ChaCha20-Poly1305 nonce vulnerability</topic>
    <affects>
      <package>
	<name>openssl111</name>
	<range><lt>1.1.1b_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The OpenSSL project reports:</p>
	<blockquote cite="https://www.openssl.org/news/secadv/20190306.txt">
	  <p>Low: ChaCha20-Poly1305 with long nonces (CVE-2019-1543)</p>
	  <p>ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce
	    input for every encryption operation. RFC 7539 specifies that the nonce
	    value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce
	    length and front pads the nonce with 0 bytes if it is less than 12 bytes.
	    However it also incorrectly allows a nonce to be set of up to 16 bytes.
	    In this case only the last 12 bytes are significant and any additional
	    leading bytes are ignored.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openssl.org/news/secadv/20190306.txt</url>
      <cvename>CVE-2019-1543</cvename>
    </references>
    <dates>
      <discovery>2019-03-06</discovery>
      <entry>2019-03-07</entry>
    </dates>
  </vuln>

  <vuln vid="c2576e14-36e2-11e9-9eda-206a8a720317">
    <topic>ntp -- Crafted null dereference attack from a trusted source with an authenticated mode 6 packet</topic>
    <affects>
      <package>
	<name>ntp</name>
	<range><lt>4.2.8p13</lt></range>
      </package>
      <package>
	<name>FreeBSD</name>
	<range><ge>12.0</ge><lt>12.0_2</lt></range>
	<range><ge>11.2</ge><lt>11.2_8</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Network Time Foundation reports:</p>
	<blockquote cite="http://support.ntp.org/bin/view/Main/SecurityNotice#March_2019_ntp_4_2_8p13_NTP_Rele">
	  <p>A crafted malicious authenticated mode 6 (ntpq) packet from a
	  permitted network address can trigger a NULL pointer dereference,
	  crashing ntpd.</p>
	  <p>Note that for this attack to work, the sending
	  system must be on an address that the target's ntpd accepts mode 6
	  packets from, and must use a private key that is specifically
	  listed as being used for mode 6 authorization.</p>
	  <p>Impact: The ntpd daemon can crash due to the NULL pointer
	  dereference, causing a denial of service.</p>
	  <p>Mitigation:</p>
	  <ul>
	    <li>Use restrict noquery to limit addresses that can send mode 6
	    queries.</li>
	    <li>Limit access to the private controlkey in ntp.keys.</li>
	    <li>Upgrade to 4.2.8p13, or later.</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://bugs.ntp.org/3565</url>
      <url>http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-8936</url>
      <url>https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=(AV:N/AC:H/Au:M/C:N/I:N/A:C)</url>
      <url>https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:H</url>
      <cvename>CVE-2019-8936</cvename>
      <freebsdsa>SA-19:04.ntp</freebsdsa>
    </references>
    <dates>
      <discovery>2019-01-15</discovery>
      <entry>2019-03-07</entry>
      <modified>2019-07-30</modified>
    </dates>
  </vuln>

  <vuln vid="d193aa9f-3f8c-11e9-9a24-6805ca0b38e8">
    <topic>rssh - multiple vulnerabilities</topic>
    <affects>
      <package>
       <name>rssh</name>
       <range><lt>2.3.4_2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
       <p>NVD reports:</p>
       <blockquote cite="https://nvd.nist.gov/vuln/search/results?form_type=Advanced&amp;cves=on&amp;cpe_version=cpe%3a%2fa%3apizzashack%3arssh%3a2.3.4">
	<p>rssh version 2.3.4 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in allowscp permission that can result in Local command execution. This attack appear to be exploitable via An authorized SSH user with the allowscp permission.</p>
	<p>Insufficient sanitization of arguments passed to rsync can bypass the restrictions imposed by rssh, a restricted shell that should restrict users to perform only rsync operations, resulting in the execution of arbitrary shell commands.</p>
       </blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/search/results?form_type=Advanced&amp;cves=on&amp;cpe_version=cpe%3a%2fa%3apizzashack%3arssh%3a2.3.4</url>
      <cvename>CVE-2019-1000018</cvename>
      <cvename>CVE-2019-3463</cvename>
      <cvename>CVE-2019-3464</cvename>
    </references>
    <dates>
      <discovery>2019-02-04</discovery>
      <entry>2019-03-06</entry>
    </dates>
  </vuln>

  <vuln vid="416ca0f4-3fe0-11e9-bbdd-6805ca0b3d42">
    <topic>rt -- XSS via jQuery</topic>
    <affects>
      <package>
	<name>rt42</name>
	<range><ge>4.2.0</ge><lt>4.2.16</lt></range>
      </package>
      <package>
	<name>rt44</name>
	<range><ge>4.4.0</ge><lt>4.4.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>BestPractical reports:</p>
	<blockquote cite="https://docs.bestpractical.com/release-notes/rt/4.4.4">

	  <p>The version of jQuery used in RT 4.2 and 4.4 has a
	    Cross-site Scripting (XSS) vulnerability when using
	    cross-domain Ajax requests. This vulnerability is assigned
	    <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-9251">CVE-2015-9251</a>. RT
	    does not use this jQuery feature so it is not directly
	    vulnerable. jQuery version 1.12 no longer receives official
	    updates, however a fix was posted with recommendations for
	    applications to patch locally, so RT will follow this
	    recommendation and ship with a patched version.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://docs.bestpractical.com/release-notes/rt/4.4.4</url>
      <url>https://docs.bestpractical.com/release-notes/rt/4.2.16</url>
      <cvename>CVE-2015-9251</cvename>
    </references>
    <dates>
      <discovery>2019-03-05</discovery>
      <entry>2019-03-06</entry>
    </dates>
  </vuln>

  <vuln vid="526d9642-3ae7-11e9-a669-8c164582fbac">
    <topic>slixmpp -- improper access control</topic>
    <affects>
      <package>
	<name>py35-slixmpp</name>
	<name>py36-slixmpp</name>
	<name>py37-slixmpp</name>
	<range><lt>1.4.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NVD reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2019-1000021">
	  <p>slixmpp version before commit 7cd73b594e8122dddf847953fcfc85ab4d316416
	    contains an incorrect Access Control vulnerability in XEP-0223 plugin
	    (Persistent Storage of Private Data via PubSub) options profile, used
	    for the configuration of default access model that can result in
	    all of the contacts of the victim can see private data having been
	    published to a PEP node. This attack appears to be exploitable
	    if the user of this library publishes any private data on PEP,
	    the node isn't configured to be private. This vulnerability appears
	    to have been fixed in commit 7cd73b594e8122dddf847953fcfc85ab4d316416
	    which is included in slixmpp 1.4.2.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-1000021</url>
      <cvename>CVE-2019-1000021</cvename>
    </references>
    <dates>
      <discovery>2019-02-04</discovery>
      <entry>2019-03-05</entry>
    </dates>
  </vuln>

  <vuln vid="11292460-3f2f-11e9-adcb-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.8.0</ge><lt>11.8.1</lt></range>
	<range><ge>11.7.0</ge><lt>11.7.6</lt></range>
	<range><ge>2.9.0</ge><lt>11.6.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/03/04/security-release-gitlab-11-dot-8-dot-1-released/">
	  <p>Arbitrary file read via MergeRequestDiff</p>
	  <p>CSRF add Kubernetes cluster integration</p>
	  <p>Blind SSRF in prometheus integration</p>
	  <p>Merge request information disclosure</p>
	  <p>IDOR milestone name information disclosure</p>
	  <p>Burndown chart information disclosure</p>
	  <p>Private merge request titles in public project information disclosure</p>
	  <p>Private namespace disclosure in email notification when issue is moved</p>
	  <p>Milestone name disclosure</p>
	  <p>Issue board name disclosure</p>
	  <p>NPM automatic package referencer</p>
	  <p>Path traversal snippet mover</p>
	  <p>Information disclosure repo existence</p>
	  <p>Issue DoS via Mermaid</p>
	  <p>Privilege escalation impersonate user</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/03/04/security-release-gitlab-11-dot-8-dot-1-released/</url>
      <cvename>CVE-2019-9221</cvename>
      <cvename>CVE-2019-9176</cvename>
      <cvename>CVE-2019-9174</cvename>
      <cvename>CVE-2019-9172</cvename>
      <cvename>CVE-2019-9170</cvename>
      <cvename>CVE-2019-9175</cvename>
      <cvename>CVE-2019-9178</cvename>
      <cvename>CVE-2019-9179</cvename>
      <cvename>CVE-2019-9171</cvename>
      <cvename>CVE-2019-9224</cvename>
      <cvename>CVE-2019-9225</cvename>
      <cvename>CVE-2019-9219</cvename>
      <cvename>CVE-2019-9217</cvename>
      <cvename>CVE-2019-9222</cvename>
      <cvename>CVE-2019-9223</cvename>
      <cvename>CVE-2019-9220</cvename>
      <cvename>CVE-2019-9485</cvename>
    </references>
    <dates>
      <discovery>2019-03-04</discovery>
      <entry>2019-03-05</entry>
    </dates>
  </vuln>

  <vuln vid="a3e24de7-3f0c-11e9-87d1-00012e582166">
    <topic>py-gunicorn -- CWE-113 vulnerability</topic>
    <affects>
      <package>
	<name>py27-gunicorn</name>
	<name>py35-gunicorn</name>
	<name>py36-gunicorn</name>
	<name>py37-gunicorn</name>
	<range><lt>19.5.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Everardo reports:</p>
	<blockquote cite="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000164">
	  <p>gunicorn version 19.4.5 contains a CWE-113: Improper
	  Neutralization of CRLF Sequences in HTTP Headers vulnerability
	  in process_headers function in gunicorn/http/wsgi.py
	  that can result in an attacker causing the server to
	  return arbitrary HTTP headers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-1000164</cvename>
      <url>https://epadillas.github.io/2018/04/02/http-header-splitting-in-gunicorn-19.4.5</url>
    </references>
    <dates>
      <discovery>2018-04-02</discovery>
      <entry>2019-03-05</entry>
    </dates>
  </vuln>

  <vuln vid="b71d7193-3c54-11e9-a3f9-00155d006b02">
    <topic>Node.js -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>node</name>
	<range><lt>11.10.1</lt></range>
      </package>
      <package>
	<name>node10</name>
	<range><lt>10.15.2</lt></range>
      </package>
      <package>
	<name>node8</name>
	<range><lt>8.15.1</lt></range>
      </package>
      <package>
	<name>node6</name>
	<range><lt>6.17.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Node.js reports:</p>
	<blockquote cite="https://nodejs.org/en/blog/vulnerability/february-2019-security-releases/">
	  <p>Updates are now available for all active Node.js release lines. In addition to fixes for security flaws in Node.js, they also include upgrades of Node.js 6 and 8 to OpenSSL 1.0.2r which contains a fix for a moderate severity security vulnerability.</p>
	  <p>For these releases, we have decided to withhold the fix for the Misinterpretation of Input (CWE-115) flaw mentioned in the original announcement. This flaw is very low severity and we are not satisfied that we had a complete and stable fix ready for release. We will be seeking to address this flaw via alternate mechanisms in the near future. In addition, we have introduced an additional CVE for a change in Node.js 6 that we have decided to classify as a Denial of Service (CWE-400) flaw.</p>
	  <p>We recommend that all Node.js users upgrade to a version listed below as soon as possible.</p>
	  <h1>OpenSSL: 0-byte record padding oracle (CVE-2019-1559)</h1>
	  <p>OpenSSL 1.0.2r contains a fix for CVE-2019-1559 and is included in the releases for Node.js versions 6 and 8 only. Node.js 10 and 11 are not impacted by this vulnerability as they use newer versions of OpenSSL which do not contain the flaw.</p>
	  <p>Under certain circumstances, a TLS server can be forced to respond differently to a client if a zero-byte record is received with an invalid padding compared to a zero-byte record with an invalid MAC. This can be used as the basis of a padding oracle attack to decrypt data.</p>
	  <p>Only TLS connections using certain ciphersuites executing under certain conditions are exploitable. We are currently unable to determine whether the use of OpenSSL in Node.js exposes this vulnerability. We are taking a cautionary approach and recommend the same for users. For more information, see the advisory and a detailed write-up by the reporters of the vulnerability.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nodejs.org/en/blog/vulnerability/february-2019-security-releases/</url>
      <cvename>CVE-2019-5737</cvename>
      <cvename>CVE-2019-5739</cvename>
      <cvename>CVE-2019-1559</cvename>
    </references>
    <dates>
      <discovery>2019-02-28</discovery>
      <entry>2019-03-03</entry>
    </dates>
  </vuln>

  <vuln vid="395ed9d5-3cca-11e9-9ba0-4c72b94353b5">
    <topic>mybb -- vulnerabilities</topic>
    <affects>
      <package>
	<name>mybb</name>
	<range><lt>1.8.20_1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>mybb Team reports:</p>
	<blockquote cite="https://blog.mybb.com/2019/02/27/mybb-1-8-20-released-security-maintenance-release/">
	    <p>Medium risk: Reset Password reflected XSS</p>
	    <p>Medium risk: ModCP Profile Editor username reflected XSS</p>
	    <p>Low risk: Predictable CSRF token for guest users</p>
	    <p>Low risk: ACP Stylesheet Properties XSS</p>
	    <p>Low risk: Reset Password username enumeration via email</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://blog.mybb.com/2019/02/27/mybb-1-8-20-released-security-maintenance-release/</url>
    </references>
    <dates>
      <discovery>2019-02-27</discovery>
      <entry>2019-03-02</entry>
      <modified>2019-03-04</modified>
    </dates>
  </vuln>

  <vuln vid="be0e3817-3bfe-11e9-9cd6-001999f8d30b">
    <topic>asterisk -- Remote crash vulnerability with SDP protocol violation</topic>
    <affects>
      <package>
	<name>asterisk15</name>
	<range><lt>15.7.2</lt></range>
      </package>
      <package>
	<name>asterisk16</name>
	<range><lt>16.2.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Asterisk project reports:</p>
	<blockquote cite="https://www.asterisk.org/downloads/security-advisories">
	  <p>When Asterisk makes an outgoing call, a very specific
	  SDP protocol violation by the remote party can cause
	  Asterisk to crash.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://downloads.asterisk.org/pub/security/AST-2019-001.html</url>
      <cvename>CVE-2019-7251</cvename>
    </references>
    <dates>
      <discovery>2019-01-24</discovery>
      <entry>2019-03-01</entry>
    </dates>
  </vuln>

  <vuln vid="e3aacd6d-3d01-434c-9330-bc9efd40350f">
    <topic>webkit-gtk -- Multiple vulnabilities</topic>
    <affects>
      <package>
	<name>webkit2-gtk3</name>
	<range><lt>2.22.6</lt></range>
      </package>
      <package>
	<name>webkit-gtk2</name>
	<name>webkit-gtk3</name>
	<range><ge>0</ge></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Webkitgtk project reports:</p>
	<blockquote cite="https://webkitgtk.org/security/WSA-2019-0001.html">
	  <p>CVE-2019-6212 - Processing maliciously crafted web content may lead to arbitrary code execution. Multiple memory corruption issues were addressed with improved memory handling.</p>
	  <p>CVE-2019-6215 - Processing maliciously crafted web content may lead to arbitrary code execution. A type confusion issue was addressed with improved memory handling.</p>
	  <p>CVE-2019-6216 - Processing maliciously crafted web content may lead to arbitrary code execution. Multiple memory corruption issues were addressed with improved memory handling.</p>
	  <p>CVE-2019-6217 - Processing maliciously crafted web content may lead to arbitrary code execution. Multiple memory corruption issues were addressed with improved memory handling.</p>
	  <p>CVE-2019-6226 - Processing maliciously crafted web content may lead to arbitrary code execution. Multiple memory corruption issues were addressed with improved memory handling.</p>
	  <p>CVE-2019-6227 - Processing maliciously crafted web content may lead to arbitrary code execution. A memory corruption issue was addressed with improved memory handling.</p>
	  <p>CVE-2019-6229 - Processing maliciously crafted web content may lead to universal cross site scripting. A logic issue was addressed with improved validation.</p>
	  <p>CVE-2019-6233 - Processing maliciously crafted web content may lead to arbitrary code execution. A memory corruption issue was addressed with improved memory handling.</p>
	  <p>CVE-2019-6234 - Processing maliciously crafted web content may lead to arbitrary code execution. A memory corruption issue was addressed with improved memory handling.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://webkitgtk.org/security/WSA-2019-0001.html</url>
      <cvename>CVE-2019-6212</cvename>
      <cvename>CVE-2019-6215</cvename>
      <cvename>CVE-2019-6216</cvename>
      <cvename>CVE-2019-6217</cvename>
      <cvename>CVE-2019-6226</cvename>
      <cvename>CVE-2019-6227</cvename>
      <cvename>CVE-2019-6229</cvename>
      <cvename>CVE-2019-6233</cvename>
      <cvename>CVE-2019-6234</cvename>
    </references>
    <dates>
      <discovery>2019-02-08</discovery>
      <entry>2019-02-24</entry>
    </dates>
  </vuln>

  <vuln vid="3e2c9b63-223c-4575-af5c-816acb14e445">
    <topic>rdesktop - critical - Remote Code Execution</topic>
    <affects>
      <package>
	<name>rdesktop</name>
	<range><lt>1.8.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://github.com/rdesktop/rdesktop/releases/tag/v1.8.4">
	  <ul>
	    <li>Fix memory corruption in process_bitmap_data - CVE-2018-8794
	      </li>
	    <li>Fix remote code execution in process_bitmap_data - CVE-2018-8795
	      </li>
	    <li>Fix remote code execution in process_plane - CVE-2018-8797
	      </li>
	    <li>Fix Denial of Service in mcs_recv_connect_response - CVE-2018-20175
	      </li>
	    <li>Fix Denial of Service in mcs_parse_domain_params - CVE-2018-20175
	      </li>
	    <li>Fix Denial of Service in sec_parse_crypt_info - CVE-2018-20176
	      </li>
	    <li>Fix Denial of Service in sec_recv - CVE-2018-20176
	      </li>
	    <li>Fix minor information leak in rdpdr_process - CVE-2018-8791
	      </li>
	    <li>Fix Denial of Service in cssp_read_tsrequest - CVE-2018-8792
	      </li>
	    <li>Fix remote code execution in cssp_read_tsrequest - CVE-2018-8793
	      </li>
	    <li>Fix Denial of Service in process_bitmap_data - CVE-2018-8796
	      </li>
	    <li>Fix minor information leak in rdpsnd_process_ping - CVE-2018-8798
	      </li>
	    <li>Fix Denial of Service in process_secondary_order - CVE-2018-8799
	      </li>
	    <li>Fix remote code execution in in ui_clip_handle_data - CVE-2018-8800
	      </li>
	    <li>Fix major information leak in ui_clip_handle_data - CVE-2018-20174
	      </li>
	    <li>Fix memory corruption in rdp_in_unistr - CVE-2018-20177
	      </li>
	    <li>Fix Denial of Service in process_demand_active - CVE-2018-20178
	      </li>
	    <li>Fix remote code execution in lspci_process - CVE-2018-20179
	      </li>
	    <li>Fix remote code execution in rdpsnddbg_process - CVE-2018-20180
	      </li>
	    <li>Fix remote code execution in seamless_process - CVE-2018-20181
	      </li>
	    <li>Fix remote code execution in seamless_process_line - CVE-2018-20182
	      </li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/rdesktop/rdesktop/releases/tag/v1.8.4</url>
      <cvename>CVE-2018-20175</cvename>
      <cvename>CVE-2018-20176</cvename>
      <cvename>CVE-2018-8791</cvename>
      <cvename>CVE-2018-8792</cvename>
      <cvename>CVE-2018-8793</cvename>
      <cvename>CVE-2018-8794</cvename>
      <cvename>CVE-2018-8795</cvename>
      <cvename>CVE-2018-8796</cvename>
      <cvename>CVE-2018-8797</cvename>
      <cvename>CVE-2018-8798</cvename>
      <cvename>CVE-2018-8799</cvename>
      <cvename>CVE-2018-8800</cvename>
      <cvename>CVE-2018-20174</cvename>
      <cvename>CVE-2018-20177</cvename>
      <cvename>CVE-2018-20178</cvename>
      <cvename>CVE-2018-20179</cvename>
      <cvename>CVE-2018-20180</cvename>
      <cvename>CVE-2018-20181</cvename>
      <cvename>CVE-2018-20182</cvename>
    </references>
    <dates>
      <discovery>2019-01-02</discovery>
      <entry>2019-02-22</entry>
    </dates>
  </vuln>

  <vuln vid="002b4b05-35dd-11e9-94a8-000ffec0b3e1">
    <topic>drupal -- Drupal core - Highly critical - Remote Code Execution</topic>
    <affects>
      <package>
	<name>drupal8</name>
	<range><lt>8.6.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team</p>
	<blockquote cite="https://www.drupal.org/SA-CORE-2019-003">
	  <p>Some field types do not properly sanitize data from non-form sources.
	This can lead to arbitrary PHP code execution in some cases..</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/sa-core-2019-002</url>
      <cvename>CVE-2019-6340</cvename>
    </references>
    <dates>
      <discovery>2019-02-20</discovery>
      <entry>2019-02-21</entry>
    </dates>
  </vuln>

  <vuln vid="7700061f-34f7-11e9-b95c-b499baebfeaf">
    <topic>OpenSSL -- Padding oracle vulnerability</topic>
    <affects>
      <package>
	<name>openssl</name>
	<range><lt>1.0.2r,1</lt></range>
      </package>
      <package>
	<name>linux-c6-openssl</name>
	<range><lt>1.0.1e_16</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The OpenSSL project reports:</p>
	<blockquote cite="https://www.openssl.org/news/secadv/20190226.txt">
	  <p>0-byte record padding oracle (CVE-2019-1559) (Moderate)<br/>
	    If an application encounters a fatal protocol error and then calls
	    SSL_shutdown() twice (once to send a close_notify, and once to receive
	    one) then OpenSSL can respond differently to the calling application if
	    a 0 byte record is received with invalid padding compared to if a 0 byte
	    record is received with an invalid MAC. If the application then behaves
	    differently based on that in a way that is detectable to the remote peer,
	    then this amounts to a padding oracle that could be used to decrypt data.
	    </p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.openssl.org/news/secadv/20190226.txt</url>
      <cvename>CVE-2019-1559</cvename>
    </references>
    <dates>
      <discovery>2019-02-19</discovery>
      <entry>2019-02-20</entry>
      <modified>2019-03-07</modified>
    </dates>
  </vuln>

  <vuln vid="f0416fb5-3130-11e9-a5ba-e0d55e883e26">
    <topic>msmtp -- certificate-verification issue</topic>
    <affects>
      <package>
	<name>msmtp</name>
	<range><gt>1.8.1</gt><lt>1.8.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>msmtp developers report:</p>
	<blockquote cite="https://marlam.de/msmtp/news/msmtp-1-8-3/">
	  <p>In msmtp 1.8.2, when tls_trust_file has its default configuration,
	    certificate-verification results are not properly checked.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://marlam.de/msmtp/news/msmtp-1-8-3/</url>
      <cvename>CVE-2019-8337</cvename>
    </references>
    <dates>
      <discovery>2019-02-11</discovery>
      <entry>2019-02-15</entry>
    </dates>
  </vuln>

  <vuln vid="18211552-f650-4d86-ba4f-e6d5cbfcdbeb">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>65.0.1,1</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.5.1,1</lt></range>
      </package>
      <package>
	<name>thunderbird</name>
	<range><lt>60.5.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-04/">
	  <p>CVE-2018-18356: Use-after-free in Skia</p>
	  <p>CVE-2019-5785: Integer overflow in Skia</p>
	  <p>CVE-2018-18511: Cross-origin theft of images with ImageBitmapRenderingContext</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-18511</cvename>
      <cvename>CVE-2018-18356</cvename>
      <cvename>CVE-2019-5785</cvename>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-04/</url>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-05/</url>
    </references>
    <dates>
      <discovery>2019-02-13</discovery>
      <entry>2019-02-13</entry>
    </dates>
  </vuln>

  <vuln vid="de11a8fb-2eda-11e9-8fb5-6451062f0f7a">
    <topic>Flash Player -- information disclosure</topic>
    <affects>
      <package>
	<name>linux-flashplayer</name>
	<range><lt>32.0.0.142</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Adobe reports:</p>
	<blockquote cite="https://helpx.adobe.com/security/products/flash-player/apsb19-06.html">
	  <ul>
	    <li>This update resolves an out-of-bounds vulnerability that
	      could lead to information disclosure (CVE-2019-7090).</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-7090</cvename>
      <url>https://helpx.adobe.com/security/products/flash-player/apsb19-06.html</url>
    </references>
    <dates>
      <discovery>2019-02-12</discovery>
      <entry>2019-02-12</entry>
    </dates>
  </vuln>

  <vuln vid="5efd7a93-2dfb-11e9-9549-e980e869c2e9">
    <topic>OpenJPEG -- integer overflow</topic>
    <affects>
      <package>
	<name>openjpeg</name>
	<range><lt>2.3.0_4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>NVD reports:</p>
	<blockquote cite="https://nvd.nist.gov/vuln/detail/CVE-2018-5727">
	  <p>In OpenJPEG 2.3.0, there is an integer overflow vulnerability in the
	    opj_t1_encode_cblks function (openjp2/t1.c). Remote attackers could
	    leverage this vulnerability to cause a denial of service via a crafted
	    bmp file.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2018-5727</url>
      <url>https://github.com/uclouvain/openjpeg/issues/1053</url>
      <cvename>CVE-2018-5727</cvename>
    </references>
    <dates>
      <discovery>2017-12-08</discovery>
      <entry>2019-02-11</entry>
      <modified>2019-03-29</modified>
    </dates>
  </vuln>

  <vuln vid="86c89abf-2d91-11e9-bf3e-a4badb2f4699">
    <topic>FreeBSD -- File description reference count leak</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>FreeBSD 12.0 attempts to handle the case where the
	receiving process does not provide a sufficiently large
	buffer for an incoming control message containing rights.
	In particular, to avoid leaking the corresponding descriptors
	into the receiving process' descriptor table, the kernel
	handles the truncation case by closing descriptors referenced
	by the discarded message.</p>
	<p>The code which performs this operation failed to release
	a reference obtained on the file corresponding to a received
	right. This bug can be used to cause the reference counter
	to wrap around and free the file structure.</p>
	<h1>Impact:</h1>
	<p>A local user can exploit the bug to gain root privileges
	or escape from a jail.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5596</cvename>
      <freebsdsa>SA-19:02.fd</freebsdsa>
    </references>
    <dates>
      <discovery>2019-02-05</discovery>
      <entry>2019-02-11</entry>
    </dates>
  </vuln>

  <vuln vid="683c714d-2d91-11e9-bf3e-a4badb2f4699">
    <topic>FreeBSD -- System call kernel data register leak</topic>
    <affects>
      <package>
	<name>FreeBSD-kernel</name>
	<range><ge>12.0</ge><lt>12.0_3</lt></range>
	<range><ge>11.2</ge><lt>11.2_9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<h1>Problem Description:</h1>
	<p>The callee-save registers are used by kernel and for
	some of them (%r8, %r10, and for non-PTI configurations,
	%r9) the content is not sanitized before return from syscalls,
	potentially leaking sensitive information.</p>
	<h1>Impact:</h1>
	<p>Typically an address of some kernel data structure used
	in the syscall implementation, is exposed.</p>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5595</cvename>
      <freebsdsa>SA-19:01.syscall</freebsdsa>
    </references>
    <dates>
      <discovery>2019-02-05</discovery>
      <entry>2019-02-11</entry>
    </dates>
  </vuln>

  <vuln vid="e8bcac84-2d5c-11e9-9a74-e0d55e2a8bf9">
    <topic>kf5-kauth -- Insecure handling of arguments in helpers</topic>
    <affects>
      <package>
	<name>kf5-kauth</name>
	<range><lt>5.54.0_2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Albert Astals Cid  reports:</p>
	<blockquote cite="https://www.kde.org/info/security/advisory-20190209-1.txt">
	<p>KAuth allows to pass parameters with arbitrary types to helpers running as root over DBus.</p>
	<p>Certain types can cause crashes and trigger decoding arbitrary images with dynamically loaded plugin</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.kde.org/info/security/advisory-20190209-1.txt</url>
      <cvename>CVE-2019-7443</cvename>
    </references>
    <dates>
      <discovery>2019-02-09</discovery>
      <entry>2019-02-10</entry>
    </dates>
  </vuln>

  <vuln vid="c95836a0-2b3b-11e9-9838-8c164567ca3c">
    <topic>unit -- heap memory buffer overflow</topic>
    <affects>
      <package>
	<name>unit</name>
	<range><ge>0.3.0</ge><lt>1.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>unit security problems:</p>
	<blockquote cite="http://mailman.nginx.org/pipermail/unit/2019-February/000112.html">
	  <p>CVE-2019-7401: a head memory buffer overflow might have</p>
	  <p>been caused in the router process by a specially crafted</p>
	  <p>request, potentially resulting in a segmentation fault</p>
	  <p>or other unspecified behavior.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://mailman.nginx.org/pipermail/unit/2019-February/000112.html</url>
      <cvename>CVE-2019-7401</cvename>
    </references>
    <dates>
      <discovery>2019-02-07</discovery>
      <entry>2019-02-08</entry>
    </dates>
  </vuln>

  <vuln vid="714b033a-2b09-11e9-8bc3-610fd6e6cd05">
    <topic>curl -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>curl</name>
	<range><lt>7.64.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>curl security problems:</p>
	<blockquote cite="https://curl.haxx.se/docs/security.html">
	  <p>CVE-2018-16890: NTLM type-2 out-of-bounds buffer read</p>
	  <p>libcurl contains a heap buffer out-of-bounds read flaw.</p>
	  <p>The function handling incoming NTLM type-2 messages
	    (lib/vauth/ntlm.c:ntlm_decode_type2_target) does not validate incoming
	    data correctly and is subject to an integer overflow vulnerability.</p>
	  <p>Using that overflow, a malicious or broken NTLM server could trick
	    libcurl to accept a bad length + offset combination that would lead to a
	    buffer read out-of-bounds.</p>
	  <p>CVE-2019-3822: NTLMv2 type-3 header stack buffer overflow</p>
	  <p>libcurl contains a stack based buffer overflow vulnerability.</p>
	  <p>The function creating an outgoing NTLM type-3 header
	    (lib/vauth/ntlm.c:Curl_auth_create_ntlm_type3_message()), generates the
	    request HTTP header contents based on previously received data. The
	    check that exists to prevent the local buffer from getting overflowed is
	    implemented wrongly (using unsigned math) and as such it does not
	    prevent the overflow from happening.</p>
	  <p>This output data can grow larger than the local buffer if very large
	    "nt response" data is extracted from a previous NTLMv2 header provided
	    by the malicious or broken HTTP server.</p>
	  <p>Such a "large value" needs to be around 1000 bytes or more. The actual
	    payload data copied to the target buffer comes from the NTLMv2 type-2
	    response header.</p>
	  <p>CVE-2019-3823: SMTP end-of-response out-of-bounds read</p>
	  <p>libcurl contains a heap out-of-bounds read in the code handling the
	    end-of-response for SMTP.</p>
	  <p>If the buffer passed to smtp_endofresp() isn't NUL terminated and
	    contains no character ending the parsed number, and len is set to 5,
	    then the strtol() call reads beyond the allocated buffer. The read
	    contents will not be returned to the caller.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://curl.haxx.se/docs/security.html</url>
      <url>https://curl.haxx.se/docs/CVE-2018-16890.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-3822.html</url>
      <url>https://curl.haxx.se/docs/CVE-2019-3823.html</url>
      <cvename>CVE-2018-16890</cvename>
      <cvename>CVE-2019-3822</cvename>
      <cvename>CVE-2019-3823</cvename>
    </references>
    <dates>
      <discovery>2019-02-07</discovery>
      <entry>2019-02-07</entry>
    </dates>
  </vuln>

  <vuln vid="43ee6c1d-29ee-11e9-82a1-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.7.0</ge><lt>11.7.4</lt></range>
	<range><ge>11.6.0</ge><lt>11.6.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/02/05/critical-security-release-gitlab-11-dot-7-dot-4-released/">
	  <p>Leak of Confidential Issue and Merge Request Titles</p>
	  <p>Persistent XSS in User Status</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/02/05/critical-security-release-gitlab-11-dot-7-dot-4-released/</url>
      <cvename>CVE-2019-7353</cvename>
      <cvename>CVE-2019-6796</cvename>
    </references>
    <dates>
      <discovery>2019-02-05</discovery>
      <entry>2019-02-06</entry>
    </dates>
  </vuln>

  <vuln vid="1340fcc1-2953-11e9-bc44-a4badb296695">
    <topic>mail/dovecot -- Suitable client certificate can be used to login as other user</topic>
    <affects>
      <package>
	<name>dovecot</name>
	<range><lt>2.3.4.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Aki Tuomi (Open-Xchange  Oy) reports:</p>
	<blockquote cite="https://www.mail-archive.com/dovecot@dovecot.org/msg76117.html">
	  <p>Normally Dovecot is configured to authenticate
imap/pop3/managesieve/submission clients using regular username/password
combination. Some installations have also required clients to present a
trusted SSL certificate on top of that. It's also possible to configure
Dovecot to take the username from the certificate instead of from the
user provided authentication. It's also possible to avoid having a
password at all, only trusting the SSL certificate.

If the provided trusted SSL certificate is missing the username field,
Dovecot should be failing the authentication. However, the earlier
versions will take the username from the user provided authentication
fields (e.g. LOGIN command). If there is no additional password
verification, this allows the attacker to login as anyone else in the
system.

This affects only installations using:

auth_ssl_require_client_cert = yes
auth_ssl_username_from_cert = yes

Attacker must also have access to a valid trusted certificate without
the ssl_cert_username_field in it. The default is commonName, which
almost certainly exists in all certificates. This could happen for
example if ssl_cert_username_field is a field that normally doesn't
exist, and attacker has access to a web server's certificate (and key),
which is signed with the same CA.

Attack can be migitated by having the certificates with proper Extended
Key Usage, such as 'TLS Web Server' and 'TLS Web Server Client'.

Also, ssl_cert_username_field setting was ignored with external SMTP
AUTH, because none of the MTAs (Postfix, Exim) currently send the
cert_username field. This may have allowed users with trusted
certificate to specify any username in the authentication. This does not
apply to Dovecot Submission service.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.mail-archive.com/dovecot@dovecot.org/msg76117.html</url>
      <cvename>CVE-2019-3814</cvename>
    </references>
    <dates>
      <discovery>2019-01-16</discovery>
      <entry>2019-02-05</entry>
    </dates>
  </vuln>

  <vuln vid="5d8c0876-2716-11e9-9446-b7f8544ce15c">
    <topic>typo3 -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>typo3-8-php71</name>
	<name>typo3-8-php72</name>
	<name>typo3-8-php73</name>
	<range><lt>8.7.24</lt></range>
      </package>
      <package>
	<name>typo3-9-php71</name>
	<name>typo3-9-php72</name>
	<name>typo3-9-php73</name>
	<range><lt>9.5.4</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Typo3 news:</p>
	<blockquote cite="https://typo3.org/article/typo3-954-and-8723-security-releases-published/">
	  <p>Please read the corresponding Security Advisories for details.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://typo3.org/article/typo3-954-and-8723-security-releases-published/</url>
      <url>https://typo3.org/article/typo3-v8724-lts-released/</url>
    </references>
    <dates>
      <discovery>2019-01-22</discovery>
      <entry>2019-02-02</entry>
    </dates>
  </vuln>

  <vuln vid="41c1cd6f-2645-11e9-b5f1-080027fee39c">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.7.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitea Team reports:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.7.0">
	  <p>Disable redirect for i18n</p>
	  <p>Only allow local login if password is non-empty</p>
	  <p>Fix go-get URL generation</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.7.1</url>
    </references>
    <dates>
      <discovery>2019-01-31</discovery>
      <entry>2019-02-01</entry>
    </dates>
  </vuln>

  <vuln vid="22b90fe6-258e-11e9-9c8d-6805ca0b3d42">
    <topic>p5-Email-Address-List -- DDoS related vulnerability</topic>
    <affects>
      <package>
	<name>p5-Email-Address-List</name>
	<range><lt>0.06</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Best PRactical Solutions reports:</p>
	<blockquote cite="https://metacpan.org/source/BPS/Email-Address-List-0.06/Changes">
	  <pre>
 0.06 2019-01-02

 - Changes to address CVE-2018-18898 which could allow DDoS-type attacks.
   Thanks to Lukas Kramer for reporting the issue and Alex Vandiver for
   contributing fixes.
   - Fix pathological backtracking for unkown regex
   - Fix pathological backtracking in obs-phrase(i.e. obs-display-name)
   - Fix pathological backtracking in cfws, quoted strings
	  </pre>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://metacpan.org/source/BPS/Email-Address-List-0.06/Changes</url>
      <cvename>CVE-2018-18898</cvename>
    </references>
    <dates>
      <discovery>2019-01-02</discovery>
      <entry>2019-01-31</entry>
    </dates>
  </vuln>

  <vuln vid="467b7cbe-257d-11e9-8573-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.7.0</ge><lt>11.7.3</lt></range>
	<range><ge>11.6.0</ge><lt>11.6.8</lt></range>
	<range><ge>0.0.0</ge><lt>11.5.10</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/01/31/security-release-gitlab-11-dot-7-dot-3-released/">
	  <p>Remote Command Execution via GitLab Pages</p>
	  <p>Covert Redirect to Steal GitHub/Bitbucket Tokens</p>
	  <p>Remote Mirror Branches Leaked by Git Transfer Refs</p>
	  <p>Denial of Service with Markdown</p>
	  <p>Guests Can View List of Group Merge Requests</p>
	  <p>Guest Can View Merge Request Titles via System Notes</p>
	  <p>Persistent XSS via KaTeX</p>
	  <p>Emails Sent to Unauthorized Users</p>
	  <p>Hyperlink Injection in Notification Emails</p>
	  <p>Unauthorized Access to LFS Objects</p>
	  <p>Trigger Token Exposure</p>
	  <p>Upgrade Rails to 5.0.7.1 and 4.2.11</p>
	  <p>Contributed Project Information Visible in Private Profile</p>
	  <p>Imported Project Retains Prior Visibility Setting</p>
	  <p>Error disclosure on Project Import</p>
	  <p>Persistent XSS in User Status</p>
	  <p>Last Commit Status Leaked to Guest Users</p>
	  <p>Mitigations for IDN Homograph and RTLO Attacks</p>
	  <p>Access to Internal Wiki When External Wiki Enabled</p>
	  <p>User Can Comment on Locked Project Issues</p>
	  <p>Unauthorized Reaction Emojis by Guest Users</p>
	  <p>User Retains Project Role After Removal from Private Group</p>
	  <p>GitHub Token Leaked to Maintainers</p>
	  <p>Unauthenticated Blind SSRF in Jira Integration</p>
	  <p>Unauthorized Access to Group Membership</p>
	  <p>Validate SAML Response in Group SAML SSO</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/01/31/security-release-gitlab-11-dot-7-dot-3-released/</url>
      <cvename>CVE-2019-6783</cvename>
      <cvename>CVE-2019-6788</cvename>
      <cvename>CVE-2019-6785</cvename>
      <cvename>CVE-2019-6790</cvename>
      <cvename>CVE-2019-6997</cvename>
      <cvename>CVE-2019-6784</cvename>
      <cvename>CVE-2019-6789</cvename>
      <cvename>CVE-2019-6781</cvename>
      <cvename>CVE-2019-6786</cvename>
      <cvename>CVE-2019-6787</cvename>
      <cvename>CVE-2018-16476</cvename>
      <cvename>CVE-2019-6782</cvename>
      <cvename>CVE-2019-6791</cvename>
      <cvename>CVE-2019-6792</cvename>
      <cvename>CVE-2019-6796</cvename>
      <cvename>CVE-2019-6794</cvename>
      <cvename>CVE-2019-6795</cvename>
      <cvename>CVE-2019-6960</cvename>
      <cvename>CVE-2019-6995</cvename>
      <cvename>CVE-2019-7176</cvename>
      <cvename>CVE-2019-7155</cvename>
      <cvename>CVE-2019-6797</cvename>
      <cvename>CVE-2019-6793</cvename>
      <cvename>CVE-2019-6996</cvename>
    </references>
    <dates>
      <discovery>2019-01-31</discovery>
      <entry>2019-01-31</entry>
    </dates>
  </vuln>

  <vuln vid="181beef6-2482-11e9-b4a3-00155d006b02">
    <topic>turnserver -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>turnserver</name>
	<range><lt>4.5.1.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mihály Mészáros reports:</p>
	<blockquote cite="https://github.com/coturn/coturn/blob/4.5.1.0/ChangeLog">
	  <p>We made 4.5.1.0 release public today that fixes many vulnerabilities.</p>
	  <p>It fix the following vulnerabilities:</p>
	  <ul>
	    <li>CVE-2018-4056</li>
	    <li>CVE-2018-4058</li>
	    <li>CVE-2018-4059</li>
	  </ul>
	  <p>They will be exposed very soon..</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/coturn/coturn/blob/4.5.1.0/ChangeLog</url>
      <url>https://groups.google.com/d/msg/turn-server-project-rfc5766-turn-server/0RuCzcQa0ew/ebZfNEDqBwAJ</url>
      <cvename>CVE-2018-4056</cvename>
      <cvename>CVE-2018-4058</cvename>
      <cvename>CVE-2018-4059</cvename>
    </references>
    <dates>
      <discovery>2019-01-28</discovery>
      <entry>2019-01-30</entry>
    </dates>
  </vuln>

  <vuln vid="b1f7d52f-fc42-48e8-8403-87d4c9d26229">
    <topic>mozilla -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>firefox</name>
	<range><lt>65.0_1,1</lt></range>
      </package>
      <package>
	<name>waterfox</name>
	<range><lt>56.2.7</lt></range>
      </package>
      <package>
	<name>seamonkey</name>
	<name>linux-seamonkey</name>
	<range><lt>2.53.0</lt></range>
      </package>
      <package>
	<name>firefox-esr</name>
	<range><lt>60.5.0_1,1</lt></range>
      </package>
      <package>
	<name>linux-firefox</name>
	<range><lt>60.5.0,2</lt></range>
      </package>
      <package>
	<name>libxul</name>
	<name>thunderbird</name>
	<name>linux-thunderbird</name>
	<range><lt>60.5.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Mozilla Foundation reports:</p>
	<blockquote cite="https://www.mozilla.org/en-US/security/advisories/mfsa2019-01/">
	  <p>CVE-2018-18500: Use-after-free parsing HTML5 stream</p>
	  <p>CVE-2018-18503: Memory corruption with Audio Buffer</p>
	  <p>CVE-2018-18504: Memory corruption and out-of-bounds read of texture client buffer</p>
	  <p>CVE-2018-18505: Privilege escalation through IPC channel messages</p>
	  <p>CVE-2018-18506: Proxy Auto-Configuration file can define localhost access to be proxied</p>
	  <p>CVE-2018-18502: Memory safety bugs fixed in Firefox 65</p>
	  <p>CVE-2018-18501: Memory safety bugs fixed in Firefox 65 and Firefox ESR 60.5</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-18500</cvename>
      <cvename>CVE-2018-18501</cvename>
      <cvename>CVE-2018-18502</cvename>
      <cvename>CVE-2018-18503</cvename>
      <cvename>CVE-2018-18504</cvename>
      <cvename>CVE-2018-18505</cvename>
      <cvename>CVE-2018-18506</cvename>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-01/</url>
      <url>https://www.mozilla.org/en-US/security/advisories/mfsa2019-02/</url>
    </references>
    <dates>
      <discovery>2019-01-29</discovery>
      <entry>2019-01-29</entry>
      <modified>2019-07-23</modified>
    </dates>
  </vuln>

  <vuln vid="40d92cc5-1e2b-11e9-bef6-6805ca2fa271">
    <topic>powerdns-recursor -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>powerdns-recursor</name>
	<range><lt>4.1.9</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>PowerDNS Team reports:</p>
	<blockquote cite="https://doc.powerdns.com/recursor/changelog/4.1.html">
	  <p>CVE-2019-3806: An issue has been found in PowerDNS Recursor where Lua hooks are
	   not properly applied to queries received over TCP in some specific combination of
	   settings, possibly bypassing security policies enforced using Lua.

	   When the recursor is configured to run with more than one thread (threads=X) and to
	   do the distribution of incoming queries to the worker threads itself
	   (pdns-distributes-queries=yes), the Lua script is not properly loaded in the thread
	   handling incoming TCP queries, causing the Lua hooks to not be properly applied.</p>
	  <p>CVE-2019-3807: An issue has been found in PowerDNS Recursor where records in the
	   answer section of responses received from authoritative servers with the AA flag not
	   set were not properly validated, allowing an attacker to bypass DNSSEC validation.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://doc.powerdns.com/recursor/changelog/4.1.html</url>
      <cvename>CVE-2019-3806</cvename>
      <cvename>CVE-2019-3807</cvename>
    </references>
    <dates>
      <discovery>2019-01-21</discovery>
      <entry>2019-01-22</entry>
    </dates>
  </vuln>

  <vuln vid="d3d02d3a-2242-11e9-b95c-b499baebfeaf">
    <topic>MySQL -- multiple vulnerabilities</topic>
    <affects>
      <package>
  <name>mariadb55-server</name>
  <range><lt>5.5.63</lt></range>
      </package>
      <package>
  <name>mariadb100-server</name>
  <range><lt>10.0.38</lt></range>
      </package>
      <package>
  <name>mariadb101-server</name>
  <range><lt>10.1.38</lt></range>
      </package>
      <package>
  <name>mariadb102-server</name>
  <range><lt>10.2.22</lt></range>
      </package>
      <package>
  <name>mariadb103-server</name>
  <range><lt>10.3.13</lt></range>
      </package>
      <package>
  <name>mysql55-server</name>
  <range><lt>5.5.63</lt></range>
      </package>
      <package>
  <name>mysql56-server</name>
  <range><lt>5.6.43</lt></range>
      </package>
      <package>
  <name>mysql57-server</name>
  <range><lt>5.7.25</lt></range>
      </package>
      <package>
  <name>mysql80-server</name>
  <range><lt>8.0.14</lt></range>
      </package>
      <package>
  <name>percona55-server</name>
  <range><lt>5.5.63</lt></range>
      </package>
      <package>
  <name>percona56-server</name>
  <range><lt>5.6.43</lt></range>
      </package>
      <package>
  <name>percona57-server</name>
  <range><lt>5.7.25</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
  <p>Oracle reports:</p>
  <blockquote cite="https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html#AppendixMSQL">
    <p>Please reference CVE/URL list for details</p>
    <p>Not all listed CVE's are present in all versions/flavors</p>
  </blockquote>
      </body>
    </description>
    <references>
      <url>https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html#AppendixMSQL</url>
      <cvename>CVE-2019-2534</cvename>
      <cvename>CVE-2019-2533</cvename>
      <cvename>CVE-2019-2529</cvename>
      <cvename>CVE-2019-2482</cvename>
      <cvename>CVE-2019-2434</cvename>
      <cvename>CVE-2019-2455</cvename>
      <cvename>CVE-2019-2503</cvename>
      <cvename>CVE-2019-2436</cvename>
      <cvename>CVE-2019-2536</cvename>
      <cvename>CVE-2019-2502</cvename>
      <cvename>CVE-2019-2510</cvename>
      <cvename>CVE-2019-2539</cvename>
      <cvename>CVE-2019-2494</cvename>
      <cvename>CVE-2019-2495</cvename>
      <cvename>CVE-2019-2537</cvename>
      <cvename>CVE-2019-2420</cvename>
      <cvename>CVE-2019-2481</cvename>
      <cvename>CVE-2019-2507</cvename>
      <cvename>CVE-2019-2530</cvename>
      <cvename>CVE-2019-2528</cvename>
      <cvename>CVE-2019-2531</cvename>
      <cvename>CVE-2019-2486</cvename>
      <cvename>CVE-2019-2532</cvename>
      <cvename>CVE-2019-2535</cvename>
      <cvename>CVE-2019-2513</cvename>
    </references>
    <dates>
      <discovery>2019-01-15</discovery>
      <entry>2019-01-27</entry>
    </dates>
  </vuln>

  <vuln vid="d8e7e854-17fa-11e9-bef6-6805ca2fa271">
    <topic>botan2 -- Side channel during ECC key generation</topic>
    <affects>
      <package>
	<name>botan2</name>
	<range><lt>2.9.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>botan2 developers reports:</p>
	<blockquote cite="https://botan.randombit.net/security.html#id1">
	  <p>A timing side channel during ECC key generation could leak information about the
		high bits of the secret scalar. Such information allows an attacker to perform a
		brute force attack on the key somewhat more efficiently than they would otherwise.
		Found by Ján Jančár using ECTester.</p>
	  <p>Bug introduced in 1.11.20, fixed in 2.9.0</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://botan.randombit.net/security.html#id1</url>
      <cvename>CVE-2018-20187</cvename>
    </references>
    <dates>
      <discovery>2018-12-17</discovery>
      <entry>2019-01-27</entry>
    </dates>
  </vuln>

  <vuln vid="111aefca-2213-11e9-9c8d-6805ca0b3d42">
    <topic>phpMyAdmin -- File disclosure and SQL injection</topic>
    <affects>
      <package>
	<name>phpMyAdmin</name>
	<name>phpMyAdmin-php56</name>
	<name>phpMyAdmin-php70</name>
	<name>phpMyAdmin-php71</name>
	<name>phpMyAdmin-php72</name>
	<range><lt>4.8.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The phpMyAdmin development team reports:</p>
	<blockquote cite="https://www.phpmyadmin.net/security/PMASA-2019-1/">
	  <h3>Summary</h3>
	  <p>Arbitrary file read vulnerability</p>
	  <h3>Description</h3>
	  <p>When <code>AllowArbitraryServer</code> configuration set
	    to <code>true</code>, with the use of a rogue MySQL server,
	    an attacker can read any file on the server that the web
	    server's user can access.</p>
	  <p>phpMyadmin attempts to block the use of <code>LOAD DATA
	    INFILE</code>, but due to a <a href="https://bugs.php.net/bug.php?id=77496">bug in PHP</a>,
	    this check is not honored. Additionally, when using the
	    'mysql' extension, <a href="http://php.net/manual/en/mysql.configuration.php#ini.mysql.allow-local-infile">mysql.allow_local_infile</a>
	    is enabled by default. Both of these conditions allow the
	    attack to occur.</p>
	  <h3>Severity</h3>
	  <p>We consider this vulnerability to be critical.</p>
	  <h3>Mitigation factor</h3>
	  <p>This attack can be mitigated by setting the
	    `AllowArbitraryServer` configuration directive to false
	    (which is the default value).</p>
	  <h3>Affected Versions</h3>
	  <p>phpMyAdmin versions from at least 4.0 through 4.8.4 are
	    affected</p>
	</blockquote>
	<blockquote cite="https://www.phpmyadmin.net/security/PMASA-2019-2/">
	  <h3>Summary</h3>
	  <p>SQL injection in Designer feature</p>
	  <h3>Description</h3>
	  <p>A vulnerability was reported where a specially crafted
	    username can be used to trigger an SQL injection attack
	    through the designer feature.</p>
	  <h3>Severity</h3>
	  <p>We consider this vulnerability to be serious.</p>
	  <h3>Affected Versions</h3>
	  <p>phpMyAdmin versions from 4.5.0 through 4.8.4 are affected</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.phpmyadmin.net/security/PMASA-2019-1/</url>
      <url>https://www.phpmyadmin.net/security/PMASA-2019-2/</url>
    </references>
    <dates>
      <discovery>2019-01-21</discovery>
      <entry>2019-01-27</entry>
    </dates>
  </vuln>

  <vuln vid="7f6146aa-2157-11e9-9ba0-4c72b94353b5">
    <topic>gitea -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.7.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitea Team reports:</p>
	<blockquote cite="https://github.com/go-gitea/gitea/releases/tag/v1.7.0">
	  <p>Do not display the raw OpenID error in the UI</p>
	  <p>When redirecting clean the path to avoid redirecting to external site</p>
	  <p>Prevent DeleteFilePost doing arbitrary deletion</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/releases/tag/v1.7.0</url>
    </references>
    <dates>
      <discovery>2019-01-22</discovery>
      <entry>2019-01-26</entry>
    </dates>
  </vuln>

  <vuln vid="8e48365a-214d-11e9-9f8a-0050562a4d7b">
    <topic>libzmq4 -- Remote Code Execution Vulnerability</topic>
    <affects>
      <package>
	<name>libzmq4</name>
	<range><ge>4.2.0</ge><lt>4.3.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://github.com/zeromq/libzmq/releases/tag/v4.3.1">
	  <p>A vulnerability has been found that would allow attackers to direct a peer to
	     jump to and execute from an address indicated by the attacker.
	     This issue has been present since v4.2.0. Older releases are not affected.

	     NOTE: The attacker needs to know in advance valid addresses in the peer's
	     memory to jump to, so measures like ASLR are effective mitigations.

	     NOTE: this attack can only take place after authentication, so peers behind
	     CURVE/GSSAPI are not vulnerable to unauthenticated attackers.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-6250</cvename>
      <url>https://github.com/zeromq/libzmq/issues/3351</url>
      <url>https://github.com/zeromq/libzmq/pull/3353</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2019-6250</url>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6250</url>
    </references>
    <dates>
      <discovery>2019-01-08</discovery>
      <entry>2019-01-26</entry>
    </dates>
  </vuln>

  <vuln vid="eb888ce5-1f19-11e9-be05-4c72b94353b5">
    <topic>Apache -- vulnerability</topic>
    <affects>
      <package>
	<name>apache24</name>
	<range><lt>2.4.38</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Apache httpd Project reports:</p>
	<blockquote cite="http://httpd.apache.org/security/vulnerabilities_24.html">
	  <p>SECURITY: CVE-2018-17199
	    mod_session: mod_session_cookie does not respect expiry time allowing
	    sessions to be reused.</p>
	  <p>SECURITY: CVE-2019-0190
	    mod_ssl: Fix infinite loop triggered by a client-initiated
	    renegotiation in TLSv1.2 (or earlier) with OpenSSL 1.1.1 and
	    later.  PR 63052.</p>
	  <p>SECURITY: CVE-2018-17189
	    mod_http2: fixes a DoS attack vector. By sending slow request bodies
	    to resources not consuming them, httpd cleanup code occupies a server
	    thread unnecessarily. This was changed to an immediate stream reset
	    which discards all stream state and incoming data.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://www.apache.org/dist/httpd/CHANGES_2.4.38</url>
      <url>http://httpd.apache.org/security/vulnerabilities_24.html</url>
	<cvename>CVE-2018-17199</cvename>
	<cvename>CVE-2018-17189</cvename>
	<cvename>CVE-2019-0190</cvename>
    </references>
    <dates>
      <discovery>2019-01-22</discovery>
      <entry>2019-01-23</entry>
    </dates>
  </vuln>

  <vuln vid="4af3241d-1f0c-11e9-b4bd-d43d7eed0ce2">
    <topic>www/mod_dav_svn -- Malicious SVN clients can crash mod_dav_svn.</topic>
    <affects>
      <package>
	<name>mod_dav_svn</name>
	<range><ge>1.10.0</ge><lt>1.10.3</lt></range>
	<range><eq>1.11.0</eq></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Subversion project reports:</p>
	<blockquote cite="http://subversion.apache.org/security/CVE-2018-11803-advisory.txt">
	  <p>Malicious SVN clients can trigger a crash in mod_dav_svn by omitting
	     the root path from a recursive directory listing request.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>http://subversion.apache.org/security/CVE-2018-11803-advisory.txt</url>
    </references>
    <dates>
      <discovery>2019-01-23</discovery>
      <entry>2019-01-23</entry>
    </dates>
  </vuln>

  <vuln vid="50ad9a9a-1e28-11e9-98d7-0050562a4d7b">
    <topic>www/py-requests -- Information disclosure vulnerability</topic>
    <affects>
      <package>
	<name>py27-requests</name>
	<name>py35-requests</name>
	<name>py36-requests</name>
	<name>py37-requests</name>
	<range><lt>2.20.0</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<blockquote cite="https://cve.mitre.org/cgi-bin/cvename.cgi?name=2018-18074">
	  <p>The Requests package before 2.20.0 for Python sends an HTTP Authorization header
	     to an http URI upon receiving a same-hostname https-to-http redirect, which makes
	     it easier for remote attackers to discover credentials by sniffing the network.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://cve.mitre.org/cgi-bin/cvename.cgi?name=2018-18074</url>
      <url>https://nvd.nist.gov/vuln/detail/CVE-2018-18074</url>
      <url>https://github.com/requests/requests/issues/4716</url>
      <url>https://github.com/requests/requests/pull/4718</url>
      <url>https://github.com/requests/requests/commit/c45d7c49ea75133e52ab22a8e9e13173938e36ff</url>
    </references>
    <dates>
      <discovery>2018-06-27</discovery>
      <entry>2019-01-22</entry>
      <modified>2019-01-27</modified>
    </dates>
  </vuln>

  <vuln vid="6aa398d0-1c4d-11e9-96dd-a4badb296695">
    <topic>joomla3 -- vulnerabilitiesw</topic>
    <affects>
      <package>
	<name>joomla3</name>
	<range><lt>3.9.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>JSST reports:</p>
	<blockquote cite="https://developer.joomla.org/security-centre/760-00190101-core-stored-xss-in-mod-banners.html">
	  <p>Inadequate escaping in mod_banners leads to a stored XSS vulnerability.</p>
	</blockquote>
	<blockquote cite="https://developer.joomla.org/security-centre/761-20190102-core-stored-xss-in-com-contact.html">
	  <p>Inadequate escaping in com_contact leads to a stored XSS vulnerability</p>
	</blockquote>
	<blockquote cite="https://developer.joomla.org/security-centre/762-20190103-core-stored-xss-issue-in-the-global-configuration-textfilter-settings.html">
	  <p>Inadequate checks at the Global Configuration Text Filter settings allowed a stored XSS.</p>
	</blockquote>
	<blockquote cite="https://developer.joomla.org/security-centre/763-20190104-core-stored-xss-issue-in-the-global-configuration-help-url.html">
	  <p>Inadequate checks at the Global Configuration helpurl settings allowed a stored XSS.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://developer.joomla.org/security-centre/760-00190101-core-stored-xss-in-mod-banners.html</url>
      <cvename>CVE-2019-6264</cvename>
      <url>https://developer.joomla.org/security-centre/761-20190102-core-stored-xss-in-com-contact.html</url>
      <cvename>CVE-2019-6261</cvename>
      <url>https://developer.joomla.org/security-centre/762-20190103-core-stored-xss-issue-in-the-global-configuration-textfilter-settings.html</url>
      <cvename>CVE-2019-6263</cvename>
      <url>https://developer.joomla.org/security-centre/763-20190104-core-stored-xss-issue-in-the-global-configuration-help-url.html</url>
      <cvename>CVE-2019-6262</cvename>
    </references>
    <dates>
      <discovery>2018-12-01</discovery>
      <entry>2019-01-20</entry>
    </dates>
  </vuln>

  <vuln vid="e00ed3d9-1c27-11e9-a257-000ffec0b3e1">
    <topic>drupal -- Drupal core - Arbitrary PHP code execution</topic>
    <affects>
      <package>
	<name>drupal7</name>
	<range><lt>7.63</lt></range>
      </package>
      <package>
	<name>drupal8</name>
	<range><lt>8.6.7</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Drupal Security Team reports:</p>
	<blockquote cite="https://www.drupal.org/sa-core-2019-002">
	  <p>A remote code execution vulnerability exists in PHP's built-in
	phar stream wrapper when performing file operations on an untrusted phar:// URI.</p>
	  <p>Some Drupal code (core, contrib, and custom) may be performing file operations on
	insufficiently validated user input, thereby being exposed to this vulnerability.</p>
	  <p>This vulnerability is mitigated by the fact that such code paths typically require
	access to an administrative permission or an atypical configuration.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://www.drupal.org/SA-CORE-2018-006</url>
    </references>
    <dates>
      <discovery>2019-01-16</discovery>
      <entry>2019-01-19</entry>
    </dates>
  </vuln>

  <vuln vid="2a8b79c3-1b6e-11e9-8cf4-1c39475b9f84">
    <topic>Helm -- client unpacking chart that contains malicious content</topic>
    <affects>
      <package>
	<name>helm</name>
	<range><ge>2.0.0</ge><lt>2.12.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Helm security notice</p>
	<blockquote cite="https://helm.sh/blog/helm-security-notice-2019/index.html">
	  <p>A specially crafted chart may be able to unpack content into locations on
		the filesystem outside of the chart's path, potentially
		overwriting existing files.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://helm.sh/blog/helm-security-notice-2019/index.html</url>
    </references>
    <dates>
      <discovery>2019-01-14</discovery>
      <entry>2019-01-18</entry>
    </dates>
  </vuln>

  <vuln vid="ff50192c-19eb-11e9-8573-001b217b3468">
    <topic>Gitlab -- Arbitrary repo read in Gitlab project import</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.6.0</ge><lt>11.6.4</lt></range>
	<range><ge>11.5.0</ge><lt>11.5.7</lt></range>
	<range><ge>8.9.0</ge><lt>11.4.14</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2019/01/16/critical-security-release-gitlab-11-dot-6-dot-4-released/">
	  <p>Arbitrary repo read in Gitlab project import</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2019/01/16/critical-security-release-gitlab-11-dot-6-dot-4-released/</url>
      <cvename>CVE-2019-6240</cvename>
    </references>
    <dates>
      <discovery>2019-01-16</discovery>
      <entry>2019-01-17</entry>
    </dates>
  </vuln>

  <vuln vid="debf6353-5753-4e9a-b710-a83ecdd743de">
    <topic>jenkins -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>jenkins</name>
	<range><lt>2.160</lt></range>
      </package>
      <package>
	<name>jenkins-lts</name>
	<range><lt>2.150.2</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Jenkins Security Advisory:</p>
	<blockquote cite="https://jenkins.io/security/advisory/2019-01-16/">
	  <h1>Description</h1>
	  <h5>(High) SECURITY-868</h5>
	  <p>Administrators could persist access to Jenkins using crafted 'Remember me' cookie</p>
	  <h5>(Medium) SECURITY-901</h5>
	  <p>Deleting a user in an external security realm did not invalidate their session or 'Remember me' cookie</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://jenkins.io/security/advisory/2019-01-16/</url>
    </references>
    <dates>
      <discovery>2019-01-16</discovery>
      <entry>2019-01-16</entry>
    </dates>
  </vuln>

  <vuln vid="383931ba-1818-11e9-92ea-448a5b29e8a9">
    <topic>py-matrix-synapse -- undisclosed vulnerability</topic>
    <affects>
      <package>
	<name>py27-matrix-synapse</name>
	<name>py35-matrix-synapse</name>
	<name>py36-matrix-synapse</name>
	<name>py37-matrix-synapse</name>
	<range><lt>0.34.1.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Matrix developers report:</p>
	  <blockquote cite="https://matrix.org/blog/2019/01/10/critical-security-update-synapse-0-34-0-1-synapse-0-34-1-1/">
	  <p>The matrix team announces the availablility of synapse security releases 0.34.0.1 and 0.34.1.1, fixing CVE-2019-5885.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-5885</cvename>
      <url>https://matrix.org/blog/2019/01/10/critical-security-update-synapse-0-34-0-1-synapse-0-34-1-1/</url>
    </references>
    <dates>
      <discovery>2019-01-10</discovery>
      <entry>2019-01-15</entry>
    </dates>
  </vuln>

  <vuln vid="d38bbb79-14f3-11e9-9ce2-28d244aee256">
    <topic>irssi -- Use after free</topic>
    <affects>
      <package>
	<name>irssi</name>
	<range><ge>1.1.0,1</ge><lt>1.1.2,1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Irssi reports:</p>
	<blockquote cite="https://irssi.org/security/irssi_sa_2019_01.txt">
	  <p>Use after free when hidden lines were expired from the scroll
		  buffer. It may affect the stability of Irssi. (CWE-417, CWE-825)</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://irssi.org/security/irssi_sa_2019_01.txt</url>
      <cvename>CVE-2019-5882</cvename>
      <freebsdpr>ports/234798</freebsdpr>
    </references>
    <dates>
      <discovery>2019-01-09</discovery>
      <entry>2019-01-10</entry>
    </dates>
  </vuln>

  <vuln vid="924bd4f8-11e7-11e9-9fe8-5404a68ad561">
    <topic>uriparser -- Out-of-bounds read</topic>
    <affects>
      <package>
	<name>uriparser</name>
	<range><lt>0.9.1</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Upstream project reports:</p>
	<blockquote cite="https://github.com/uriparser/uriparser/blob/uriparser-0.9.1/ChangeLog">
	  <p>Out-of-bounds read in uriParse*Ex* for incomplete URIs with IPv6
	     addresses with embedded IPv4 address, e.g. "//[::44.1";
	     mitigated if passed parameter afterLast points to readable memory
	     containing a '\0' byte.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/uriparser/uriparser/blob/uriparser-0.9.1/ChangeLog</url>
    </references>
    <dates>
      <discovery>2019-01-02</discovery>
      <entry>2019-01-06</entry>
    </dates>
  </vuln>

  <vuln vid="63e36475-119f-11e9-aba7-080027fee39c">
    <topic>gitea -- insufficient privilege check</topic>
    <affects>
      <package>
	<name>gitea</name>
	<range><lt>1.6.3</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>The Gitea project reports:</p>
	<blockquote cite="https://blog.gitea.io/2019/01/release-of-1.6.3/">
	  <p>Security</p>
	  <ul>
	    <li>Prevent DeleteFilePost doing arbitrary deletion</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://github.com/go-gitea/gitea/issues/5631</url>
    </references>
    <dates>
      <discovery>2019-01-04</discovery>
      <entry>2019-01-06</entry>
    </dates>
  </vuln>

  <vuln vid="720590df-10eb-11e9-b407-080027ef1a23">
    <topic>chromium -- Use after free in PDFium</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>71.0.3578.98</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2018/12/stable-channel-update-for-desktop_12.html">
	  <p>1 security fix contributed by external researches:</p>
	  <ul>
	    <li>High CVE-2018-17481: Use after free in PDFium</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-17481</cvename>
      <url>https://chromereleases.googleblog.com/2018/12/stable-channel-update-for-desktop_12.html</url>
    </references>
    <dates>
      <discovery>2018-12-12</discovery>
      <entry>2019-01-05</entry>
    </dates>
  </vuln>

  <vuln vid="546d4dd4-10ea-11e9-b407-080027ef1a23">
    <topic>chromium -- multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>chromium</name>
	<range><lt>71.0.3578.80</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Google Chrome Releases reports:</p>
	<blockquote cite="https://chromereleases.googleblog.com/2018/12/stable-channel-update-for-desktop.html">
	  <p>43 security fixes in this release, including:</p>
	  <ul>
	    <li>High CVE-2018-17480: Out of bounds write in V8</li>
	    <li>High CVE-2018-17481: Use after free in PDFium</li>
	    <li>High CVE-2018-18335: Heap buffer overflow in Skia</li>
	    <li>High CVE-2018-18336: Use after free in PDFium</li>
	    <li>High CVE-2018-18337: Use after free in Blink</li>
	    <li>High CVE-2018-18338: Heap buffer overflow in Canvas</li>
	    <li>High CVE-2018-18339: Use after free in WebAudio</li>
	    <li>High CVE-2018-18340: Use after free in MediaRecorder</li>
	    <li>High CVE-2018-18341: Heap buffer overflow in Blink</li>
	    <li>High CVE-2018-18342: Out of bounds write in V8</li>
	    <li>High CVE-2018-18343: Use after free in Skia</li>
	    <li>High CVE-2018-18344: Inappropriate implementation in Extensions</li>
	    <li>High To be allocated: Multiple issues in SQLite via WebSQL</li>
	    <li>Medium CVE-2018-18345: Inappropriate implementation in Site Isolation</li>
	    <li>Medium CVE-2018-18346: Incorrect security UI in Blink</li>
	    <li>Medium CVE-2018-18347: Inappropriate implementation in Navigation</li>
	    <li>Medium CVE-2018-18348: Inappropriate implementation in Omnibox</li>
	    <li>Medium CVE-2018-18349: Insufficient policy enforcement in Blink</li>
	    <li>Medium CVE-2018-18350: Insufficient policy enforcement in Blink</li>
	    <li>Medium CVE-2018-18351: Insufficient policy enforcement in Navigation</li>
	    <li>Medium CVE-2018-18352: Inappropriate implementation in Media</li>
	    <li>Medium CVE-2018-18353: Inappropriate implementation in Network Authentication</li>
	    <li>Medium CVE-2018-18354: Insufficient data validation in Shell Integration</li>
	    <li>Medium CVE-2018-18355: Insufficient policy enforcement in URL Formatter</li>
	    <li>Medium CVE-2018-18356: Use after free in Skia</li>
	    <li>Medium CVE-2018-18357: Insufficient policy enforcement in URL Formatter</li>
	    <li>Medium CVE-2018-18358: Insufficient policy enforcement in Proxy</li>
	    <li>Medium CVE-2018-18359: Out of bounds read in V8</li>
	    <li>Low To be allocated: Inappropriate implementation in PDFium</li>
	    <li>Low To be allocated: Use after free in Extensions</li>
	    <li>Low To be allocated: Inappropriate implementation in Navigation</li>
	    <li>Low To be allocated: Inappropriate implementation in Navigation</li>
	    <li>Low To be allocated: Insufficient policy enforcement in Navigation</li>
	    <li>Low To be allocated: Insufficient policy enforcement in URL Formatter</li>
	    <li>Medium To be allocated: Insufficient policy enforcement in Payments</li>
	    <li>Various fixes from internal audits, fuzzing and other initiatives</li>
	  </ul>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2018-17480</cvename>
      <cvename>CVE-2018-17481</cvename>
      <cvename>CVE-2018-18335</cvename>
      <cvename>CVE-2018-18336</cvename>
      <cvename>CVE-2018-18337</cvename>
      <cvename>CVE-2018-18338</cvename>
      <cvename>CVE-2018-18339</cvename>
      <cvename>CVE-2018-18340</cvename>
      <cvename>CVE-2018-18341</cvename>
      <cvename>CVE-2018-18342</cvename>
      <cvename>CVE-2018-18343</cvename>
      <cvename>CVE-2018-18344</cvename>
      <cvename>CVE-2018-18345</cvename>
      <cvename>CVE-2018-18346</cvename>
      <cvename>CVE-2018-18347</cvename>
      <cvename>CVE-2018-18348</cvename>
      <cvename>CVE-2018-18349</cvename>
      <cvename>CVE-2018-18350</cvename>
      <cvename>CVE-2018-18351</cvename>
      <cvename>CVE-2018-18352</cvename>
      <cvename>CVE-2018-18353</cvename>
      <cvename>CVE-2018-18354</cvename>
      <cvename>CVE-2018-18355</cvename>
      <cvename>CVE-2018-18356</cvename>
      <cvename>CVE-2018-18357</cvename>
      <cvename>CVE-2018-18358</cvename>
      <cvename>CVE-2018-18359</cvename>
      <url>https://chromereleases.googleblog.com/2018/12/stable-channel-update-for-desktop.html</url>
    </references>
    <dates>
      <discovery>2018-12-04</discovery>
      <entry>2019-01-05</entry>
    </dates>
  </vuln>

  <vuln vid="3e41c1a6-10bc-11e9-bd85-fcaa147e860e">
    <topic>Django -- Content spoofing possibility in the default 404 page</topic>
    <affects>
      <package>
	<name>py27-django111</name>
	<name>py35-django111</name>
	<name>py36-django111</name>
	<name>py37-django111</name>
	<range><lt>1.11.18</lt></range>
      </package>
      <package>
	<name>py35-django20</name>
	<name>py36-django20</name>
	<name>py37-django20</name>
	<range><lt>2.0.10</lt></range>
      </package>
      <package>
	<name>py35-django21</name>
	<name>py36-django21</name>
	<name>py37-django21</name>
	<range><lt>2.1.5</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p> Django security releases issued reports:</p>
	<blockquote cite="https://www.djangoproject.com/weblog/2019/jan/04/security-releases/">
	  <p>An attacker could craft a malicious URL that could make spoofed content
	    appear on the default page generated by the django.views.defaults.page_not_found()
	    view.</p>
	</blockquote>
      </body>
    </description>
    <references>
      <cvename>CVE-2019-3498</cvename>
      <url>https://www.djangoproject.com/weblog/2019/jan/04/security-releases/</url>
    </references>
    <dates>
      <discovery>2019-01-03</discovery>
      <entry>2019-01-05</entry>
    </dates>
  </vuln>

  <vuln vid="b2f4ab91-0e6b-11e9-8700-001b217b3468">
    <topic>Gitlab -- Multiple vulnerabilities</topic>
    <affects>
      <package>
	<name>gitlab-ce</name>
	<range><ge>11.6.0</ge><lt>11.6.1</lt></range>
	<range><ge>11.5.0</ge><lt>11.5.6</lt></range>
	<range><ge>8.0.0</ge><lt>11.4.13</lt></range>
      </package>
    </affects>
    <description>
      <body xmlns="http://www.w3.org/1999/xhtml">
	<p>Gitlab reports:</p>
	<blockquote cite="https://about.gitlab.com/2018/12/31/security-release-gitlab-11-dot-6-dot-1-released/">
	  <p>Source code disclosure merge request diff</p>
	  <p>Todos improper access control</p>
	  <p>URL rel attribute not set</p>
	  <p>Persistent XSS Autocompletion</p>
	  <p>SSRF repository mirroring</p>
	  <p>CI job token LFS error message disclosure</p>
	  <p>Secret CI variable exposure</p>
	  <p>Guest user CI job disclosure</p>
	  <p>Persistent XSS label reference</p>
	  <p>Persistent XSS wiki in IE browser</p>
	  <p>SSRF in project imports with LFS</p>
	  <p>Improper access control CI/CD settings</p>
	  <p>Missing authorization control merge requests</p>
	  <p>Improper access control branches and tags</p>
	  <p>Missing authentication for Prometheus alert endpoint</p>
	</blockquote>
      </body>
    </description>
    <references>
      <url>https://about.gitlab.com/2018/12/31/security-release-gitlab-11-dot-6-dot-1-released/</url>
      <cvename>CVE-2018-20493</cvename>
      <cvename>CVE-2018-20492</cvename>
      <cvename>CVE-2018-20489</cvename>
      <cvename>CVE-2018-20490</cvename>
      <cvename>CVE-2018-20497</cvename>
      <cvename>CVE-2018-20495</cvename>
      <cvename>CVE-2018-20488</cvename>
      <cvename>CVE-2018-20494</cvename>
      <cvename>CVE-2018-20496</cvename>
      <cvename>CVE-2018-20491</cvename>
      <cvename>CVE-2018-20499</cvename>
      <cvename>CVE-2018-20500</cvename>
      <cvename>CVE-2018-20501</cvename>
      <cvename>CVE-2018-20498</cvename>
      <cvename>CVE-2018-20507</cvename>
    </references>
    <dates>
      <discovery>2018-12-31</discovery>
      <entry>2019-01-02</entry>
    </dates>
  </vuln>
