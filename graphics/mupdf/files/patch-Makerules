--- Makerules.orig	2025-05-19 15:38:05 UTC
+++ Makerules
@@ -131,28 +131,28 @@ else ifeq ($(build),release)
   CFLAGS += -pipe -g
   LDFLAGS += -g
 else ifeq ($(build),release)
-  CFLAGS += -pipe -O2 -DNDEBUG
+  CFLAGS +=  -DNDEBUG
   LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s
 else ifeq ($(build),small)
   CFLAGS += -pipe -Os -DNDEBUG
   LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s
 else ifeq ($(build),valgrind)
-  CFLAGS += -pipe -O2 -DNDEBUG -DPACIFY_VALGRIND
+  CFLAGS +=  -DNDEBUG -DPACIFY_VALGRIND
   LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s
 else ifeq ($(build),sanitize)
   CFLAGS += -pipe -g $(SANITIZE_FLAGS)
   LDFLAGS += -g $(SANITIZE_FLAGS)
 else ifeq ($(build),sanitize-release)
-  CFLAGS += -pipe -O2 -DNDEBUG $(SANITIZE_FLAGS)
+  CFLAGS +=  -DNDEBUG $(SANITIZE_FLAGS)
   LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s $(SANITIZE_FLAGS)
 else ifeq ($(build),profile)
-  CFLAGS += -pipe -O2 -DNDEBUG -pg
+  CFLAGS +=  -DNDEBUG -pg
   LDFLAGS += -pg
 else ifeq ($(build),coverage)
   CFLAGS += -pipe -g -pg -fprofile-arcs -ftest-coverage
   LIBS += -lgcov
 else ifeq ($(build),native)
-  CFLAGS += -pipe -O2 -DNDEBUG -march=native
+  CFLAGS +=  -DNDEBUG -march=native
   LDFLAGS += $(LDREMOVEUNREACH) -Wl,-s
 else ifeq ($(build),memento)
   CFLAGS += -pipe -g -DMEMENTO -DMEMENTO_MUPDF_HACKS
@@ -162,11 +162,11 @@ else ifeq ($(build),memento)
     ifeq ($(OS),OpenBSD)
       LIBS += -L /usr/local/lib -l execinfo
     else
-      LIBS += -ldl
+      LIBS += 
     endif
   endif
 else ifeq ($(build),gperf)
-  CFLAGS += -pipe -O2 -DNDEBUG -DGPERF
+  CFLAGS +=  -DNDEBUG -DGPERF
   LIBS += -lprofiler
 else
   $(error unknown build setting: '$(build)')
@@ -201,6 +201,46 @@ ifeq ($(OS),Darwin)
   LD = xcrun ld
   RANLIB = xcrun ranlib
 
+
+
+# added from FreeBSD ports
+PTHREAD_LIBS := -lthr
+USE_SYSTEM_CURL := yes
+SYS_CURL_CFLAGS := $(shell pkg-config --cflags libcurl)
+SYS_CURL_LIBS := $(shell pkg-config --libs libcurl)
+USE_SYSTEM_FREETYPE := yes
+SYS_FREETYPE_CFLAGS := $(shell pkg-config --cflags freetype2)
+SYS_FREETYPE_LIBS := $(shell pkg-config --libs freetype2)
+HAVE_GLUT := yes
+USE_SYSTEM_GLUT := yes
+SYS_GLUT_CFLAGS := $(shell pkg-config --cflags gl glut)
+SYS_GLUT_LIBS := $(shell pkg-config --libs gl glut)
+USE_SYSTEM_HARFBUZZ := yes
+SYS_HARFBUZZ_CFLAGS := $(shell pkg-config --cflags harfbuzz)
+SYS_HARFBUZZ_LIBS := $(shell pkg-config --libs harfbuzz)
+USE_SYSTEM_JBIG2DEC := yes
+SYS_JBIG2DEC_CFLAGS := $(shell pkg-config --cflags jbig2dec)
+SYS_JIB2DEC_LIBS := $(shell pkg-config --libs jbig2dec)
+USE_SYSTEM_LCMS2 := no
+HAVE_LIBCRYPTO := no
+SYS_LIBCRYPTO_CFLAGS :=
+SYS_LIBCRYPTO_LIBS :=
+USE_SYSTEM_LIBJPEG := yes
+SYS_LIBJPEG_CFLAGS := $(shell pkg-config --cflags libjpeg)
+SYS_LIBJPEG_LIBS := $(shell pkg-config --libs libjpeg)
+USE_SYSTEM_OPENJPEG := yes
+SYS_OPENJPEG_CFLAGS := $(shell pkg-config --cflags libopenjp2)
+SYS_OPENJPEG_LIBS := $(shell pkg-config --libs libopenjp2)
+HAVE_OPENSSL_SSL := no
+HAVE_PTHREAD := yes
+SYS_PTHREAD_CFLAGS :=
+SYS_PTHREAD_LIBS := -lpthread
+HAVE_X11 := yes
+X11_CFLAGS := $(shell pkg-config --cflags x11 xext)
+X11_LIBS := $(shell pkg-config --libs x11 xext)
+USE_SYSTEM_ZLIB := yes
+SYS_ZLIB_CFLAGS := $(shell pkg-config --cflags zlib)
+SYS_ZLIB_LIBS := $(shell pkg-config --libs zlib)
   ifneq ($(ARCHFLAGS),)
     $(warning "MacOS with ARCHFLAGS set. Assuming we are building for arm64, and setting HAVE_LIBCRYPTO to no.")
     HAVE_LIBCRYPTO := no
@@ -220,7 +260,7 @@ else
     HAVE_OBJCOPY := yes
   endif
 
-  ifeq ($(OS),OpenBSD)
+  ifeq ($(OS),FreeBSD)
     LDFLAGS += -pthread
   endif
 
