--- configure.orig	2025-04-14 17:41:37 UTC
+++ configure
@@ -158,10 +158,14 @@ if [ "$OS" = "freebsd" ]; then
 if [ "$OS" = "freebsd" ]; then
   INCCURL="-I/usr/local/include"
   LIBCURL="-L/usr/local/lib -lcurl"
+  INCALSA="-I/usr/local/include"
+  LIBALSA="-L/usr/local/lib"
   INCPULSE="-I/usr/local/include"
   LIBPULSE="-L/usr/local/lib"
   INCPNG="-I/usr/local/include"
   LIBPNG="-L/usr/local/lib -lpng"
+  INCVNCSERVER="-I/usr/local/include"
+  LIBVNCSERVER="-L/usr/local/lib"
 else
   INCCURL=""
   LIBCURL="-lcurl"
@@ -1211,6 +1215,9 @@ extern "C" int main(int argc, char** argv)
   printf("found version %d.%d.%d",
          SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
 #if SDL_VERSION_ATLEAST(1,2,7)
+#if !defined(SDL_VIDEO_DRIVER_X11)
+#error SDL must be compiled with X11 support
+#endif
   printf(", OK.\n");
   return 0;
 #else
@@ -1295,7 +1302,7 @@ EOF
 #endif
 }
 EOF
-  if test_compile "-lasound" asound asound; then
+  if test_compile "$INCALSA $LIBALSA -lasound" asound asound; then
     test_execute
   fi
 }
@@ -1599,6 +1606,7 @@ EOF
         SDKQT6=$PATH_SDK_QT6
       fi
       FLGQT6="-framework QtCore -std=c++17 -Wl,-rpath,`L_to_PATH "$LIBQT6"`"
+      FLGQT6="$FLGQT6 -std=c++11"
     else
       log_failure "Qt6 framework not found (can be disabled using --disable-qt)"
       fail
@@ -1875,9 +1883,9 @@ check_libvorbis()
   if which_wrapper pkg-config > /dev/null; then
     libvorbis_ver=`pkg-config vorbis --modversion 2>> $LOG`
     if [ $? -eq 0 ]; then
-      FLGVRB=`pkg-config vorbis --cflags`
+      FLGVRB=`pkg-config vorbis vorbisenc --cflags`
       INCVRB=`strip_I "$FLGVRB"`
-      LIBVRB=`pkg-config vorbis --libs`
+      LIBVRB=`pkg-config vorbis vorbisenc --libs`
     fi
     cat > $ODIR.tmp_src.cc << EOF
 #include <cstdio>
@@ -1927,7 +1935,7 @@ EOF
   return 0;
 }
 EOF
-    [ -n "$INCOGG" ] && I_INCVRB=`prefix_I "$INCOGG"`
+    [ -n "$INCOGG" ] && I_INCOGG=`prefix_I "$INCOGG"`
     if test_compile "$LIBOGG $I_INCOGG" ogg ogg nofatal; then
       if test_execute; then
         cnf_append "SDK_VBoxLibOgg_INCS" "$INCOGG"
@@ -2194,8 +2202,8 @@ EOF
         echo "compiling the following source file:" >> $LOG
         cat $ODIR.tmp_src.cc >> $LOG
         echo "using the following command line:" >> $LOG
-        echo "$CXX -O -Wall -o $ODIR.tmp_out $ODIR.tmp_src.cc -I$p/include/$d $p/$b/lib$d.so" >> $LOG
-        $CXX -O -Wall -o $ODIR.tmp_out $ODIR.tmp_src.cc -I$p/include/$d $p/$b/lib$d.so >> $LOG 2>&1
+        echo "$CXX -O -Wall -o $ODIR.tmp_out $ODIR.tmp_src.cc -I$p/include/$d $p/$b/lib$d.so -pthread" >> $LOG
+        $CXX -O -Wall -o $ODIR.tmp_out $ODIR.tmp_src.cc -I$p/include/$d $p/$b/lib$d.so -pthread >> $LOG 2>&1
         if [ $? -eq 0 ]; then
           found=1
           break
@@ -2311,7 +2319,7 @@ check_gsoap()
         else
           cnf_append "VBOX_GSOAP_CXX_SOURCES" ""
         fi
-        cnf_append "VBOX_GSOAP_CXX_LIBS"    "`strip_l "$GSOAP_CXX_LIBS"`"
+        cnf_append "VBOX_GSOAP_CXX_LIBS"    "`strip_l "$GSOAP_CXX_LIBS"` z"
         gsoap_version=`pkg-config gsoapssl++ --modversion`
         log_success "found version $gsoap_version"
         return
@@ -2687,7 +2695,7 @@ for option in "$@"; do
     --with-openssl-dir=*)
       OPENSSLDIR=`echo $option | cut -d'=' -f2`
       INCCRYPTO="-I${OPENSSLDIR}/include"
-      LIBCRYPTO="${OPENSSLDIR}/lib/libssl.a ${OPENSSLDIR}/lib/libcrypto.a"
+      LIBCRYPTO="-L${OPENSSLDIR}/lib -lssl -lcrypto"
       # On Darwin (at least for macports) static OpenSSL also needs zlib.
       [ "$OS" = "darwin" ] && LIBCRYPTO="$LIBCRYPTO ${OPENSSLDIR}/lib/libz.a"
       # On Linux static OpenSSL typically needs a few additional libraries.
@@ -3054,12 +3062,22 @@ if [ $ONLY_ADDITIONS -eq 0 ]; then
   [ $WITH_JAVA   -eq 1 ] && check_java
 
   # PulseAudio
-  if [ $WITH_PULSE -eq 1 ]; then
-    check_pulse
-  elif [ $WITH_PULSE -eq 0 ]; then # Force disabling PulseAudio.
-    cnf_append "VBOX_WITH_AUDIO_PULSE" ""
-  elif [ $WITH_PULSE -eq 2 ]; then # --enable-pulse was passed, force PulseAudio.
-    cnf_append "VBOX_WITH_AUDIO_PULSE" "1"
+  if [ "$OS" = "linux" -o "$OS" = "freebsd" -o "$OS" = "netbsd" ]; then
+    if [ $WITH_ALSA -eq 1 ]; then
+      check_alsa
+    else
+      cnf_append "VBOX_WITH_AUDIO_ALSA" ""
+    fi
+    if [ $WITH_PULSE -eq 1 ]; then
+      check_pulse
+    elif [ $WITH_PULSE -eq 0 ]; then # Force disabling PulseAudio.
+      cnf_append "VBOX_WITH_AUDIO_PULSE" ""
+    elif [ $WITH_PULSE -eq 2 ]; then # --enable-pulse was passed, force PulseAudio.
+      cnf_append "VBOX_WITH_AUDIO_PULSE" "1"
+    fi
+    if [ $WITH_DBUS -eq 0 ]; then
+      cnf_append "VBOX_WITH_DBUS" ""
+    fi
   fi
 fi
 
@@ -3075,14 +3093,6 @@ if [ "$OS" = "linux" ]; then
     cnf_append "VBOX_WITHOUT_LINUX_TEST_BUILDS" "1"
   fi
   if [ $ONLY_ADDITIONS -eq 0 ]; then
-    if [ $WITH_ALSA -eq 1 ]; then
-      check_alsa
-    else
-      cnf_append "VBOX_WITH_AUDIO_ALSA" ""
-    fi
-    if [ $WITH_DBUS -eq 0 ]; then
-      cnf_append "VBOX_WITH_DBUS" ""
-    fi
     if [ $WITH_DEVMAPPER -eq 1 ]; then
       check_libdevmapper
     else
