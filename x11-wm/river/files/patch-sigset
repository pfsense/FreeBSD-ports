https://github.com/ziglang/zig/issues/5892

./river/main.zig:82:70: error: container 'std.os' has no member called 'empty_sigset'
            if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.empty_sigset, null) < 0) unreachable;
                                                                     ^
./river/command/spawn.zig:49:66: error: container 'std.os' has no member called 'empty_sigset'
        if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.empty_sigset, null) < 0) unreachable;
                                                                 ^

--- river/command/spawn.zig.orig	2020-11-04 14:30:50 UTC
+++ river/command/spawn.zig
@@ -46,7 +46,7 @@ pub fn spawn(
     if (pid == 0) {
         // Clean things up for the child in an intermediate fork
         if (c.setsid() < 0) unreachable;
-        if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.empty_sigset, null) < 0) unreachable;
+        if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.sigset_t{ .__bits = [_]u32{0} ** std.os._SIG_WORDS }, null) < 0) unreachable;
 
         const pid2 = std.os.fork() catch c._exit(1);
         if (pid2 == 0) std.os.execveZ("/bin/sh", &child_args, std.c.environ) catch c._exit(1);
--- river/main.zig.orig	2020-11-04 14:30:50 UTC
+++ river/main.zig
@@ -79,7 +79,7 @@ pub fn main() anyerror!void {
         const child_args = [_:null]?[*:0]const u8{ "/bin/sh", "-c", cmd, null };
         const pid = try std.os.fork();
         if (pid == 0) {
-            if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.empty_sigset, null) < 0) unreachable;
+            if (std.os.system.sigprocmask(std.os.SIG_SETMASK, &std.os.sigset_t{ .__bits = [_]u32{0} ** std.os._SIG_WORDS }, null) < 0) unreachable;
             std.os.execveZ("/bin/sh", &child_args, std.c.environ) catch c._exit(1);
         }
         break :blk pid;
