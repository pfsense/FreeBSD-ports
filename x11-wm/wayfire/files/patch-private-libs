wf-touch and wf-utils are untagged and have no other consumers. Keep
it private to wayfire package for now.

--- meson.build.orig	2020-11-08 17:19:12 UTC
+++ meson.build
@@ -41,8 +41,8 @@ if not use_system_wfconfig
   wfconfig = subproject('wf-config').get_variable('wfconfig')
 endif
 
-wfutils = subproject('wf-utils').get_variable('wfutils')
-wftouch = subproject('wf-touch').get_variable('wftouch')
+wfutils = subproject('wf-utils', default_options: ['default_library=static']).get_variable('wfutils')
+wftouch = subproject('wf-touch', default_options: ['default_library=static']).get_variable('wftouch')
 
 needs_libinotify = ['freebsd', 'dragonfly'].contains(host_machine.system())
 libinotify       = dependency('libinotify', required: needs_libinotify)
--- subprojects/wf-utils/meson.build.orig	2020-05-11 09:28:45 UTC
+++ subprojects/wf-utils/meson.build
@@ -34,9 +34,10 @@ lib_wfutils = library('wf-utils',
     sources,
     dependencies: [],
     include_directories: wfutils_inc,
-    install: true,
+    install: not meson.is_subproject(),
     version: meson.project_version())
 
+if not meson.is_subproject()
 pkgconfig = import('pkgconfig')
 pkgconfig.generate(
     libraries:    lib_wfutils,
@@ -44,6 +45,7 @@ pkgconfig.generate(
     filebase:     meson.project_name(),
     name:         meson.project_name(),
     description: 'Utilities library for Wayfire')
+endif
 
 install_headers([], subdir: 'wayfire/utils')
 
@@ -85,12 +87,14 @@ headers_root = [
 'wayfire/variant.hpp',
 ]
 
+if not meson.is_subproject()
 install_headers(headers_action, subdir: 'wayfire/action')
 install_headers(headers_condition, subdir: 'wayfire/condition')
 install_headers(headers_lexer, subdir: 'wayfire/lexer')
 install_headers(headers_parser, subdir: 'wayfire/parser')
 install_headers(headers_rule, subdir: 'wayfire/rule')
 install_headers(headers_root, subdir: 'wayfire')
+endif
 
 # -------------------------------------------------------------------------------------------------
 # Unit tests
--- subprojects/wf-touch/meson.build.orig	2020-09-20 09:41:37 UTC
+++ subprojects/wf-touch/meson.build
@@ -5,14 +5,18 @@ project('wf-touch', ['cpp'],
 glm = dependency('glm')
 
 wf_touch_inc_dirs = include_directories('.')
+if not meson.is_subproject()
 install_headers([
 'wayfire/touch/touch.hpp'],
 subdir: 'wayfire/touch')
+endif
 
 wftouch_lib = static_library('wftouch', ['src/touch.cpp', 'src/actions.cpp', 'src/math.cpp'],
-    dependencies: glm, install: true)
+    dependencies: glm, install: not meson.is_subproject())
 
 wftouch = declare_dependency(link_with: wftouch_lib,
     include_directories: wf_touch_inc_dirs, dependencies: glm)
 
+if not meson.is_subproject()
 subdir('test')
+endif
